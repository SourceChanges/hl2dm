         U abort@@GLIBC_2.0
         U access@@GLIBC_2.0
         U acosf@@GLIBC_2.0
         U acos@@GLIBC_2.0
00148bc7 t add_fdes
001a7bc8 d adds.7496
         U asin@@GLIBC_2.0
         U atan2f@@GLIBC_2.0
         U atan2@@GLIBC_2.0
         U atan@@GLIBC_2.0
00148ea2 t base_from_cb_data
001488fa t base_from_object
001a7bd0 A __bss_start
         U cbrtf@@GLIBC_2.0
         U chdir@@GLIBC_2.0
         U chmod@@GLIBC_2.0
         U chown@@GLIBC_2.1
00148aa9 t classify_object_over_fdes
         U closedir@@GLIBC_2.0
001a7be0 b completed.5793
         U cosf@@GLIBC_2.0
         U cos@@GLIBC_2.0
0006cc30 T CreateInterface
001a30b0 d __CTOR_END__
001a3000 d __CTOR_LIST__
001a92b0 B cvar
         U __cxa_atexit@@GLIBC_2.1.3
         w __cxa_finalize@@GLIBC_2.1.3
         U __cxa_guard_abort@@CXXABI_1.3
         U __cxa_guard_acquire@@CXXABI_1.3
         U __cxa_guard_release@@CXXABI_1.3
         U __cxa_pure_virtual@@CXXABI_1.3
00149b05 t __deregister_frame
00149afc t __deregister_frame_info
00149a26 t __deregister_frame_info_bases
         U DevMsg
         U dlclose@@GLIBC_2.0
         U dlerror@@GLIBC_2.0
         U dl_iterate_phdr@@GLIBC_2.2.4
         U dlopen@@GLIBC_2.1
         U dlsym@@GLIBC_2.0
00149d48 t __do_global_ctors_aux
0002e088 t __do_global_dtors_aux
001a3220 d __dso_handle
001a30b8 d __DTOR_END__
001a7be4 b dtor_idx.5795
001a30b4 d __DTOR_LIST__
001b7d84 b dwarf_reg_size_table
001a30c0 a _DYNAMIC
         U __dynamic_cast@@CXXABI_1.3
001a7bd0 A _edata
001b7e98 A _end
         U __errno_location@@GLIBC_2.0
         U Error
00146d3e t execute_cfa_program
001476a1 t execute_stack_op
         U exit@@GLIBC_2.0
         U exp@@GLIBC_2.0
         U fclose@@GLIBC_2.1
00148d26 t fde_mixed_encoding_compare
00148ca9 t fde_single_encoding_compare
00148786 t fde_unencoded_compare
         U fflush@@GLIBC_2.0
         U fgets@@GLIBC_2.0
00149d70 T _fini
         U fopen64@@GLIBC_2.1
         U fopen@@GLIBC_2.1
00162890 r Four_2ToThe21s
00162880 r Four_2ToThe22s
00162870 r Four_2ToThe23s
00162860 r Four_2ToThe24s
00162840 r Four_Epsilons
00162830 r Four_FLT_MAX
001628c0 r Four_Fours
00162820 r Four_Negative_FLT_MAX
001628a0 r Four_NegativeOnes
001628f0 r Four_Ones
001628b0 r Four_Origin
00162850 r Four_Point225s
00162910 r Four_PointFives
001628d0 r Four_Threes
001628e0 r Four_Twos
00162900 r Four_Zeros
         U fprintf@@GLIBC_2.0
         U fputc@@GLIBC_2.0
         U fputs@@GLIBC_2.0
001487ab t frame_downheap
0002e0f7 t frame_dummy
001a0988 r __FRAME_END__
001b7dcc b frame_hdr_cache
001b7dc8 b frame_hdr_cache_head
00148836 t frame_heapsort
0014825d t __frame_state_for
         U free@@GLIBC_2.0
         U freopen@@GLIBC_2.0
         U fwrite@@GLIBC_2.0
001a43b0 d g_EmptyCollisionListener
001489eb t get_cie_encoding
         U GetCPUInformation
         U getcwd@@GLIBC_2.0
         U getenv@@GLIBC_2.0
00148a98 t get_fde_encoding
001af8e0 b g_fDeferDeleteMindist
001a6dd0 d g_IVPToHLDir
001ad1b0 b global_friction_counter
001a31d0 a _GLOBAL_OFFSET_TABLE_
0002db00 t _GLOBAL__sub_I_cvar
0002df90 t _GLOBAL__sub_I_Four_PointFives
0002d6a0 t _GLOBAL__sub_I_g_MeshFrameLocksPool
0002cf60 t _GLOBAL__sub_I_g_PhysicsCollision
0002cd30 t _GLOBAL__sub_I_g_PhysicsUnits
0002d300 t _GLOBAL__sub_I_g_SurfaceDatabase
0002d940 t _GLOBAL__sub_I_g_VPhysPtrSaveRestoreOps
0002dd40 t _GLOBAL__sub_I_ivp_mindist_settings
0002dfb0 t _GLOBAL__sub_I_lineartovertex
0002de20 t _GLOBAL__sub_I_s_bMathlibInitialized
0002db20 t _GLOBAL__sub_I_s_StringCharConversion
0002d7b0 t _GLOBAL__sub_I_stdafx.cpp
0002d7f0 t _GLOBAL__sub_I__Z11InitLeafmapP17IVP_Compact_LedgeP9leafmap_t
0002ce10 t _GLOBAL__sub_I__Z13vphysics_initv
0002cd10 t _GLOBAL__sub_I__Z17ParseFileInternalPKcPcPbP14characterset_tj
0002d240 t _GLOBAL__sub_I__Z18GetOppositeSynapseP20IVP_Synapse_Friction
0002cd70 t _GLOBAL__sub_I__Z19PackLedgeIntoBufferP12packedhull_tR10CUtlBufferPK17IVP_Compact_LedgeRK17virtualmeshlist_t
0002d0a0 t _GLOBAL__sub_I__Z29TransformHLWorldToHavanaLocalRK6VectorP15IVP_Real_Object
0002d4c0 t _GLOBAL__sub_I__Z31ComputePDControllerCoefficientsPffff
0002d900 t _GLOBAL__sub_I__Z9nexttokenPcPKcc
0002df50 t _GLOBAL__sub_I__Z9_SSE_Sqrtf
0002dae0 t _GLOBAL__sub_I__Z9_V_memsetPKciPvii
0002dbb0 t _GLOBAL__sub_I__ZN10CUtlString11AllocMemoryEj
0002dbd0 t _GLOBAL__sub_I__ZN10CUtlSymbol14s_pSymbolTableE
0002da40 t _GLOBAL__sub_I__ZN14ConCommandBase18s_pConCommandBasesE
0002d410 t _GLOBAL__sub_I__ZN14CPhysicsObjectC2Ev
0002dac0 t _GLOBAL__sub_I__ZN16CDataManagerBaseC2Ej
0002cf20 t _GLOBAL__sub_I__ZN16CPhysics_AirboatC2EP15IVP_EnvironmentPK23IVP_Template_Car_SystemP17IPhysicsGameTrace
0002d2c0 t _GLOBAL__sub_I__ZN17CFrictionSnapshotC2EP15IVP_Real_Object
0002dc10 t _GLOBAL__sub_I__ZN18IVP_Freeze_ManagerC2Ev
0002dc60 t _GLOBAL__sub_I__ZN19IVP_Friction_Solver30test_gauss_solution_suggestionEPdPiiP12IVP_U_Memory
0002de80 t _GLOBAL__sub_I__ZN22CPolyhedron_AllocByNew7ReleaseEv
0002dcc0 t _GLOBAL__sub_I__ZN22IVP_BetterDebugmanager19enable_debug_outputE15IVP_DEBUG_CLASS
0002d280 t _GLOBAL__sub_I__ZN23CPhysicsFluidControllerC2EP17CBuoyancyAttacherP29IVP_Liquid_Surface_DescriptorP14CPhysicsObjecti
0002dc80 t _GLOBAL__sub_I__ZN26IVP_Controller_Independent10empty_listE
0002d540 t _GLOBAL__sub_I__ZN30vphysics_save_cphysicsspring_t9m_DataMapE
0002d3a0 t _GLOBAL__sub_I__ZN32vphysics_save_motioncontroller_t9m_DataMapE
0002d200 t _GLOBAL__sub_I__ZN34CPhysics_Car_System_Raycast_WheelsC2EP15IVP_EnvironmentPK23IVP_Template_Car_System
0002d5b0 t _GLOBAL__sub_I__ZN34vphysics_save_cvehiclecontroller_t9m_DataMapE
0002dd60 t _GLOBAL__sub_I__ZN8IVP_BallC2EP11IVP_ClusterPK17IVP_Template_BallPK24IVP_Template_Real_ObjectPK10IVP_U_QuatPK11IVP_U_Point
0002da20 t _GLOBAL__sub_I__ZN9CByteswap23SwapFieldToTargetEndianEPvS0_P17typedescription_t
001a8ba8 b g_MeshFrameLocksPool
         w __gmon_start__
001af8e4 b g_pCurrentMindist
001a92a0 b g_pCVar
001a8040 b g_PhysicsCollision
001a3238 d g_PhysicsInternal
001a3224 d g_PhysicsUnits
001a8ba0 b g_pMeshFrameLocks
001a9290 b g_pProcessUtils
001a9280 b g_pUtlSortVectorQSortContext
00162810 r g_SIMD_0123
001627c0 r g_SIMD_AllOnesMask
00162800 r g_SIMD_clear_signmask
001627d0 r g_SIMD_clear_wmask
00162770 r g_SIMD_ComponentMask
001627b0 r g_SIMD_Low16BitsMask
001627e0 r g_SIMD_lsbmask
001627f0 r g_SIMD_signmask
00162730 r g_SIMD_SkipTailMask
001a84c0 b g_SurfaceDatabase
         U g_Telemetry
001a8c90 b g_VisitHashPool
001a8dc4 b g_VPhysPtrSaveRestoreOps
001a8dc0 b g_VPhysPtrUtlVectorSaveRestoreOps
         U g_VProfCurrentProfile
         U __gxx_personality_v0@@CXXABI_1.3
         U HushAsserts
0002e12e t __i686.get_pc_thunk.bx
00148707 t __i686.get_pc_thunk.cx
         U iconv_close@@GLIBC_2.1
         U iconv@@GLIBC_2.1
         U iconv_open@@GLIBC_2.1
0002cc30 T _init
00146cbe t init_dwarf_reg_size_table
         U isspace@@GLIBC_2.0
         U isupper@@GLIBC_2.0
         U iswspace@@GLIBC_2.0
001ad198 b IVP_CLS
001af8d0 b ivp_debug_indent
001ad1e0 b ivp_debugmanager
001ab9a4 b ivp_debug_sf_indent
001ab970 b ivp_debug_sf_last_node_was_terminal
001ab990 b ivp_debug_sf_max_treedepth
001ab980 b ivp_debug_sf_n_nodes_with_one_terminal
001ab9a0 b ivp_debug_sf_treedepth
001a6f00 d IVP_Hash_crctab
001af900 b ivp_mindist_settings
001a30bc d __JCR_END__
001a30bc d __JCR_LIST__
         w _Jv_RegisterClasses
00146c5c t .L17
00146c26 t .L19
00146c41 t .L20
00147b99 t .L214
00147b9d t .L215
00147ba2 t .L216
00147ba6 t .L217
00147bb2 t .L218
00147bb7 t .L219
00147bc1 t .L220
00147bc5 t .L221
00147bcb t .L222
00147bd1 t .L223
00147bd7 t .L224
00147be9 t .L225
00147be2 t .L226
00147bf7 t .L227
00147bdb t .L228
00147bf0 t .L229
00146c32 t .L23
00147bfe t .L230
00146c46 t .L24
00147c64 t .L244
00146c4e t .L25
00146c55 t .L26
00147db3 t .L271
00147dbd t .L272
00147de9 t .L273
00147e34 t .L274
00147e4d t .L275
00147190 t .L43
001489bf t .L45
0014718b t .L46
00146df4 t .L47
00148989 t .L47
00146e21 t .L48
001489a4 t .L48
00146e3f t .L49
00146e5d t .L50
00146e7a t .L51
00148995 t .L51
00146ea2 t .L52
001489a9 t .L52
00146ed8 t .L53
001489b1 t .L53
00146ebd t .L54
001489b8 t .L54
00146ef3 t .L55
00146f1c t .L56
00146f57 t .L57
00146f7d t .L58
00146fb4 t .L59
00146fd7 t .L60
00146fea t .L61
00147002 t .L62
0014701d t .L63
0014704a t .L64
00147088 t .L65
001470a8 t .L66
001470ca t .L67
001470fd t .L68
00147123 t .L69
00147146 t .L70
00147159 t .L71
         U lchown@@GLIBC_2.0
00148da3 t linear_search_fdes
001b0020 b lineartolightmap
001b1020 b lineartovertex
         U link@@GLIBC_2.0
         U localtime@@GLIBC_2.0
         U log@@GLIBC_2.0
         U longjmp@@GLIBC_2.0
00149ce0 t lstat
00149ce0 t __lstat
         U __lxstat64@@GLIBC_2.2
         U __lxstat@@GLIBC_2.0
         U malloc@@GLIBC_2.0
001b7e94 b marker.7234
0015f2c0 R MAX_OBJECT_ROT_SPEED
         U mbstowcs@@GLIBC_2.0
         U memalign@@GLIBC_2.0
         U memcpy@@GLIBC_2.0
         U memmove@@GLIBC_2.0
         U memset@@GLIBC_2.0
         U mkdir@@GLIBC_2.0
         U mkfifo@@GLIBC_2.0
00149d10 t mknod
00149d10 t __mknod
         U mount@@GLIBC_2.0
         U Msg
001624a4 r nanmask
001a6ec4 d n_physical_pops
001b7da0 b object_mutex
001b7d98 b once_regsizes.7669
         U open64@@GLIBC_2.2
         U opendir@@GLIBC_2.0
         U open@@GLIBC_2.0
001af220 b p_error_buffer
001a7750 d pfFastCos
001a7754 d pfFastSinCos
001a7760 d pfInvRSquared
001a7790 d pfRSqrt
001a7780 d pfRSqrtFast
001a77a0 d pfSqrt
001a7774 d pfVectorNormalize
001a7770 d pfVectorNormalizeFast
001a3278 d physcollision
001a43c8 d physprops
         U Plat_IsInDebugSession
         U Plat_localtime
001a77c0 d power2_n
         U pow@@GLIBC_2.0
001ad190 b P_Pop_Eps
001ad180 b P_Pop_Scal_Eps
001ad170 b P_Pop_Too_Flat_Eps
         U printf@@GLIBC_2.0
         w pthread_cancel@@GLIBC_2.0
         U pthread_mutexattr_init@@GLIBC_2.0
         U pthread_mutexattr_settype@@GLIBC_2.1
         U pthread_mutex_destroy@@GLIBC_2.0
         U pthread_mutex_init@@GLIBC_2.0
         U pthread_mutex_lock@@GLIBC_2.0
         U pthread_mutex_unlock@@GLIBC_2.0
         w pthread_once@@GLIBC_2.0
         U putchar@@GLIBC_2.0
         U puts@@GLIBC_2.0
001ac3a0 b qhmem
001ab9c0 b qh_qh
001ac420 b qh_qhstat
001a6ea0 d qh_rand_seed
001a6eb0 d qh_version
         U qsort@@GLIBC_2.0
0007b9e0 t qsort_s
         U rand@@GLIBC_2.0
         U readdir@@GLIBC_2.0
00146b9a t read_encoded_value
00148942 t read_encoded_value_with_base
00146b50 t read_sleb128
0014873c t read_sleb128
00146b20 t read_uleb128
0014870c t read_uleb128
         U realloc@@GLIBC_2.0
         U realpath@@GLIBC_2.3
00149922 t __register_frame
00149908 t __register_frame_info
0014987a t __register_frame_info_bases
001499e0 t __register_frame_info_table
00149957 t __register_frame_info_table_bases
001499fa t __register_frame_table
         U rename@@GLIBC_2.0
         U rmdir@@GLIBC_2.0
001aff2c b s_bMathlibInitialized
         U scandir@@GLIBC_2.0
0014937c t search_object
001b7dbc b seen_objects
0002dfd0 t set_fast_math
         U _setjmp@@GLIBC_2.0
         U sincosf@@GLIBC_2.1
         U sincos@@GLIBC_2.1
001afb00 b SinCosTable
         U sinf@@GLIBC_2.0
         U sin@@GLIBC_2.0
001488aa t size_of_encoded_value
001a92e0 b s_NoEscConversion
         U sprintf@@GLIBC_2.0
         U sscanf@@GLIBC_2.0
001a9c00 b s_StringCharConversion
00149cb0 t stat
00149cb0 t __stat
         U stderr@@GLIBC_2.0
         U stdout@@GLIBC_2.0
         U strcasecmp@@GLIBC_2.0
         U strcasestr@@GLIBC_2.1
         U strcat@@GLIBC_2.0
         U strchr@@GLIBC_2.0
         U strcmp@@GLIBC_2.0
         U strcpy@@GLIBC_2.0
         U strdup@@GLIBC_2.0
         U strftime@@GLIBC_2.0
         U strlen@@GLIBC_2.0
         U strncasecmp@@GLIBC_2.0
         U strncat@@GLIBC_2.0
         U strncpy@@GLIBC_2.0
         U strpbrk@@GLIBC_2.0
         U strrchr@@GLIBC_2.0
         U strstr@@GLIBC_2.0
         U strtod@@GLIBC_2.0
         U strtok@@GLIBC_2.0
         U strtol@@GLIBC_2.0
         U strtoul@@GLIBC_2.0
001b7dc0 b subs.7497
         U symlink@@GLIBC_2.0
         U tanf@@GLIBC_2.0
         U tan@@GLIBC_2.0
001b7e8c b terminator.7340
         U ThreadGetCurrentId
         U ThreadInterlockedAssignIf
         U ThreadInterlockedAssignIf64
         U ThreadInterlockedExchange
         U ThreadInterlockedIncrement
         U time@@GLIBC_2.0
         U tolower@@GLIBC_2.0
         U toupper@@GLIBC_2.0
         U towlower@@GLIBC_2.0
         U towupper@@GLIBC_2.0
00146a1c t __udivdi3
         U unlink@@GLIBC_2.0
001b7db8 b unseen_objects
00148687 t _Unwind_Backtrace
0014831e t _Unwind_DebugHook
0014866b t _Unwind_DeleteException
00148215 t _Unwind_FindEnclosingFunction
00149b36 t _Unwind_Find_FDE
00148458 t _Unwind_ForcedUnwind
00148017 t _Unwind_ForcedUnwind_Phase2
0014816f t _Unwind_GetCFA
00148247 t _Unwind_GetDataRelBase
00147568 t _Unwind_GetGR
001481d0 t _Unwind_GetIP
001481db t _Unwind_GetIPInfo
001481ff t _Unwind_GetLanguageSpecificData
0014820a t _Unwind_GetRegionStart
00148252 t _Unwind_GetTextRelBase
00148eea t _Unwind_IteratePhdrCallback
00148323 t _Unwind_RaiseException
001480d4 t _Unwind_RaiseException_Phase2
00148503 t _Unwind_Resume
001485aa t _Unwind_Resume_or_Rethrow
0014817a t _Unwind_SetGR
001481f1 t _Unwind_SetIP
00146c88 t _Unwind_SetSpColumn
         U utime@@GLIBC_2.0
         U utimes@@GLIBC_2.0
001471bc t uw_frame_state_for
00147f16 t uw_init_context_1
001475b4 t uw_install_context_1
00147fdd t uw_update_context
00147c78 t uw_update_context_1
001aff10 b vec3_angle
001aff00 b vec3_invalid
001aff20 b vec3_origin
         U vfprintf@@GLIBC_2.0
         U vsnprintf@@GLIBC_2.0
         U vsprintf@@GLIBC_2.0
         U vswprintf@@GLIBC_2.2
         U Warning
         U wcslen@@GLIBC_2.0
         U wcsncat@@GLIBC_2.0
         U wcsncpy@@GLIBC_2.0
         U wcstombs@@GLIBC_2.0
00145440 t __wrap_access
00145b50 t __wrap_chmod
00145c10 t __wrap_chown
00145410 t __wrap_creat
001450b0 t __wrap_fopen
00145190 t __wrap_fopen64
00144fc0 t __wrap_freopen
00145ce0 t __wrap_lchown
00145f10 t __wrap_link
001455c0 t __wrap_lstat
001458e0 t __wrap___lxstat
00145a80 t __wrap___lxstat64
001467e0 t __wrap_mkdir
00146380 t __wrap_mkfifo
00146070 t __wrap_mknod
00146150 t __wrap_mount
00145270 t __wrap_open
00145340 t __wrap_open64
00145750 t __wrap_opendir
00146720 t __wrap_realpath
00146440 t __wrap_rename
001468a0 t __wrap_rmdir
00145680 t __wrap_scandir
00145500 t __wrap_stat
00145db0 t __wrap_symlink
001462c0 t __wrap_unlink
001465a0 t __wrap_utime
00146660 t __wrap_utimes
00145810 t __wrap___xstat
001459b0 t __wrap___xstat64
         U __xmknod@@GLIBC_2.0
         U __xstat64@@GLIBC_2.2
         U __xstat@@GLIBC_2.0
001384d0 t IsDenormal(float const&)
00137820 t MatrixCopy(matrix3x4_t const&, matrix3x4_t&)
000a6cd0 t qh_addhash(void*, setT*, int, unsigned int)
0009b7a0 t qh_divzero(double, double, double, unsigned int*)
000b05b0 t qh_errexit(int, facetT*, ridgeT*)
0009c2f0 t qh_getarea(facetT*)
000a5410 t qh_gethash(int, setT*, int, int, void*)
000a46a0 t qh_memfree(void*, int)
000a47f0 t qh_meminit(_IO_FILE*)
000a4a50 t qh_memsize(int)
0009cf20 t qh_mindiff(double*, double*, int)
000a6030 t qh_pointid(double*)
000ace20 t qh_setcopy(setT*, int)
000ac9f0 t qh_setfree(setT**)
000acb80 t qh_setlast(setT*)
000ad6a0 t qh_setsize(setT*)
000ad7b0 t qh_settemp(int)
000adb70 t qh_setzero(setT*, int, int)
0003c9b0 t ReadRandom(int*)
0013d760 t RotateAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
0006f210 t V_FileBase(char const*, char*, int)
0006d220 t _V_memmove(char const*, int, void*, void const*, int)
0006e290 t V_snprintf(char*, int, char const*, ...)
0006d480 t V_strlower(char*)
0006d620 t V_strnicmp(char const*, char const*, int)
0006dfc0 t V_strnistr(char const*, char const*, int)
0006d2b0 t _V_strrchr(char const*, int, char const*, char)
000702e0 t V_StrRight(char const*, int, char*, int)
00070170 t V_StrSlice(char const*, int, int, char*, int)
0006ff00 t V_StrSubst(char const*, char const*, char const*, char*, int, bool)
00070360 t V_strtowcs(char const*, int, wchar_t*, int)
000703a0 t V_wcstostr(wchar_t const*, int, char*, int)
000700b0 t AllocString(char const*, int)
001392d0 t AngleMatrix(RadianEuler const&, matrix3x4_t&)
00139320 t AngleMatrix(RadianEuler const&, Vector const&, matrix3x4_t&)
00139160 t AngleMatrix(QAngle const&, matrix3x4_t&)
00139290 t AngleMatrix(QAngle const&, Vector const&, matrix3x4_t&)
00139690 t ClearBounds(Vector&, Vector&)
         U ConColorMsg(Color const&, char const*, ...)
00055890 t datamap_t* DataMapInit<vehicleparams_t>(vehicleparams_t*)
000360f0 t datamap_t* DataMapInit<physcollideheader_t>(physcollideheader_t*)
00055620 t datamap_t* DataMapInit<vehicle_axleparams_t>(vehicle_axleparams_t*)
00055340 t datamap_t* DataMapInit<vehicle_bodyparams_t>(vehicle_bodyparams_t*)
00055410 t datamap_t* DataMapInit<vehicle_wheelparams_t>(vehicle_wheelparams_t*)
000361c0 t datamap_t* DataMapInit<compactsurfaceheader_t>(compactsurfaceheader_t*)
000557c0 t datamap_t* DataMapInit<vehicle_engineparams_t>(vehicle_engineparams_t*)
000556f0 t datamap_t* DataMapInit<vehicle_steeringparams_t>(vehicle_steeringparams_t*)
00055220 t datamap_t* DataMapInit<vehicle_operatingparams_t>(vehicle_operatingparams_t*)
00055550 t datamap_t* DataMapInit<vehicle_suspensionparams_t>(vehicle_suspensionparams_t*)
0004f880 t datamap_t* DataMapInit<vphysics_save_cphysicsobject_t>(vphysics_save_cphysicsobject_t*)
000541d0 t datamap_t* DataMapInit<vphysics_save_cphysicsspring_t>(vphysics_save_cphysicsspring_t*)
00038e30 t datamap_t* DataMapInit<vphysics_save_constraintfixed_t>(vphysics_save_constraintfixed_t*)
00038f00 t datamap_t* DataMapInit<vphysics_save_constrainthinge_t>(vphysics_save_constrainthinge_t*)
00039170 t datamap_t* DataMapInit<vphysics_save_constraintlength_t>(vphysics_save_constraintlength_t*)
000390a0 t datamap_t* DataMapInit<vphysics_save_constraintpulley_t>(vphysics_save_constraintpulley_t*)
0004b3f0 t datamap_t* DataMapInit<vphysics_save_motioncontroller_t>(vphysics_save_motioncontroller_t*)
00039310 t datamap_t* DataMapInit<vphysics_save_constraintragdoll_t>(vphysics_save_constraintragdoll_t*)
00038fd0 t datamap_t* DataMapInit<vphysics_save_constraintsliding_t>(vphysics_save_constraintsliding_t*)
000535d0 t datamap_t* DataMapInit<vphysics_save_cshadowcontroller_t>(vphysics_save_cshadowcontroller_t*)
00038bc0 t datamap_t* DataMapInit<vphysics_save_cphysicsconstraint_t>(vphysics_save_cphysicsconstraint_t*)
00055150 t datamap_t* DataMapInit<vphysics_save_cvehiclecontroller_t>(vphysics_save_cvehiclecontroller_t*)
00038d60 t datamap_t* DataMapInit<vphysics_save_constraintaxislimit_t>(vphysics_save_constraintaxislimit_t*)
00038c90 t datamap_t* DataMapInit<vphysics_save_constraintbreakable_t>(vphysics_save_constraintbreakable_t*)
00053500 t datamap_t* DataMapInit<vphysics_save_shadowcontrolparams_t>(vphysics_save_shadowcontrolparams_t*)
00039240 t datamap_t* DataMapInit<vphysics_save_constraintballsocket_t>(vphysics_save_constraintballsocket_t*)
00038a50 t datamap_t* DataMapInit<vphysics_save_cphysicsconstraintgroup_t>(vphysics_save_cphysicsconstraintgroup_t*)
00138350 t FloorDivMod(double, double, int*, int*)
0005aab0 t InitLeafmap(IVP_Compact_Ledge*, leafmap_t*)
0013d8e0 t IRotateAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
00118f30 t ivp_message(char const*, ...)
00118fa0 t p_get_error()
00119670 t p_get_float()
000b5f00 t p_mergesort(void**, int, int, int (*)(void*, void*, char*), char*)
000ba6b0 t qh_addpoint(double*, facetT*, unsigned int)
000adc20 t qh_allstatA()
000ade90 t qh_allstatB()
000ae1f0 t qh_allstatC()
000ae570 t qh_allstatD()
000ae7c0 t qh_allstatE()
000ae990 t qh_allstatF()
000aed20 t qh_allstatG()
000aeff0 t qh_allstatH()
000af340 t qh_allstatI()
000a6160 t qh_delfacet(facetT*)
000a77a0 t qh_delridge(ridgeT*)
000bf040 t qh_detvnorm(vertexT*, vertexT*, setT*, double*)
0009acf0 t qh_distnorm(int, double*, double*, double*)
000b9190 t qh_errexit2(int, facetT*, facetT*)
000b03d0 t qh_errprint(char const*, facetT*, facetT*, ridgeT*, vertexT*)
000bc360 t qh_findbest(double*, facetT*, unsigned int, unsigned int, unsigned int, double*, unsigned int*, int*)
000a7ae0 t qh_findgood(facetT*, int)
000bd330 t qh_getangle(double*, double*)
000a81f0 t qh_isvertex(double*, setT*)
000c0160 t qh_markkeep(facetT*)
0009c920 t qh_maxouter()
000a44c0 t qh_memalloc(int)
000a48e0 t qh_memsetup()
000a5de0 t qh_newfacet()
000a5f40 t qh_newridge()
000afb50 t qh_newstats(int, int*)
000cff90 t qh_premerge(vertexT*, double, double)
000c5620 t qh_printend(_IO_FILE*, int, facetT*, setT*, unsigned int)
000ad3d0 t qh_setcheck(setT*, char const*, int)
000ac860 t qh_setequal(setT*, setT*)
000aca50 t qh_setfree2(setT**, int)
000acb20 t qh_setindex(setT*, void*)
000acf70 t qh_setprint(_IO_FILE*, char const*, setT*)
00070780 t Q_URLDecode(char*, int, char const*, int)
00070750 t Q_URLEncode(char*, int, char const*, int)
0013a320 t SmoothCurve(float)
00143a50 t _SSE_SinCos(float, float*, float*)
0006e1d0 t V_snwprintf(wchar_t*, int, wchar_t const*, ...)
0006e2f0 t V_vsnprintf(char*, int, char const*, char*)
0006d3d0 t _V_wcslower(char const*, int, wchar_t*)
0003c9d0 t WriteRandom(int*)
001395d0 t AngleIMatrix(RadianEuler const&, matrix3x4_t&)
00139480 t AngleIMatrix(QAngle const&, matrix3x4_t&)
00139620 t AngleIMatrix(QAngle const&, Vector const&, matrix3x4_t&)
001387b0 t AngleVectors(QAngle const&, Vector*)
00138840 t AngleVectors(QAngle const&, Vector*, Vector*, Vector*)
00054590 t CreateSpring(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, springparams_t*)
00137bb0 t CrossProduct(float const*, float const*, float*)
0005aa50 t CrossProduct(Vector const&, Vector const&, Vector&) [clone .constprop.78]
0013cc40 t Cubic_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00119240 t gbs_add_path(char*, char*)
0005af10 t GetStartVert(leafmap_t const*, IVP_U_Float_Point const&, int&, int&)
00137130 t _InvRSquared(float const*)
00052740 t IsZeroVector(IVP_U_Point const&)
0013e620 t MathLib_Init(float, float, float, int, bool, bool, bool, bool)
00137370 t MatrixAngles(matrix3x4_t const&, float*)
0013a9a0 t MatrixAngles(matrix3x4_t const&, Quaternion&, Vector&)
001374f0 t MatrixAngles(matrix3x4_t const&, RadianEuler&, Vector&)
001378f0 t MatrixInvert(matrix3x4_t const&, matrix3x4_t&)
00119710 t p_get_string()
000bacd0 t qh_buildhull()
000c9b50 t qh_checkzero(unsigned int)
000a7800 t qh_delvertex(vertexT*)
0009b5f0 t qh_detjoggle(double*, int, int)
000bf960 t qh_detvridge(vertexT*)
000bc000 t qh_distplane(double*, facetT*, double*)
0009adc0 t qh_distround(int, double, double)
0009bdd0 t qh_facetarea(facetT*)
0009f930 t qh_freebuild(unsigned int)
0009fcd0 t qh_freeqhull(unsigned int)
000bcf70 t qh_gausselim(double**, int, int, unsigned int*, unsigned int*)
000bd480 t qh_getcenter(setT*)
000ca640 t qh_hashridge(setT*, int, ridgeT*, vertexT*)
000abe70 t qh_initbuild()
000a19c0 t qh_initflags(char*)
0009c8d0 t qh_maxabsval(double*, int)
0009ce30 t qh_minabsval(double*, int)
000b0230 t qh_new_qhull(int, int, double*, unsigned int, char*, _IO_FILE*, _IO_FILE*)
000a89c0 t qh_newvertex(double*)
000bdb10 t qh_normalize(double*, int, unsigned int)
000a9630 t qh_point_add(setT*, double*, void*)
0009d140 t qh_pointdist(double*, double*, int)
000cfd10 t qh_postmerge(char const*, double, double, unsigned int)
000b9790 t qh_precision(char const*)
0009dc70 t qh_scalelast(double*, int, int, double, double, double)
000ad4a0 t qh_setaddnth(setT**, int, void*)
000acdc0 t qh_setappend(setT**, void*)
000ad330 t qh_setdelnth(setT*, int)
000acca0 t qh_setlarger(setT**)
000adb20 t qh_setunique(setT**, void*)
000c5330 t qh_skipfacet(facetT*)
00137ea0 t VectorAngles(float const*, float*)
00138b10 t VectorAngles(Vector const&, QAngle&)
00138c70 t VectorAngles(Vector const&, Vector const&, QAngle&)
00137e20 t VectorMatrix(Vector const&, matrix3x4_t&)
00137690 t VectorRotate(float const*, matrix3x4_t const&, float*)
0013b120 t VectorRotate(Vector const&, Quaternion const&, Vector&)
001393c0 t VectorRotate(Vector const&, QAngle const&, Vector&)
00137330 t VectorsEqual(float const*, float const*)
0006f590 t V_FixSlashes(char*, char)
0006e4c0 t V_pretifymem(float, int, bool)
0006e6d0 t V_pretifynum(long long)
0006e230 t V_vsnwprintf(wchar_t*, int, wchar_t const*, char*)
0013e990 t AngleDistance(float, float)
0013e840 t ApproachAngle(float, float, float)
0005bb10 t FreeVisitHash(CVisitHash*)
00144350 t GammaToLinear(float)
000704d0 t iHexCharToInt(char)
001443a0 t LinearToGamma(float)
00137ac0 t MatrixScaleBy(float, matrix3x4_t&)
00137c30 t MatrixVectors(matrix3x4_t const&, Vector*, Vector*, Vector*)
00064160 t ParseKeyvalue(char const*, char (&) [1024], char (&) [1024])
0006f1f0 t PATHSEPARATOR(char)
001190c0 t p_make_string(char const*, ...)
0013ed30 t PolyFromPlane(Vector*, Vector const&, float, float)
00118fb0 t p_print_error()
000cf9f0 t qh_all_merges(unsigned int, unsigned int)
000bbe10 t qh_backnormal(double**, int, int, unsigned int, double*, unsigned int*)
000aaab0 t qh_checkfacet(facetT*, unsigned int, unsigned int*)
0009a7c0 t qh_copypoints(double*, int, int)
0009aa80 t qh_detsimplex(double*, setT*, int, unsigned int*)
000bfa10 t qh_detvridge3(vertexT*, vertexT*)
000c0070 t qh_geomplanes(facetT*, double*, double*)
000bdcc0 t qh_getcentrum(facetT*)
000ca760 t qh_makeridges(facetT*)
0009c980 t qh_maxsimplex(int, setT*, double*, int, setT**)
000ced20 t qh_mergecycle(facetT*, facetT*)
000cdf70 t qh_mergefacet(facetT*, facetT*, double*, double*, unsigned int)
000a8890 t qh_nearvertex(facetT*, double*, double*)
000bd670 t qh_normalize2(double*, int, unsigned int, double*, unsigned int*)
0009d010 t qh_outerinner(facetT*, double*, double*)
000a96e0 t qh_pointfacet()
000c7e30 t qh_printbegin(_IO_FILE*, int, facetT*, setT*, unsigned int)
000c25d0 t qh_printfacet(_IO_FILE*, facetT*)
000aa780 t qh_printlists()
000c1460 t qh_printpoint(_IO_FILE*, char const*, double*)
000c1810 t qh_printridge(_IO_FILE*, ridgeT*)
000afde0 t qh_printstats(_IO_FILE*, int, int*)
000bf870 t qh_printvnorm(_IO_FILE*, vertexT*, vertexT*, setT*, unsigned int)
000c41e0 t qh_readpoints(int*, int*, unsigned int*)
000aa880 t qh_resetlists(unsigned int)
0009e220 t qh_scaleinput()
000adac0 t qh_setcompact(setT*)
000ac790 t qh_setdellast(setT*)
000ad610 t qh_setreplace(setT*, void*, void*)
000ad870 t qh_settemppop()
000cd320 t qh_tracemerge(facetT*, facetT*)
000cdf30 t qh_willdelete(facetT*, facetT*)
0013ac30 t QuaternionAdd(Quaternion const&, Quaternion const&, Quaternion&)
00079710 t Q_UTF16ToUTF8(unsigned short const*, char*, int, EStringConvertErrorPolicy)
00079cf0 t Q_UTF32ToUTF8(wchar_t const*, char*, int, EStringConvertErrorPolicy)
000790f0 t Q_UTF8ToUTF16(char const*, unsigned short*, int, EStringConvertErrorPolicy)
00079450 t Q_UTF8ToUTF32(char const*, wchar_t*, int, EStringConvertErrorPolicy)
0013eb70 t RotationDelta(QAngle const&, QAngle const&, QAngle*)
0013d460 t TransformAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
0006fa70 t V_AppendSlash(char*, int)
0006f170 t V_binarytohex(unsigned char const*, int, char*, int)
00137b80 t VectorCompare(float const*, float const*)
00137720 t VectorIRotate(float const*, matrix3x4_t const&, float*)
00137cb0 t VectorVectors(Vector const&, Vector&, Vector&)
0006f8e0 t V_GetFileName(char const*)
0006f0c0 t V_hextobinary(char const*, int, unsigned char*, int)
0002cdb0 t vphysics_init()
00070b20 t V_SplitString(char const*, char const*, CUtlVector<char*, CUtlMemory<char*, int> >&)
0006ef20 t _V_UCS2ToUTF8(unsigned short const*, char*, int)
0006efe0 t _V_UTF8ToUCS2(char const*, int, unsigned short*, int)
00061ac0 t AllocVisitHash()
0013e9f0 t AngleNormalize(float)
0013ea90 t AnglesAreEqual(float, float, float)
00138520 t BoxOnPlaneSide(float const*, float const*, cplane_t const*)
000704b0 t cIntToHexDigit(int)
00142fd0 t ClipPolyhedron(CPolyhedron const*, float const*, int, float, bool)
0013c6e0 t Hermite_Spline(float, float, float, float)
0013c540 t Hermite_Spline(float, float, float, float, float)
0013c730 t Hermite_Spline(Quaternion const&, Quaternion const&, Quaternion const&, float, Quaternion&)
0013c640 t Hermite_Spline(Vector const&, Vector const&, Vector const&, float, Vector&)
0013c420 t Hermite_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00055950 t IsVehicleWheel(IVP_Real_Object*)
0013d5e0 t ITransformAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
00116630 t ivp_byte_swap2(unsigned short&)
00116600 t ivp_byte_swap4(unsigned int&)
000ea000 t ivp_dummy_func()
001176b0 t ivp_srand_read()
00119040 t p_export_error(char const*, ...)
000a4cd0 t qh_appendfacet(facetT*)
0009f600 t qh_appendprint(qh_PRINT)
000a6dc0 t qh_checkconvex(facetT*, int)
000a6d10 t qh_check_point(double*, facetT*, double*, double*, facetT**, facetT**)
000a7570 t qh_checkvertex(vertexT*)
000c75f0 t qh_countfacets(facetT*, setT*, unsigned int, int*, int*, int*, int*, int*)
0009a8c0 t qh_determinant(double**, int, unsigned int*)
0009ae50 t qh_detroundoff()
000bfbc0 t qh_eachvoronoi(_IO_FILE*, void (*)(_IO_FILE*, vertexT*, vertexT*, setT*, unsigned int), vertexT*, unsigned int, qh_RIDGE, unsigned int)
000bffa0 t qh_facet2point(facetT*, double**, double**, double*)
0009f580 t qh_facetcenter(setT*)
000bcaf0 t qh_findbestnew(double*, facetT*, double*, unsigned int*, int*)
000ba240 t qh_findhorizon(double*, facetT*, int*, int*)
0009f680 t qh_freebuffers()
000a80d0 t qh_furthestout(facetT*)
000bd560 t qh_getdistance(facetT*, facetT*, double*, double*)
000ccf60 t qh_getmergeset(facetT*)
000abaa0 t qh_initialhull(setT*)
0009e7e0 t qh_joggleinput()
000c6100 t qh_markvoronoi(facetT*, setT*, unsigned int, unsigned int*, int*)
000cb870 t qh_mergeridges(facetT*, facetT*)
000cbe30 t qh_newvertices(setT*)
000a8e80 t qh_nextridge3d(ridgeT*, facetT*, vertexT**)
000afb00 t qh_nostatistic(int)
000a90a0 t qh_outcoplanar()
000a9f90 t qh_pointvertex()
000c57f0 t qh_printafacet(_IO_FILE*, int, facetT*, unsigned int)
000c04f0 t qh_printcenter(_IO_FILE*, int, char const*, facetT*)
000c8d70 t qh_printfacets(_IO_FILE*, int, facetT*, setT*, unsigned int)
0009d230 t qh_printmatrix(_IO_FILE*, char const*, double**, int, int)
000c2720 t qh_printpoint3(_IO_FILE*, double*)
0009d2e0 t qh_printpoints(_IO_FILE*, char const*, setT*)
000c1550 t qh_printvertex(_IO_FILE*, vertexT*)
000bef30 t qh_printvridge(_IO_FILE*, vertexT*, vertexT*, setT*, unsigned int)
000c2680 t qh_projectdim3(double*, double*)
000a60b0 t qh_removefacet(facetT*)
0009dc00 t qh_rotateinput(double**)
0009de30 t qh_scalepoints(double*, int, int, double*, double*)
0009e2a0 t qh_setdelaunay(int, int, double*)
000c40b0 t qh_setfeasible(int)
000acaa0 t qh_setfreelong(setT**)
000ad980 t qh_settempfree(setT**)
000ad910 t qh_settemppush(setT*)
000ada40 t qh_settruncate(setT*, int)
0006e8d0 t Q_IsMeanSpaceW(wchar_t)
00052550 t QuaternionDiff(IVP_U_Quat const&, IVP_U_Quat const&, IVP_U_Quat&)
0013acf0 t QuaternionMult(Quaternion const&, Quaternion const&, Quaternion&)
000707e0 t Q_URLDecodeRaw(char*, int, char const*, int)
000707b0 t Q_URLEncodeRaw(char*, int, char const*, int)
00079a30 t Q_UTF16ToUTF32(unsigned short const*, wchar_t*, int, EStringConvertErrorPolicy)
00079fd0 t Q_UTF32ToUTF16(wchar_t const*, unsigned short*, int, EStringConvertErrorPolicy)
0007a2f0 t Q_UTF32ToUTF32(wchar_t const*, wchar_t*, int, EStringConvertErrorPolicy)
00138f20 t SetScaleMatrix(float, float, float, matrix3x4_t&)
00139700 t SolveQuadratic(float, float, float, float&, float&)
001438e0 t _SSE_RSqrtFast(float)
0006cfa0 t Sys_GetFactory(CSysModule*)
0006cfe0 t Sys_GetFactory(char const*)
0006cdb0 t Sys_LoadModule(char const*, Sys_Flags)
00061eb0 t TraceGetAABB_r(Vector*, Vector*, IVP_Compact_Ledgetree_Node const*, CTraceIVP&)
000590a0 t VirtualMeshPSI()
0006f4d0 t V_SetExtension(char*, char const*, int)
000709f0 t V_SplitString2(char const*, char const**, int, CUtlVector<char*, CUtlMemory<char*, int> >&)
0006f650 t V_StripLastDir(char*, int)
0006e350 t V_vsnprintfRet(char*, int, char const*, char*, bool*)
0013b300 t AngleQuaternion(RadianEuler const&, Quaternion&)
0013b410 t AngleQuaternion(QAngle const&, Quaternion&)
00143e80 t BuildGammaTable(float, float, float, int)
0013eff0 t ClipPolyToPlane(Vector*, int, Vector*, Vector const&, float, float)
00138000 t ConcatRotations(float const (*) [3], float const (*) [3], float (*) [3])
000697c0 t ConVar_Register(int, IConCommandBaseAccessor*)
0002e450 t ConvertBoxToIVP(Vector const&, Vector const&, Vector&, Vector&)
0006cc40 t GetModuleHandle(char const*)
001372d0 t InitSinCosTable()
00144790 t LinearToTexture(float)
00137a50 t MatrixGetColumn(matrix3x4_t const&, int, Vector&)
00137a80 t MatrixSetColumn(Vector const&, int, matrix3x4_t&)
001390e0 t MatrixTranspose(matrix3x4_t&)
00139110 t MatrixTranspose(matrix3x4_t const&, matrix3x4_t&)
000a4d60 t qh_appendvertex(vertexT*)
000c9970 t qh_basevertices(facetT*)
000b8dd0 t qh_buildtracing(double*, facetT*)
000c9a50 t qh_checkconnect()
000a5120 t qh_checkflipped(facetT*, double*, unsigned int)
000aa000 t qh_check_maxout()
000ac4d0 t qh_check_output()
000a9bf0 t qh_check_points()
000ab550 t qh_checkpolygon(facetT*)
000a76e0 t qh_clearcenters(qh_CENTER)
0009a850 t qh_crossproduct(int, double*, double*, double*)
000a8f10 t qh_facet3vertex(facetT*)
000a7e40 t qh_findgood_all(facetT*)
0009c0e0 t qh_findgooddist(double*, facetT*, double*, facetT**)
000ce820 t qh_forcedmerges(unsigned int*)
000aa4e0 t qh_furthestnext()
0009c4d0 t qh_gram_schmidt(int, double**)
000a81c0 t qh_infiniteloop(facetT*)
0009c770 t qh_inthresholds(double*, double*)
000a64c0 t qh_makenewfacet(setT*, unsigned int, facetT*)
000a4730 t qh_memfreeshort(int*, int*)
000cb550 t qh_mergefacet2d(facetT*, facetT*)
000cbe80 t qh_mergesimplex(facetT*, facetT*, unsigned int)
000a8730 t qh_nearcoplanar()
000a8950 t qh_newhashtable(int)
000b91e0 t qh_nextfurthest(facetT**)
000b9e00 t qh_partitionall(setT*, double*, int)
000aa440 t qh_prependfacet(facetT*, facetT**)
000c3af0 t qh_printcentrum(_IO_FILE*, facetT*, double)
000c1380 t qh_printpointid(_IO_FILE*, char const*, int, double*, int)
000c27a0 t qh_printspheres(_IO_FILE*, setT*, double)
000bb500 t qh_printsummary(_IO_FILE*)
000c63b0 t qh_printvoronoi(_IO_FILE*, int, facetT*, setT*, unsigned int)
0009e420 t qh_projectinput()
000bdb50 t qh_projectpoint(double*, facetT*, double)
0009d8f0 t qh_randomfactor()
0009d960 t qh_randommatrix(double*, int, double**)
000c3eb0 t qh_readfeasible(int, char*)
000a6440 t qh_removevertex(vertexT*)
000cc780 t qh_renamevertex(vertexT*, vertexT*, setT*, facetT*, facetT*)
0009da30 t qh_rotatepoints(double*, int, int, double**)
000ad590 t qh_setaddsorted(setT**, void*)
000ac7f0 t qh_setdelsorted(setT*, void*)
000ad730 t qh_setduplicate(setT*, int)
0009eb40 t qh_sethalfspace(int, double*, double**, double*, double*, double*)
000cd4e0 t qh_tracemerging()
000cd590 t qh_updatetested(facetT*, facetT*)
000cd710 t qh_vertexridges(vertexT*)
000ac690 t qh_vertexsubset(setT*, setT*)
0013a3f0 t QuaternionAlign(Quaternion const&, Quaternion const&, Quaternion&)
0013a950 t QuaternionBlend(Quaternion const&, Quaternion const&, float, Quaternion&)
0013ab20 t QuaternionScale(Quaternion const&, float, Quaternion&)
0013a6a0 t QuaternionSlerp(Quaternion const&, Quaternion const&, float, Quaternion&)
00078a60 t Q_UChar32ToUTF8(wchar_t, char*)
00078f70 t Q_UnicodeLength(char const*)
00078fc0 t Q_UnicodeLength(unsigned short const*)
00079010 t Q_UnicodeLength(wchar_t const*)
0007b5e0 t Q_UnicodeRepair(char*, EStringConvertErrorPolicy)
0007b7c0 t Q_UnicodeRepair(unsigned short*, EStringConvertErrorPolicy)
0007b9c0 t Q_UnicodeRepair(wchar_t*, EStringConvertErrorPolicy)
00078b60 t Q_UTF8ToUChar32(char const*, wchar_t&, bool&)
0013d2f0 t RangeCompressor(float, float, float, float)
0006ccb0 t Sys_LoadLibrary(char const*, Sys_Flags)
00144760 t TextureToLinear(int)
00137550 t VectorTransform(float const*, matrix3x4_t const&, float*)
0013a130 t VectorYawRotate(Vector const&, float, Vector&)
0006fec0 t V_FixupPathName(char*, unsigned int, char const*)
0006f540 t V_StripFilename(char*)
001396c0 t AddPointToBounds(Vector const&, Vector&, Vector&)
00138270 t ConcatTransforms(matrix3x4_t const&, matrix3x4_t const&, matrix3x4_t&)
00116700 t ivp_free_aligned(void*)
001165f0 t ivp_memory_check(void*)
00137880 t MatricesAreEqual(matrix3x4_t const&, matrix3x4_t const&, float)
001377b0 t MatrixInitialize(matrix3x4_t&, Vector const&, Vector const&, Vector const&, Vector const&)
0013b5b0 t MatrixQuaternion(matrix3x4_t const&, Quaternion&)
000b2fa0 t p_ab_quad_length(P_Sur_2D_Point*, P_Sur_2D_Point*, P_Sur_2D_Point*)
0013d100 t Parabolic_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000b1fa0 t p_check_for_flat(IVP_Tri_Edge*, IVP_Tri_Edge*, double)
001196f0 t p_get_next_token()
000af510 t qh_allstatistics()
000c9ee0 t qh_copynonconvex(ridgeT*)
000a8cc0 t qh_createsimplex(setT*)
000a6300 t qh_deletevisible()
000c6b10 t qh_facetvertices(facetT*, setT*, unsigned int)
000a7950 t qh_findbestfacet(double*, unsigned int, double*, unsigned int*)
0009bf60 t qh_findbestsharp(double*, facetT**, double*, int*)
000ca330 t qh_findbest_test(unsigned int, facetT*, facetT*, facetT**, double*, double*, double*)
000a7850 t qh_findfacet_all(double*, double*, unsigned int*, int*)
000cf730 t qh_flippedmerges(facetT*, unsigned int*)
000a0030 t qh_initqhull_mem()
000a8b20 t qh_makenewfacets(double*)
000a5520 t qh_makenewplanes()
000a5690 t qh_matchneighbor(facetT*, int, int, int*)
000a55a0 t qh_matchvertices(int, setT*, int, setT*, int*, unsigned int*)
000a4b00 t qh_memstatistics(_IO_FILE*)
000cbb40 t qh_mergevertices(setT*, setT**)
0009cf80 t qh_orientoutside(facetT*)
000c53e0 t qh_printend4geom(_IO_FILE*, facetT*, int*, unsigned int)
000c71a0 t qh_printextremes(_IO_FILE*, facetT*, setT*, int)
000c6a10 t qh_printvdiagram(_IO_FILE*, int, facetT*, setT*, unsigned int)
000c1780 t qh_printvertices(_IO_FILE*, char const*, setT*)
0009d5e0 t qh_projectpoints(signed char*, int, double*, int, int, double*, int)
000ace90 t qh_setappend_set(setT**, setT*)
000ac980 t qh_setequal_skip(setT*, int, setT*, int)
000be690 t qh_setfacetplane(facetT*)
000b0920 t qh_user_memsizes()
000789d0 t Q_IsValidUChar32(wchar_t)
0013b5e0 t QuaternionAngles(Quaternion const&, RadianEuler&)
0013b160 t QuaternionAngles(Quaternion const&, QAngle&)
0013a730 t QuaternionInvert(Quaternion const&, Quaternion&)
0013af30 t QuaternionMatrix(Quaternion const&, matrix3x4_t&)
0013b0d0 t QuaternionMatrix(Quaternion const&, Vector const&, matrix3x4_t&)
00078b10 t Q_UChar32ToUTF16(wchar_t, unsigned short*)
00079030 t Q_UnicodeAdvance(char*, int)
00079080 t Q_UnicodeAdvance(unsigned short*, int)
000790d0 t Q_UnicodeAdvance(wchar_t*, int)
00078d20 t Q_UTF16ToUChar32(unsigned short const*, wchar_t&, bool&)
001384f0 t SignbitsForPlane(cplane_t*)
0013b650 t Spline_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, Vector&, Vector&)
00143a00 t _SSE_InvRSquared(float const*)
0006cf80 t Sys_UnloadModule(CSysModule*)
00061b40 t TraceGetExtent_r(IVP_Compact_Ledgetree_Node const*, CTraceIVP&, Vector const&, float&, Vector&)
001375f0 t VectorITransform(float const*, matrix3x4_t const&, float*)
001371f0 t _VectorNormalize(Vector&)
0006fe90 t V_IsAbsolutePath(char const*)
0006f3a0 t V_StripExtension(char const*, char*, int)
0006ede0 t _V_UCS2ToUnicode(unsigned short const*, wchar_t*, int)
0006ee90 t _V_UnicodeToUCS2(wchar_t const*, int, char*, int)
0013b520 t BasisToQuaternion(Vector const&, Vector const&, Vector const&, Quaternion&)
00068e20 t CharacterSetBuild(characterset_t*, char const*)
00050f70 t ComputeController(IVP_U_Float_Point&, IVP_U_Float_Point const&, float, float, float, float, IVP_U_Float_Point*)
00051240 t ComputeController(IVP_U_Float_Point&, IVP_U_Float_Point const&, IVP_U_Float_Point const&, float, float, IVP_U_Float_Point*)
0006a550 t ConVar_PrintFlags(ConCommandBase const*)
00069870 t ConVar_Unregister()
0002e6e0 t ConvertMatrixToHL(IVP_U_Matrix const&, matrix3x4_t&)
00059730 t CreateVirtualMesh(virtualmeshparams_t const&)
00140bd0 t FindPointInPlanes(float const*, int)
00119170 t GBS_remove_escape(char*)
00141330 t GetTempPolyhedron(unsigned short, unsigned short, unsigned short, unsigned short)
0011a630 t ivp_indent_output()
00137b50 t MatrixScaleByZero(matrix3x4_t&)
0002e140 t ParseFileInternal(char const*, char*, bool*, characterset_t*, unsigned int)
000b2f60 t p_count_reachable(P_Sur_2D_Point*)
000c9820 t qh_appendmergeset(facetT*, facetT*, mergeType, double*)
000a9800 t qh_check_bestdist()
000a5220 t qh_facetintersect(facetT*, facetT*, int*, int*, int)
000cd810 t qh_find_newvertex(vertexT*, setT*, setT*)
000af9d0 t qh_freestatistics()
000ca6a0 t qh_hashridge_find(setT*, int, ridgeT*, vertexT*, vertexT*, int*)
000af9e0 t qh_initstatistics()
000a1320 t qh_initthresholds(char*)
000ca940 t qh_mark_dupridges(facetT*)
000a5ab0 t qh_matchnewfacets()
000a4810 t qh_meminitbuffers(int, int, int, int, int)
000cef90 t qh_mergecycle_all(facetT*, unsigned int*)
000cb710 t qh_mergeneighbors(facetT*, facetT*)
000b9810 t qh_partitionpoint(double*, facetT*)
000b0840 t qh_printfacetlist(facetT*, setT*, unsigned int)
000aa590 t qh_printhashtable(_IO_FILE*)
000c28a0 t qh_printline3geom(_IO_FILE*, double*, double*, double*)
000c2a40 t qh_printpointvect(_IO_FILE*, double*, double*, double*, double, double*)
000afc00 t qh_printstatlevel(_IO_FILE*, int, int)
000c14a0 t qh_printvdiagram2(_IO_FILE*, void (*)(_IO_FILE*, vertexT*, vertexT*, setT*, unsigned int), setT*, qh_RIDGE, unsigned int)
000c9370 t qh_produce_output()
000cf570 t qh_reducevertices()
000ac620 t qh_setvoronoi_all()
000a6a00 t qh_updatevertices()
0009f0f0 t qh_voronoi_center(int, setT*)
00078e10 t Q_UnicodeValidate(char const*)
00078e80 t Q_UnicodeValidate(unsigned short const*)
00078ee0 t Q_UnicodeValidate(wchar_t const*)
001400f0 t R_CullBoxSkipNear(Vector const&, Vector const&, Frustum_t const&)
00050070 t SavePhysicsObject(physsaveparams_t const&, CPhysicsObject*)
000547e0 t SavePhysicsSpring(physsaveparams_t const&, CPhysicsSpring*)
00138ea0 t SetIdentityMatrix(matrix3x4_t&)
0013a370 t SmoothCurve_Tweak(float, float, float)
001443f0 t SrgbGammaToLinear(float)
00144480 t SrgbLinearToGamma(float)
0006d770 t StringAfterPrefix(char const*, char const*)
0006d010 t Sys_LoadInterface(char const*, char const*, CSysModule**, void**)
0006fad0 t V_ComposeFileName(char const*, char const*, char*, int)
0006f7a0 t V_ExtractFilePath(char const*, char*, int)
00144510 t X360GammaToLinear(float)
00144680 t X360LinearToGamma(float)
0013d080 t BSpline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
0013dd80 t CalcDistanceToLine(Vector const&, Vector const&, Vector const&, float*)
0013b790 t Catmull_Rom_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
001415b0 t ClipLinkedGeometry(GeneratePolyhedronFromPlanes_UnorderedPolygonLL*, GeneratePolyhedronFromPlanes_UnorderedLineLL*, GeneratePolyhedronFromPlanes_UnorderedPointLL*, float const*, int, float, bool)
0002e4e0 t ConvertMatrixToIVP(matrix3x4_t const&, IVP_U_Matrix&)
000597c0 t DestroyVirtualMesh(CPhysCollide*)
0003ead0 t GetOppositeSynapse(IVP_Synapse_Friction*)
001166c0 t ivp_malloc_aligned(int, int)
0013e7b0 t MathLib_MMXEnabled()
0013e7c0 t MathLib_SSEEnabled()
00119120 t p_make_string_fast(char const*, ...)
00119740 t p_read_first_token(_IO_FILE*)
000a4de0 t qh_attachnewfacets()
000bfe60 t qh_eachvoronoi_all(_IO_FILE*, void (*)(_IO_FILE*, vertexT*, vertexT*, setT*, unsigned int), unsigned int, qh_RIDGE, unsigned int)
000a91f0 t qh_initialvertices(int, setT*, double*, int)
000a00f0 t qh_initqhull_start(_IO_FILE*, _IO_FILE*, _IO_FILE*)
000a8220 t qh_matchduplicates(facetT*, int, int, int*)
000cab10 t qh_maydropneighbor(facetT*)
000ce530 t qh_merge_nonconvex(facetT*, facetT*, mergeType)
000cb960 t qh_mergevertex_del(vertexT*, facetT*, facetT*)
000c7060 t qh_printextremes_d(_IO_FILE*, facetT*, setT*, int)
000c0880 t qh_printfacet2geom(_IO_FILE*, facetT*, double*)
000c09e0 t qh_printfacet2math(_IO_FILE*, facetT*, int)
000c0cf0 t qh_printfacet3math(_IO_FILE*, facetT*, int)
000c72c0 t qh_printpoints_out(_IO_FILE*, facetT*, setT*, int)
000c2b80 t qh_printpointvect2(_IO_FILE*, double*, double*, double*, double)
000afea0 t qh_printstatistics(_IO_FILE*, char const*)
000c6c90 t qh_printvertexlist(_IO_FILE*, char const*, facetT*, setT*, unsigned int)
000c7900 t qh_printvneighbors(_IO_FILE*, facetT*, setT*, unsigned int)
000ad270 t qh_setdelnthsorted(setT*, int)
000ac8d0 t qh_setequal_except(setT*, void*, setT*, void*)
000ad810 t qh_settempfree_all()
000cd170 t qh_test_vneighbors()
000aaa70 t qh_vertexintersect(setT**, setT*)
000ac550 t qh_vertexneighbors()
00078a10 t Q_UChar32ToUTF8Len(wchar_t)
0007a980 t Q_UTF16CharsToUTF8(unsigned short const*, int, char*, int, EStringConvertErrorPolicy)
0007afe0 t Q_UTF32CharsToUTF8(wchar_t const*, int, char*, int, EStringConvertErrorPolicy)
0007a310 t Q_UTF8CharsToUTF16(char const*, int, unsigned short*, int, EStringConvertErrorPolicy)
0007a670 t Q_UTF8CharsToUTF32(char const*, int, wchar_t*, int, EStringConvertErrorPolicy)
001438a0 t _SSE_RSqrtAccurate(float)
0006cfd0 t Sys_GetFactoryThis()
0006f450 t V_DefaultExtension(char*, char const*, int)
0006f5d0 t V_FixDoubleSlashes(char*)
0006f840 t V_GetFileExtension(char const*)
0006fb70 t V_MakeAbsolutePath(char*, int, char const*, char const*)
0006fce0 t V_MakeRelativePath(char const*, char const*, char*, int)
0006f8f0 t V_RemoveDotSlashes(char*, char, bool)
0013b290 t AxisAngleQuaternion(Vector const&, float, Quaternion&)
0002e9d0 t ConvertRotationToHL(IVP_U_Quat const&, QAngle&)
0002e7d0 t ConvertRotationToHL(IVP_U_Matrix3 const&, QAngle&)
0004f420 t CreatePhysicsObject(CPhysicsEnvironment*, CPhysCollide const*, int, Vector const&, QAngle const&, objectparams_t*, bool)
0004f680 t CreatePhysicsSphere(CPhysicsEnvironment*, float, int, Vector const&, QAngle const&, objectparams_t*, bool)
000947b0 t debug_sphere_output(IVV_Sphere*)
0013c5d0 t Hermite_SplineBasis(float, float*)
000e0220 t ivp_print_mi_matrix(int, int, IVP_MI_Vector**)
001447d0 t LinearToScreenGamma(float)
0013e7d0 t MathLib_SSE2Enabled()
0002f700 t PackLedgeIntoBuffer(packedhull_t*, CUtlBuffer&, IVP_Compact_Ledge const*, virtualmeshlist_t const&)
000a7440 t qh_checkflipped_all(facetT*)
000ca400 t qh_findbestneighbor(facetT*, double*, double*, double*)
000b9b60 t qh_partitionvisible(unsigned int, int*)
000c7c50 t qh_printextremes_2d(_IO_FILE*, facetT*, setT*, int)
000c1be0 t qh_printfacetheader(_IO_FILE*, facetT*)
000c1910 t qh_printfacetridges(_IO_FILE*, facetT*)
000cdbf0 t qh_redundant_vertex(vertexT*)
000acd70 t qh_setappend2ndlast(setT**, void*)
0009efa0 t qh_sethalfspace_all(int, int, double*, double*)
000cc9f0 t qh_test_appendmerge(facetT*, facetT*)
0013ae40 t QuaternionAngleDiff(Quaternion const&, Quaternion const&)
000525a0 t QuaternionAxisAngle(IVP_U_Quat const&, Vector&, float&)
0013b190 t QuaternionAxisAngle(Quaternion const&, Vector&, float&)
0013a6f0 t QuaternionConjugate(Quaternion const&, Quaternion&)
0013a7d0 t QuaternionNormalize(Quaternion&)
00078a40 t Q_UChar32ToUTF16Len(wchar_t)
00070600 t Q_URLDecodeInternal(char*, int, char const*, int, bool)
00070500 t Q_URLEncodeInternal(char*, int, char const*, int, bool)
0007acc0 t Q_UTF16CharsToUTF32(unsigned short const*, int, wchar_t*, int, EStringConvertErrorPolicy)
0007b2d0 t Q_UTF32CharsToUTF16(wchar_t const*, int, unsigned short*, int, EStringConvertErrorPolicy)
00144740 t SrgbGammaTo360Gamma(float)
0002eb50 t TransformIVPToLocal(IVP_U_Point&, IVP_Real_Object*, bool)
0002ea00 t TransformIVPToLocal(IVP_U_Point const&, IVP_U_Point&, IVP_Real_Object*, bool)
0002ece0 t TransformLocalToIVP(IVP_U_Point&, IVP_Real_Object*, bool)
0002ebb0 t TransformLocalToIVP(IVP_U_Point const&, IVP_U_Point&, IVP_Real_Object*, bool)
0002ed40 t TransformLocalToIVP(IVP_U_Float_Point const&, IVP_U_Point&, IVP_Real_Object*, bool)
0002eed0 t TransformLocalToIVP(IVP_U_Float_Point const&, IVP_U_Float_Point&, IVP_Real_Object*, bool)
0013e110 t CalcDistanceToLine2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
0013ec20 t ComputeTrianglePlane(Vector const&, Vector const&, Vector const&, Vector&, float&)
0002e6b0 t ConvertRotationToIVP(QAngle const&, IVP_U_Quat&)
0002e5e0 t ConvertRotationToIVP(QAngle const&, IVP_U_Matrix3&)
0003ee60 t CreateObjectPairHash()
00036280 t CreateSurfaceManager(CPhysCollide const*, short&)
00140710 t GetInterpolationData(float const*, float const*, int, int, float, bool, float*, float*, float*)
0003cd70 t IsExternalConstraint(IVP_Controller*, void*)
0004f860 t MaterialIndexDataOps()
0013e7a0 t MathLib_3DNowEnabled()
000b4510 t p_link_triangle_self(IVP_Triangle*)
000baf40 t qh_build_withrestart()
000af540 t qh_collectstatistics()
0009b830 t qh_facetarea_simplex(int, double*, setT*, vertexT*, unsigned int, double*, double*)
0009feb0 t qh_initqhull_buffers()
000a0420 t qh_initqhull_globals(double*, int, int, unsigned int)
000cec00 t qh_mergecycle_facets(facetT*, facetT*)
000cb000 t qh_mergecycle_ridges(facetT*, facetT*)
000b94d0 t qh_partitioncoplanar(double*, facetT*, double*)
000c0ee0 t qh_printfacet3vertex(_IO_FILE*, facetT*, int)
000c9640 t qh_printneighborhood(_IO_FILE*, int, facetT*, facetT*, unsigned int)
000cc5f0 t qh_renameridgevertex(ridgeT*, vertexT*, vertexT*)
000bdd80 t qh_sethyperplane_det(int, double**, double*, unsigned int, double*, double*, unsigned int*)
0013aca0 t QuaternionDotProduct(Quaternion const&, Quaternion const&)
000502c0 t RestorePhysicsObject(physrestoreparams_t const&, CPhysicsObject**)
00054840 t RestorePhysicsSpring(physrestoreparams_t const&, CPhysicsSpring**)
0003c980 t SeedRandomGenerators()
000386b0 t set_4x4_column_major(IVP_U_Matrix&, float const*)
00143900 t _SSE_VectorNormalize(Vector&)
00137180 t _VectorNormalizeFast(Vector&)
0006f360 t V_StripTrailingSlash(char*)
001389b0 t AngleVectorsTranspose(QAngle const&, Vector*, Vector*, Vector*)
0013de00 t CalcDistanceSqrToLine(Vector const&, Vector const&, Vector const&, float*)
0013da60 t CalcSqrDistanceToAABB(Vector const&, Vector const&, Vector const&)
00144810 t ColorRGBExp32ToVector(ColorRGBExp32 const&, Vector&)
00070c90 t ConnectTier1Libraries(void* (**)(char const*, int*), int)
0003cb40 t CreateFixedConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_fixedparams_t const&)
00047b80 t CreateFluidController(IVP_Environment*, CPhysicsObject*, fluidparams_t*)
0003cad0 t CreateHingeConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_limitedhingeparams_t const&)
00069000 t DefaultCompletionFunc(char const*, char (*) [64])
000526a0 t GetObjectPosition_IVP(IVP_U_Point&, IVP_Real_Object*)
00138480 t GreatestCommonDivisor(int, int)
000f19d0 t out_friction_info_obj(IVP_Core*)
000b7b10 t P_THREE_CHECK_INTRUDE(int, int, int, int, IVP_Tetra_Point*, IVP_Tetra_Point*, IVP_Tri_Edge**, IVP_U_Hesse*, IVP_U_Hesse*, IVP_Tri_Edge**, double*, IVP_U_Point&, IVP_Intrusion_Status*)
0009fd50 t qh_init_qhull_command(int, char**)
000a6550 t qh_makenew_simplicial(facetT*, vertexT*, int*)
000b01e0 t qh_printallstatistics(_IO_FILE*, char const*)
000c6d10 t qh_printhelp_singular(_IO_FILE*)
000cd680 t qh_vertexridges_facet(vertexT*, facetT*, setT**)
0003ce00 t SavePhysicsConstraint(physsaveparams_t const&, CPhysicsConstraint*)
001397c0 t SolveInverseQuadratic(float, float, float, float, float, float, float&, float&, float&)
0006cca0 t Sys_IsDebuggerPresent()
00144880 t VectorToColorRGBExp32(Vector const&, ColorRGBExp32&)
00070120 t V_GetCurrentDirectory(char*, int)
00070150 t V_SetCurrentDirectory(char const*)
0006f740 t V_UnqualifiedFileName(char const*)
0013ea50 t AngleNormalizePositive(float)
00070970 t BGetLocalFormattedDate(long, char*, int)
000709b0 t BGetLocalFormattedTime(long, char*, int)
0013db40 t CalcClosestPointOnAABB(Vector const&, Vector const&, Vector const&, Vector&)
0013dcf0 t CalcClosestPointOnLine(Vector const&, Vector const&, Vector const&, Vector&, float*)
000487a0 t CreateFrictionSnapshot(IVP_Real_Object*)
0003cd00 t CreateLengthConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_lengthparams_t const&)
0004b560 t CreateMotionController(CPhysicsEnvironment*, IMotionEvent*)
000500f0 t CreateObjectFromBuffer(CPhysicsEnvironment*, void*, unsigned char*, unsigned int, bool)
000524d0 t CreatePlayerController(CPhysicsObject*)
0003cc90 t CreatePulleyConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_pulleyparams_t const&)
000538c0 t CreateShadowController(CPhysicsObject*, bool, bool)
00048830 t DeleteAllFrictionPairs(IVP_Real_Object*, IVP_Real_Object*)
00143e00 t GammaToLinearFullRange(float)
00070e40 t GetNoEscCharConversion()
000b3660 t ivp_check_for_opposite(IVP_Hash*, IVP_Poly_Point*, IVP_Poly_Point*, IVP_Tri_Edge*)
00143e40 t LinearToGammaFullRange(float)
000362a0 t OutputCollideDebugInfo(CPhysCollide const*)
000b1ee0 t p_del_double_triangles(IVP_Triangle**, IVP_Triangle**, IVP_Triangle**)
000beff0 t qh_compare_vertexpoint(void const*, void const*)
000ccdd0 t qh_getmergeset_initial(facetT*)
000cdcb0 t qh_rename_sharedvertex(vertexT*, facetT*)
000be4b0 t qh_sethyperplane_gauss(int, double**, double*, unsigned int, double*, double*, unsigned int*)
000ad050 t qh_setnew_delnthsorted(setT*, int, int, int)
000aa9d0 t qh_vertexintersect_new(setT*, setT*)
0013a8f0 t QuaternionBlendNoAlign(Quaternion const&, Quaternion const&, float, Quaternion&)
0013a480 t QuaternionSlerpNoAlign(Quaternion const&, Quaternion const&, float, Quaternion&)
0013eae0 t RotationDeltaAxisAngle(QAngle const&, QAngle const&, Vector&, float&)
0006f890 t V_ExtractFileExtension(char const*, char*, int)
0006de20 t V_normalizeFloatString(char*)
0013dc30 t CalcClosestPointToLineT(Vector const&, Vector const&, Vector const&, Vector&)
0013e170 t CalcDistanceSqrToLine2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
0013f3e0 t ClipPolyToPlane_Precise(double*, int, double*, double const*, double, double)
0006a780 t ConVar_PrintDescription(ConCommandBase const*)
0006cb90 t CreateInterfaceInternal(char const*, int*)
0003ca60 t CreateRagdollConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_ragdollparams_t const&)
0003cbb0 t CreateSlidingConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_slidingparams_t const&)
00058790 t CreateVehicleController(CPhysicsEnvironment*, CPhysicsObject*, vehicleparams_t const&, unsigned int, IPhysicsGameTrace*)
00065730 t CreateVPhysicsKeyParser(char const*)
0013cd50 t Cubic_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00048810 t DestroyFrictionSnapshot(IPhysicsFrictionSnapshot*)
00052530 t DestroyPlayerController(IPhysicsPlayerController*)
0013c800 t Kochanek_Bartels_Spline(float, float, float, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000b4e10 t p_calc_min_intrude_dist(IVP_Triangle*, IVP_Intrusion_Status*, double)
000cad20 t qh_mergecycle_neighbors(facetT*, facetT*)
000cf220 t qh_merge_degenredundant()
000c1240 t qh_printhelp_degenerate(_IO_FILE*)
000cc440 t qh_remove_extravertices(facetT*)
0013a860 t QuaternionIdentityBlend(Quaternion const&, float, Quaternion&)
0013e090 t CalcClosestPointOnLine2D(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&, float*)
001401a0 t CalcTriangleTangentSpace(Vector const&, Vector const&, Vector const&, Vector2D const&, Vector2D const&, Vector2D const&, Vector&, Vector&)
00138190 t ConcatTransforms_Aligned(matrix3x4_t const&, matrix3x4_t const&, matrix3x4_t&)
0003f2b0 t CreatePhysicsEnvironment()
00064140 t DestroyVPhysicsKeyParser(IVPhysicsKeyParser*)
00070d30 t DisconnectTier1Libraries()
00140c90 t FindConvexShapeLooseAABB(float const*, int, Vector*, Vector*)
00070e30 t GetCStringCharConversion()
0003eaf0 t GetOppositeSynapseObject(IVP_Synapse_Friction*)
0004f250 t GetWorldCoordFromSynapse(IVP_Synapse_Friction*, IVP_U_Point&)
00050220 t PostRestorePhysicsObject()
000c9f80 t qh_degen_redundant_facet(facetT*)
000a66d0 t qh_makenew_nonsimplicial(facetT*, vertexT*, int*)
000cb3a0 t qh_mergecycle_vneighbors(facetT*, facetT*)
000cb9e0 t qh_mergevertex_neighbors(facetT*, facetT*)
000c03a0 t qh_order_vertexneighbors(vertexT*)
00140930 t RandomVectorInUnitCircle(Vector2D*)
00140820 t RandomVectorInUnitSphere(Vector*)
0003cfd0 t RestorePhysicsConstraint(physrestoreparams_t const&, CPhysicsConstraint**)
00143970 t _SSE_VectorNormalizeFast(Vector&)
0013e000 t CalcClosestPointToLineT2D(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&)
0013df10 t CalcDistanceToLineSegment(Vector const&, Vector const&, Vector const&, float*)
00052f60 t ComputeShadowControllerHL(CPhysicsObject*, hlshadowcontrol_params_t const&, float, float)
0002ef50 t ConvertCoordinateAxisToHL(int)
000f1f50 t debug_out_friction_system(IVP_Friction_System*)
000cbcc0 t qh_neighbor_intersections(vertexT*)
000c06d0 t qh_printfacet2geom_points(_IO_FILE*, double*, double*, facetT*, double, double*)
000c0ab0 t qh_printfacet3geom_points(_IO_FILE*, setT*, facetT*, double, double*)
0006ea20 t Q_RemoveAllEvilCharacters(char*)
0013ba40 t Catmull_Rom_Spline_Tangent(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00052770 t ComputeShadowControllerIVP(IVP_Real_Object*, shadowcontrol_params_t&, float, float)
0002ef30 t ConvertCoordinateAxisToIVP(int)
0003cc20 t CreateBallsocketConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_ballsocketparams_t const&)
0013ffa0 t GeneratePerspectiveFrustum(Vector const&, QAngle const&, float, float, float, float, Frustum_t&)
0013f820 t GeneratePerspectiveFrustum(Vector const&, Vector const&, Vector const&, Vector const&, float, float, float, float, Frustum_t&)
000dd5d0 t ivp_debug_show_real_values(IVP_Buoyancy_Input const*, IVP_Controller_Buoyancy*, IVP_Template_Buoyancy const*, IVP_Core*, IVP_Real_Object*, IVP_U_Float_Point const*)
0003d330 t SavePhysicsConstraintGroup(physsaveparams_t const&, CPhysicsConstraintGroup*)
00047e50 t SavePhysicsFluidController(physsaveparams_t const&, CPhysicsFluidController*)
0013e260 t CalcDistanceToLineSegment2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
0013bca0 t Catmull_Rom_Spline_Integral(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
0013bf00 t Catmull_Rom_Spline_Integral(Vector const&, Vector const&, Vector const&, Vector const&, Vector&)
00052e80 t ConvertShadowControllerToHL(shadowcontrol_params_t const&, hlshadowcontrol_params_t&)
0013d270 t Parabolic_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000e3e50 t p_calc_2d_distances_to_axis(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point*)
0004b9e0 t SavePhysicsMotionController(physsaveparams_t const&, IPhysicsMotionController*)
00053a50 t SavePhysicsPlayerController(physsaveparams_t const&, CPlayerController*)
00053950 t SavePhysicsShadowController(physsaveparams_t const&, IPhysicsShadowController*)
0006cf70 t Sys_RunningWithDebugModules()
00139400 t TransformAnglesToLocalSpace(QAngle const&, matrix3x4_t const&)
00139360 t TransformAnglesToWorldSpace(QAngle const&, matrix3x4_t const&)
0013df90 t CalcDistanceSqrToLineSegment(Vector const&, Vector const&, Vector const&, float*)
0013bfe0 t Catmull_Rom_Spline_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00038760 t ConvertHavanaLocalMatrixToHL(hk_Transform const&, matrix3x4_t&, IVP_Real_Object*)
00052da0 t ConvertShadowControllerToIVP(hlshadowcontrol_params_t const&, shadowcontrol_params_t&)
0003ca10 t CreatePhysicsConstraintGroup(IVP_Environment*, constraint_groupparams_t const&)
00141ed0 t GeneratePolyhedronFromPlanes(float const*, int, float, bool)
0003ca00 t GetClientDataForHkConstraint(hk_Breakable_Constraint*)
00138f60 t MatrixBuildRotationAboutAxis(Vector const&, float, matrix3x4_t&)
000ca0f0 t qh_degen_redundant_neighbors(facetT*, facetT*)
00058800 t SavePhysicsVehicleController(physsaveparams_t const&, CVehicleController*)
00070820 t BGetLocalFormattedDateAndTime(long, char*, int, char*, int)
0013de70 t CalcClosestPointOnLineSegment(Vector const&, Vector const&, Vector const&, Vector&, float*)
0013c3a0 t Catmull_Rom_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00126d30 t ivp_core_get_surface_speed_os(IVP_Core*, IVP_Real_Object*, IVP_U_Float_Point const*, IVP_U_Float_Point*)
000c3500 t qh_printfacet3geom_simplicial(_IO_FILE*, facetT*, double*)
000c3070 t qh_printfacet4geom_simplicial(_IO_FILE*, facetT*, double*)
0003d440 t RestorePhysicsConstraintGroup(physrestoreparams_t const&, CPhysicsConstraintGroup**)
00047e60 t RestorePhysicsFluidController(physrestoreparams_t const&, CPhysicsFluidController**)
00038430 t TransformHavanaLocalToHLWorld(hk_Vector3 const&, IVP_Real_Object*, bool)
00038380 t TransformHLWorldToHavanaLocal(Vector const&, IVP_Real_Object*)
0013e2c0 t CalcDistanceSqrToLineSegment2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
00118f10 t ivp_set_message_print_function(void (*)(char const*))
000c2c40 t qh_printhyperplaneintersection(_IO_FILE*, facetT*, facetT*, setT*, double*)
0004b740 t RestorePhysicsMotionController(physrestoreparams_t const&, IPhysicsMotionController**)
00053a60 t RestorePhysicsPlayerController(physrestoreparams_t const&, CPlayerController**)
000539b0 t RestorePhysicsShadowController(physrestoreparams_t const&, IPhysicsShadowController**)
00139910 t SolveInverseQuadraticMonotonic(float, float, float, float, float, float, float&, float&, float&)
0006d7c0 t StringAfterPrefixCaseSensitive(char const*, char const*)
000703d0 t V_AddBackSlashesToSpecialChars(char const*)
0013e1d0 t CalcClosestPointOnLineSegment2D(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&, float*)
00050f10 t ComputePDControllerCoefficients(float*, float, float, float)
000c1100 t qh_printfacetNvertex_simplicial(_IO_FILE*, facetT*, int)
00058860 t RestorePhysicsVehicleController(physrestoreparams_t const&, CVehicleController**)
00139fa0 t SolveInverseReciprocalQuadratic(float, float, float, float, float, float, float&, float&, float&)
0013dbb0 t CalcSqrDistAndClosestPointOnAABB(Vector const&, Vector const&, Vector const&, Vector&, float&)
000c37d0 t qh_printfacet3geom_nonsimplicial(_IO_FILE*, facetT*, double*)
000c3290 t qh_printfacet4geom_nonsimplicial(_IO_FILE*, facetT*, double*)
0013e320 t CalcLineToLineIntersectionSegment(Vector const&, Vector const&, Vector const&, Vector const&, Vector*, Vector*, float*, float*)
00038500 t ConvertHLLocalMatrixToHavanaLocal(matrix3x4_t const&, hk_Transform&)
001413e0 t ConvertLinkedGeometryToPolyhedron(GeneratePolyhedronFromPlanes_UnorderedPolygonLL*, GeneratePolyhedronFromPlanes_UnorderedLineLL*, GeneratePolyhedronFromPlanes_UnorderedPointLL*, bool)
0003d3e0 t PostRestorePhysicsConstraintGroup()
0013cbb0 t Kochanek_Bartels_Spline_NormalizeX(float, float, float, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000c0f90 t qh_printfacetNvertex_nonsimplicial(_IO_FILE*, facetT*, int, int)
00055970 t ShouldOverrideWheelContactFriction(float*, IVP_Real_Object*, IVP_Real_Object*, IVP_U_Float_Point*)
0013c1c0 t Catmull_Rom_Spline_Integral_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
0006ec60 t Q_StripPrecedingAndTrailingWhitespace(char*)
0006eb10 t Q_StripPrecedingAndTrailingWhitespaceW(wchar_t*)
000539c0 t RestorePhysicsShadowControllerInternal(physrestoreparams_t const&, IPhysicsShadowController**, CPhysicsObject*)
000501a0 t CreateObjectFromBuffer_UseExistingMemory(CPhysicsEnvironment*, void*, unsigned char*, unsigned int, CPhysicsObject*)
0011d4c0 t ivp_optimiztion_center_check_successfull()
00053ab0 t ControlPhysicsPlayerControllerAttachment_Silent(IPhysicsPlayerController*, IVP_Real_Object*, bool)
00053a70 t ControlPhysicsShadowControllerAttachment_Silent(IPhysicsShadowController*, IVP_Real_Object*, bool)
0006ed40 t Q_AggressiveStripPrecedingAndTrailingWhitespace(char*)
0006ebd0 t Q_AggressiveStripPrecedingAndTrailingWhitespaceW(wchar_t*)
0013a1d0 t Bias(float, float)
0013a260 t Gain(float, float)
         U ConMsg(char const*, ...)
         U DevMsg(char const*, ...)
000c2620 t dfacet(unsigned int)
00119790 t p_atof(char const*)
001197c0 t p_atoi(char const*)
001166b0 t p_free(void*)
00137c10 t Q_log2(int)
001409c0 t SinCos(float, float*, float*)
00137270 t _sqrtf(float)
0006dbd0 t V_atof(char const*)
0006dbb0 t V_atoi(char const*)
0013cdd0 t BSpline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000c1710 t dvertex(unsigned int)
0009d870 t qh_rand()
00137290 t _rsqrtf(float)
0013e7e0 t Approach(float, float, float)
0013f7c0 t CalcFovX(float, float)
0013f730 t CalcFovY(float, float)
0013f6f0 t CeilPow2(int)
00140600 t HSVtoRGB(Vector const&, Vector&)
00117660 t ivp_rand()
00116660 t p_calloc(int, int)
00116650 t p_malloc(unsigned int)
001195e0 t p_strcmp(char const*, char const*)
00118ff0 t p_strdup(char const*)
00118fd0 t p_strlen(char const*)
0009f640 t qh_clock()
000a9180 t qh_point(int)
000bb1c0 t qh_qhull()
000acae0 t qh_setin(setT*, void*)
0009d8c0 t qh_srand(int)
00140520 t RGBtoHSV(Vector const&, Vector&)
00143bd0 t _SSE_cos(float)
0006d7f0 t V_atoi64(char const*)
0006f080 t V_nibble(char)
0006d410 t V_strupr(char*)
0013e910 t AngleDiff(float, float)
0013f710 t FloorPow2(int)
0010eff0 t get_float()
000dc390 t IsCarBody(IVP_Core*)
00117690 t ivp_srand(int)
000640f0 t nexttoken(char*, char const*, char)
00144cd0 t pathmatch(char const*, char**, bool, char*, unsigned int)
001196b0 t p_get_num()
001166a0 t p_realloc(void*, int)
00119610 t p_str_tok(char*, char const*)
000a02c0 t qh_init_A(_IO_FILE*, _IO_FILE*, _IO_FILE*, int, char**)
000a1830 t qh_init_B(double*, int, int, unsigned int)
0009d390 t qh_maxmin(double*, int, int)
000a0320 t qh_option(char const*, int*, double*)
000ac720 t qh_setdel(setT*, void*)
000acbc0 t qh_setnew(int)
000afe60 t qh_stddev(int, double, double, double*)
000a1280 t qh_strtod(char const*, char**)
000a12d0 t qh_strtol(char const*, char**)
00140030 t R_CullBox(Vector const&, Vector const&, Frustum_t const&)
00124bb0 t ReportObj(IVP_Synapse_Real*, CFmtStrN<256, false>&)
00143880 t _SSE_Sqrt(float)
0006d9f0 t V_atoui64(char const*)
0006d240 t _V_memcmp(char const*, int, void const*, void const*, int)
0006d200 t _V_memcpy(char const*, int, void*, void const*, int)
0006d1e0 t _V_memset(char const*, int, void*, int, int)
00070810 t V_qsort_s(void*, unsigned int, unsigned int, int (*)(void*, void const*, void const*), void*)
0006d300 t _V_strcmp(char const*, int, char const*, char const*)
0006d280 t _V_strcpy(char const*, int, char*, char const*)
0006d550 t V_stricmp(char const*, char const*)
0006dfb0 t V_stristr(char*, char const*)
0006deb0 t V_stristr(char const*, char const*)
00070290 t V_StrLeft(char const*, int, char*, int)
0006d270 t _V_strlen(char const*, int, char const*)
0006e3c0 t V_strncat(char*, char const*, unsigned int, int)
0006e100 t V_strnchr(char const*, char, int)
0006d710 t V_strncmp(char const*, char const*, int)
0006e150 t V_strncpy(char*, char const*, int)
0006d4f0 t V_strnlwr(char*, unsigned int)
0006d370 t _V_strstr(char const*, int, char const*, char const*)
0006d320 t _V_wcscmp(char const*, int, wchar_t const*, wchar_t const*)
0006d2a0 t _V_wcslen(char const*, int, wchar_t const*)
0006e440 t V_wcsncat(wchar_t*, wchar_t const*, unsigned int, int)
0006e190 t V_wcsncpy(wchar_t*, wchar_t const*, int)
0006d390 t _V_wcsupr(char const*, int, wchar_t*)
         U operator delete[](void*)@@GLIBCXX_3.4
         U operator delete(void*)@@GLIBCXX_3.4
001a8b40 b guard variable for datamap_t* DataMapInit<vehicleparams_t>(vehicleparams_t*)::nameHolder
001a8070 b guard variable for datamap_t* DataMapInit<physcollideheader_t>(physcollideheader_t*)::nameHolder
001a8ab0 b guard variable for datamap_t* DataMapInit<vehicle_axleparams_t>(vehicle_axleparams_t*)::nameHolder
001a8a10 b guard variable for datamap_t* DataMapInit<vehicle_bodyparams_t>(vehicle_bodyparams_t*)::nameHolder
001a8a40 b guard variable for datamap_t* DataMapInit<vehicle_wheelparams_t>(vehicle_wheelparams_t*)::nameHolder
001a8a70 b guard variable for datamap_t* DataMapInit<vehicle_wheelparams_t>(vehicle_wheelparams_t*)::dataDesc
001a80a0 b guard variable for datamap_t* DataMapInit<compactsurfaceheader_t>(compactsurfaceheader_t*)::nameHolder
001a8b10 b guard variable for datamap_t* DataMapInit<vehicle_engineparams_t>(vehicle_engineparams_t*)::nameHolder
001a8ae0 b guard variable for datamap_t* DataMapInit<vehicle_steeringparams_t>(vehicle_steeringparams_t*)::nameHolder
001a89d0 b guard variable for datamap_t* DataMapInit<vehicle_operatingparams_t>(vehicle_operatingparams_t*)::nameHolder
001a8a00 b guard variable for datamap_t* DataMapInit<vehicle_operatingparams_t>(vehicle_operatingparams_t*)::dataDesc
001a8a80 b guard variable for datamap_t* DataMapInit<vehicle_suspensionparams_t>(vehicle_suspensionparams_t*)::nameHolder
001a87d0 b guard variable for datamap_t* DataMapInit<vphysics_save_cphysicsobject_t>(vphysics_save_cphysicsobject_t*)::nameHolder
001a8910 b guard variable for datamap_t* DataMapInit<vphysics_save_cphysicsspring_t>(vphysics_save_cphysicsspring_t*)::nameHolder
001a81f0 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintfixed_t>(vphysics_save_constraintfixed_t*)::nameHolder
001a8220 b guard variable for datamap_t* DataMapInit<vphysics_save_constrainthinge_t>(vphysics_save_constrainthinge_t*)::nameHolder
001a82b0 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintlength_t>(vphysics_save_constraintlength_t*)::nameHolder
001a8280 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintpulley_t>(vphysics_save_constraintpulley_t*)::nameHolder
001a8760 b guard variable for datamap_t* DataMapInit<vphysics_save_motioncontroller_t>(vphysics_save_motioncontroller_t*)::nameHolder
001a8310 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintragdoll_t>(vphysics_save_constraintragdoll_t*)::nameHolder
001a8250 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintsliding_t>(vphysics_save_constraintsliding_t*)::nameHolder
001a8890 b guard variable for datamap_t* DataMapInit<vphysics_save_cshadowcontroller_t>(vphysics_save_cshadowcontroller_t*)::nameHolder
001a88c0 b guard variable for datamap_t* DataMapInit<vphysics_save_cshadowcontroller_t>(vphysics_save_cshadowcontroller_t*)::dataDesc
001a8160 b guard variable for datamap_t* DataMapInit<vphysics_save_cphysicsconstraint_t>(vphysics_save_cphysicsconstraint_t*)::nameHolder
001a89a0 b guard variable for datamap_t* DataMapInit<vphysics_save_cvehiclecontroller_t>(vphysics_save_cvehiclecontroller_t*)::nameHolder
001a81c0 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintaxislimit_t>(vphysics_save_constraintaxislimit_t*)::nameHolder
001a8190 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintbreakable_t>(vphysics_save_constraintbreakable_t*)::nameHolder
001a8860 b guard variable for datamap_t* DataMapInit<vphysics_save_shadowcontrolparams_t>(vphysics_save_shadowcontrolparams_t*)::nameHolder
001a82e0 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintballsocket_t>(vphysics_save_constraintballsocket_t*)::nameHolder
001a8130 b guard variable for datamap_t* DataMapInit<vphysics_save_cphysicsconstraintgroup_t>(vphysics_save_cphysicsconstraintgroup_t*)::nameHolder
001b7d60 b guard variable for pathmatch(char const*, char**, bool, char*, unsigned int)::s_pszDbgPathMatch
001b7d40 b guard variable for pathmatch(char const*, char**, bool, char*, unsigned int)::s_pszPathMatchEnabled
001a7e40 b guard variable for GetTmpObjectMatrix(IVP_Real_Object*)::coreShiftMatrix
001aa630 b guard variable for CUtlString::GetEmptyString()::s_emptyString
001a83d0 b guard variable for CPhysicsEnvironment::Simulate(float)::autoMutex__
001af200 b guard variable for IVP_Material_Manager::get_material_by_index(IVP_Real_Object*, IVP_U_Point const*, int)::simple
001aa6a0 b guard variable for hk_Memory::get_instance()::s_memory_instance
001aa680 b guard variable for CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
001a8420 b guard variable for CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
001a8e20 b guard variable for CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
001a7c20 b g_BreakSet
00162650 r _pi32_inv1
000640a0 t ReadVector(char const*, Vector&)
001a8e80 b s_BreakSet
0006d190 t FastToLower(char)
001a8cbc b nullsurface
001b7d74 b s_bShowDiag
001a8e78 b s_nCVarFlag
001a7e20 b vec2_origin
001a7ee0 b vec2_origin
001a7f20 b vec2_origin
001a7f94 b vec2_origin
001a7fd0 b vec2_origin
001a80c4 b vec2_origin
001a8354 b vec2_origin
001a8390 b vec2_origin
001a83e0 b vec2_origin
001a8430 b vec2_origin
001a8470 b vec2_origin
001a8710 b vec2_origin
001a8784 b vec2_origin
001a8814 b vec2_origin
001a88c8 b vec2_origin
001a8934 b vec2_origin
001a8b64 b vec2_origin
001a8c1c b vec2_origin
001a8c50 b vec2_origin
001a8d3c b vec2_origin
001a8d80 b vec2_origin
001a8dec b vec2_origin
001a8e30 b vec2_origin
001a8fc8 b vec2_origin
001a8ff0 b vec2_origin
001a9260 b vec2_origin
001a92c0 b vec2_origin
001aa618 b vec2_origin
001aa640 b vec2_origin
001aa668 b vec2_origin
001ad1c0 b vec2_origin
001aff40 b vec2_origin
001aff88 b vec2_origin
001affe0 b vec2_origin
001b0000 b vec2_origin
001b7d20 b vec2_origin
001a7f00 b vec4_origin
001a7f40 b vec4_origin
001a7fa4 b vec4_origin
001a7ff0 b vec4_origin
001a80d4 b vec4_origin
001a8364 b vec4_origin
001a83b0 b vec4_origin
001a8400 b vec4_origin
001a8450 b vec4_origin
001a8490 b vec4_origin
001a8720 b vec4_origin
001a8794 b vec4_origin
001a8824 b vec4_origin
001a88d8 b vec4_origin
001a8944 b vec4_origin
001a8b74 b vec4_origin
001a8c2c b vec4_origin
001a8c70 b vec4_origin
001a8d4c b vec4_origin
001a8da0 b vec4_origin
001a8dfc b vec4_origin
001aff98 b vec4_origin
0002f4a0 t BuildVertMap(vertmap_t&, Vector const*, int, IVP_Compact_Ledge const*) [clone .constprop.17]
00034560 t InitBoxVerts(Vector*, Vector**, Vector const&, Vector const&)
000d0950 t ProcessPoint(IVP_Compact_Poly_Point&, IVP_U_BigVector<IVP_Compact_Poly_Point>*)
001a92b4 b s_bConnected
001a7e30 b vec2_invalid
001a7ef0 b vec2_invalid
001a7f30 b vec2_invalid
001a7f9c b vec2_invalid
001a7fe0 b vec2_invalid
001a80cc b vec2_invalid
001a835c b vec2_invalid
001a83a0 b vec2_invalid
001a83f0 b vec2_invalid
001a8440 b vec2_invalid
001a8480 b vec2_invalid
001a8718 b vec2_invalid
001a878c b vec2_invalid
001a881c b vec2_invalid
001a88d0 b vec2_invalid
001a893c b vec2_invalid
001a8b6c b vec2_invalid
001a8c24 b vec2_invalid
001a8c60 b vec2_invalid
001a8d44 b vec2_invalid
001a8d90 b vec2_invalid
001a8df4 b vec2_invalid
001a8e40 b vec2_invalid
001a8fd0 b vec2_invalid
001a9000 b vec2_invalid
001a9270 b vec2_invalid
001a92d0 b vec2_invalid
001aa620 b vec2_invalid
001aa650 b vec2_invalid
001aa670 b vec2_invalid
001ad1d0 b vec2_invalid
001aff50 b vec2_invalid
001aff90 b vec2_invalid
001afff0 b vec2_invalid
001b0010 b vec2_invalid
001b7d30 b vec2_invalid
001a7f10 b vec4_invalid
001a7f50 b vec4_invalid
001a7fb4 b vec4_invalid
001a8000 b vec4_invalid
001a80e4 b vec4_invalid
001a8374 b vec4_invalid
001a83c0 b vec4_invalid
001a8410 b vec4_invalid
001a8460 b vec4_invalid
001a84a0 b vec4_invalid
001a8730 b vec4_invalid
001a87a4 b vec4_invalid
001a8834 b vec4_invalid
001a88e8 b vec4_invalid
001a8954 b vec4_invalid
001a8b84 b vec4_invalid
001a8c3c b vec4_invalid
001a8c80 b vec4_invalid
001a8d5c b vec4_invalid
001a8db0 b vec4_invalid
001a8e0c b vec4_invalid
001affa8 b vec4_invalid
0005a8a0 t CM_ClearTrace(CGameTrace*)
001a8bc0 b g_MeshManager
001a7730 d IVP_RAND_SEED
001626b0 r _ps_coscof_p0
001626c0 r _ps_coscof_p1
001626d0 r _ps_coscof_p2
00162620 r _ps_sign_mask
00162700 r _ps_sincof_p0
00162710 r _ps_sincof_p1
00162720 r _ps_sincof_p2
000a44b0 t qh_intcompare(void const*, void const*)
001aff34 b s_bMMXEnabled
001a8e74 b s_bRegistered
001aff36 b s_bSSEEnabled
001a8f80 b s_EmptyConVar
001a8dd0 b s_VPhysPtrMap
001b5020 b texgammatable
001b5120 b lineartoscreen
00066a30 t NoPhysSaveFunc(physsaveparams_t const&, void*)
001a6e00 d s_BackSlashMap
001aff37 b s_bSSE2Enabled
0004d680 t AngDragIntegral(float, float, float, float)
00058fe0 t FlushFrameLocks()
001b6d20 b lineartotexture
00162630 r _ps_cephes_FOPI
000c97b0 t qh_compareangle(void const*, void const*)
000c97e0 t qh_comparemerge(void const*, void const*)
000c9800 t qh_comparevisit(void const*, void const*)
001aff35 b s_b3DNowEnabled
001b6120 b texturetolinear
001a7740 d g_print_function
001a8e7c b s_bBuiltBreakSet
001a6df0 d s_nDLLIdentifier
0015e1a0 r ivp_uqr_mod_table
00066a40 t NoPhysRestoreFunc(physrestoreparams_t const&, void**)
00162610 r _ps_inv_sign_mask
001a6df4 d s_DefaultAccessor
0002e3a0 t GetTmpObjectMatrix(IVP_Real_Object*)
001a7f60 b g_MainDLLInterface
0004e170 t InitObjectTemplate(IVP_Template_Real_Object&, int, objectparams_t*, bool) [clone .constprop.77]
001aa678 b g_CleanupSymbolTable
00162680 r _ps_minus_cephes_DP1
00162690 r _ps_minus_cephes_DP2
001626a0 r _ps_minus_cephes_DP3
000bee90 t qh_compare_facetarea(void const*, void const*)
00038080 t IsBreakableConstraint(constraint_breakableparams_t const&)
000beed0 t qh_compare_facetmerge(void const*, void const*)
000bef00 t qh_compare_facetvisit(void const*, void const*)
001a43b4 d s_DefaultDebugOverlay
0006e950 t StripWhitespaceWorker(int, wchar_t*, bool*, bool)
001a44d8 d g_MaterialIndexDataOps
001aff6c b s_TempMemoryPolyhedron
001b6920 b g_Mathlib_GammaToLinear
001b6520 b g_Mathlib_LinearToGamma
001a8800 b g_PostRestoreObjectList
001a8c14 b s_BuildVirtualMeshMutex
001a7d20 b g_BreakSetIncludingColons
000303f0 t ivu_string_print_function(char const*)
00118cf0 t ivu_default_print_function(char const*)
001a8340 b g_ConstraintGroupActivateList
001aff58 b s_TempMemoryPolyhedron_Buffer
001affc0 b f3
001afae4 b ivp_surface_manager_ball_global
000b6ce0 t localCalcMassCenterAndRotInertia(IVP_U_BigVector<IVP_Compact_Ledge>*, IVP_U_Point*, IVP_U_Point*) [clone .constprop.8]
001a6e78 d s_pConversionArrays_NoEscConversion
001a7fc4 b __g_CreateCPhysicsInterfaceIPhysics_reg
001affd0 b f05
001a6e20 d s_pConversionArrays_StringCharConversion
00030280 t __CreateCPhysicsInterfaceIPhysics_interface()
001a80f4 b __g_CreateCPhysicsCollisionIPhysicsCollision_reg
00034260 t __CreateCPhysicsCollisionIPhysicsCollision_interface()
001a8740 b __g_CreateCPhysicsSurfacePropsIPhysicsSurfaceProps_reg
00048af0 t __CreateCPhysicsSurfacePropsIPhysicsSurfaceProps_interface()
001626f0 r _ps_1
001a8cf4 b g_xneg
001a8d18 b g_xpos
001a8d00 b g_yneg
001a8d24 b g_ypos
001a8d0c b g_zneg
001a8d30 b g_zpos
00149dad r axisMap
00144910 t Descend(char*, unsigned int, bool, unsigned int)
00162640 r _pi32_1
00162670 r _pi32_2
00162660 r _pi32_4
001626e0 r _ps_0p5
00069030 t ConCommand::CanAutoComplete()
0006aa80 t ConCommand::AutoCompleteSuggest(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
00069630 t ConCommand::Dispatch(CCommand const&)
00069f90 t ConCommand::ConCommand(char const*, ICommandCallback*, char const*, int, ICommandCompletionCallback*)
00069f00 t ConCommand::ConCommand(char const*, void (*)(CCommand const&), char const*, int, int (*)(char const*, char (*) [64]))
00069e70 t ConCommand::ConCommand(char const*, void (*)(), char const*, int, int (*)(char const*, char (*) [64]))
00069f90 t ConCommand::ConCommand(char const*, ICommandCallback*, char const*, int, ICommandCompletionCallback*)
00069f00 t ConCommand::ConCommand(char const*, void (*)(CCommand const&), char const*, int, int (*)(char const*, char (*) [64]))
00069e70 t ConCommand::ConCommand(char const*, void (*)(), char const*, int, int (*)(char const*, char (*) [64]))
00069190 t ConCommand::~ConCommand()
00069010 t ConCommand::~ConCommand()
00069010 t ConCommand::~ConCommand()
0005c260 t CTraceAABB::CTraceAABB(Vector const&, Vector const&, bool)
0005c260 t CTraceAABB::CTraceAABB(Vector const&, Vector const&, bool)
00072650 t CUtlBuffer::ParseToken(characterset_t*, char*, int, bool)
00071fe0 t CUtlBuffer::ParseToken(char const*, char const*, char*, int)
00073600 t CUtlBuffer::ConvertCRLF(CUtlBuffer&)
00070da0 t CUtlBuffer::GetOverflow(int)
000729a0 t CUtlBuffer::IsBigEndian()
00073af0 t CUtlBuffer::PutOverflow(int)
00073580 t CUtlBuffer::AssumeMemory(void*, int, int, int)
00071370 t CUtlBuffer::CheckPeekGet(int, int)
00072970 t CUtlBuffer::SetBigEndian(bool)
000724f0 t CUtlBuffer::EatCPPComment()
00071a30 t CUtlBuffer::EatWhiteSpace()
00071220 t CUtlBuffer::OnGetOverflow(int)
000711f0 t CUtlBuffer::OnPutOverflow(int)
000710a0 t CUtlBuffer::SetBufferType(bool, bool)
000710f0 t CUtlBuffer::EnsureCapacity(int)
000715a0 t CUtlBuffer::PeekLineLength()
00071710 t CUtlBuffer::PeekWhiteSpace(int)
000716b0 t CUtlBuffer::PeekStringMatch(int, char const*, int)
000722e0 t CUtlBuffer::GetDelimitedChar(CUtlCharConversion*)
00071780 t CUtlBuffer::PeekStringLength()
00073060 t CUtlBuffer::PutDelimitedChar(CUtlCharConversion*, char)
000711c0 t CUtlBuffer::SetOverflowFuncs(bool (CUtlBuffer::*)(int), bool (CUtlBuffer::*)(int))
00071bc0 t CUtlBuffer::GetStringInternal(char*, unsigned int)
00073500 t CUtlBuffer::SetExternalBuffer(void*, int, int, int)
000729b0 t CUtlBuffer::AddNullTermination()
00072370 t CUtlBuffer::GetDelimitedString(CUtlCharConversion*, char*, int)
00072d40 t CUtlBuffer::PutDelimitedString(CUtlCharConversion*, char const*)
00072940 t CUtlBuffer::ActivateByteSwapping(bool)
00071500 t CUtlBuffer::CheckArbitraryPeekGet(int, int&)
000721e0 t CUtlBuffer::GetDelimitedCharInternal(CUtlCharConversion*)
000718c0 t CUtlBuffer::PeekDelimitedStringLength(CUtlCharConversion*, bool)
00071a90 t CUtlBuffer::Get(void*, int)
00072a80 t CUtlBuffer::Put(void const*, int)
000732d0 t CUtlBuffer::Swap(CUtlMemory<unsigned char, int>&)
00073270 t CUtlBuffer::Swap(CUtlBuffer&)
00071fb0 t CUtlBuffer::Scanf(char const*, ...)
00072d10 t CUtlBuffer::Printf(char const*, ...)
00071ae0 t CUtlBuffer::GetLine(char*, int)
00071650 t CUtlBuffer::GetUpTo(void*, int)
000714b0 t CUtlBuffer::PeekGet(int, int)
00071250 t CUtlBuffer::SeekGet(CUtlBuffer::SeekType_t, int)
00072a20 t CUtlBuffer::SeekPut(CUtlBuffer::SeekType_t, int)
00071cc0 t CUtlBuffer::VaScanf(char const*, char*)
000712e0 t CUtlBuffer::CheckGet(int)
000728d0 t CUtlBuffer::CheckPut(int)
000713a0 t CUtlBuffer::GetToken(char const*)
00072cc0 t CUtlBuffer::VaPrintf(char const*, char*)
00072b00 t CUtlBuffer::PutString(char const*)
000739d0 t CUtlBuffer::CUtlBuffer(int, int, int)
00073450 t CUtlBuffer::CUtlBuffer(void const*, int, int)
000739d0 t CUtlBuffer::CUtlBuffer(int, int, int)
00073450 t CUtlBuffer::CUtlBuffer(void const*, int, int)
0006aca0 t CUtlMemory<CUtlString, int>::Grow(int)
0004aa40 t CUtlMemory<CUtlSymbol, int>::Grow(int)
0004aa00 t CUtlMemory<CUtlSymbol, int>::Purge()
00037e30 t CUtlMemory<bboxcache_t, int>::Grow(int)
00037d20 t CUtlMemory<bboxcache_t, int>::Purge()
00076870 t CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>::Grow(int)
00076550 t CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>::Purge()
00045750 t CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short>::Grow(int)
00042680 t CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short>::Purge()
00067290 t CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
00067220 t CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short>::Purge()
000766b0 t CUtlMemory<CUtlHashtableEntry<CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::IndirectIndex, empty_t>, int>::Purge()
00078060 t CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short>, unsigned short>::Grow(int)
000766f0 t CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short>, unsigned short>::Purge()
0006c7f0 t CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short>::Grow(int)
000473e0 t CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<void*, unsigned short>::List_t, unsigned short>, unsigned short>::Grow(int)
000309a0 t CUtlMemory<CPhysicsCollisionSet, int>::Grow(int)
00030750 t CUtlMemory<CPhysicsCollisionSet, int>::Purge()
00050600 t CUtlMemory<postrestore_objectlist_t, int>::Grow(int)
00050590 t CUtlMemory<postrestore_objectlist_t, int>::Purge()
0004ab80 t CUtlMemory<CSurface, int>::Grow(int)
0004a9c0 t CUtlMemory<CSurface, int>::Purge()
00066990 t CUtlMemory<char, int>::Grow(int)
00073bf0 t CUtlMemory<unsigned char, int>::Grow(int)
00073bb0 t CUtlMemory<unsigned char, int>::Purge()
00030180 t CUtlMemory<int, int>::Grow(int)
000300c0 t CUtlMemory<int, int>::Purge()
0006c510 t CUtlMemory<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::ListElem_t, int>::Grow(int)
00047260 t CUtlMemory<CUtlMultiList<void*, unsigned short>::ListElem_t, int>::Grow(int)
00046710 t CUtlMemory<CCollisionSolver::realobjectpair_t, int>::Grow(int)
00042850 t CUtlMemory<CCollisionSolver::realobjectpair_t, int>::Purge()
0006c6b0 t CUtlMemory<memhandle_t__*, int>::Grow(int)
00042ca0 t CUtlMemory<CPhysicsObject*, int>::Grow(int)
000425a0 t CUtlMemory<CPhysicsObject*, int>::Purge()
000464c0 t CUtlMemory<IPhysicsObject*, int>::Grow(int)
00042130 t CUtlMemory<IPhysicsObject*, int>::Purge()
000489b0 t CUtlMemory<IVP_Real_Object*, int>::Grow(int)
00048970 t CUtlMemory<IVP_Real_Object*, int>::Purge()
00042b60 t CUtlMemory<IDeleteQueueItem*, int>::Grow(int)
00042a20 t CUtlMemory<IDeleteQueueItem*, int>::Purge()
00030860 t CUtlMemory<IPhysicsEnvironment*, int>::Grow(int)
00030790 t CUtlMemory<IPhysicsEnvironment*, int>::Purge()
0005a430 t CUtlMemory<CPhysCollideVirtualMesh*, int>::Grow(int)
0005a300 t CUtlMemory<CPhysCollideVirtualMesh*, int>::Purge()
0003d750 t CUtlMemory<CPhysicsConstraintGroup*, int>::Grow(int)
0003d6e0 t CUtlMemory<CPhysicsConstraintGroup*, int>::Purge()
00046a40 t CUtlMemory<CPhysicsFluidController*, int>::Grow(int)
000429a0 t CUtlMemory<CPhysicsFluidController*, int>::Purge()
00046b80 t CUtlMemory<IPhysicsPlayerController*, int>::Grow(int)
000429e0 t CUtlMemory<IPhysicsPlayerController*, int>::Purge()
0004bce0 t CUtlMemory<IVP_Core*, int>::Grow(int)
0004bca0 t CUtlMemory<IVP_Core*, int>::Purge()
00070b50 t CUtlMemory<char*, int>::Grow(int)
00037c80 t CUtlMemory<char*, int>::Purge()
00063f10 t CUtlMemory<IVP_Compact_Ledgetree_Node const*, int>::Grow(int)
00063ed0 t CUtlMemory<IVP_Compact_Ledgetree_Node const*, int>::Purge()
00076730 t CUtlMemory<CUtlSymbolTable::StringPool_t*, int>::Grow(int)
000765e0 t CUtlMemory<CUtlSymbolTable::StringPool_t*, int>::Purge()
0006c3d0 t CUtlMemory<void*, int>::Grow(int)
0006c390 t CUtlMemory<void*, int>::Purge()
00076a30 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
00076f20 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateRight(unsigned short)
000773e0 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
00077d90 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Insert(CUtlSymbolTable::CStringPoolIndex const&)
00076940 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::NewNode()
00076450 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RemoveAll()
00042e80 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
00043370 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
00045910 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
00043830 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
000426c0 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::Purge()
000462d0 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::Insert(CPhysicsListenerCollision::corepair_t const&)
00044a30 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
00045820 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::NewNode()
00067450 t CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
00067960 t CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
00067e70 t CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
00068870 t CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<void*, void*, unsigned short>::Node_t const&)
00067360 t CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
00067130 t CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
00074440 t CUtlString::FixSlashes(char)
00073c90 t CUtlString::AllocMemory(unsigned int)
00073d10 t CUtlString::GetForModify()
00075120 t CUtlString::GetEmptyString()
000743e0 t CUtlString::StripTrailingSlash()
00073e70 t CUtlString::Set(char const*)
00074710 t CUtlString::Trim(char)
00074750 t CUtlString::Trim(char const*)
00073db0 t CUtlString::Clear()
00073d90 t CUtlString::Purge()
00075090 t CUtlString::Append(char const*)
000750a0 t CUtlString::Append(char const*, int)
000743b0 t CUtlString::Format(char const*, ...)
00074360 t CUtlString::FormatV(char const*, char*)
00073f50 t CUtlString::ToLower()
00073f70 t CUtlString::ToUpper()
00074f30 t CUtlString::PathJoin(char const*, char const*)
00074470 t CUtlString::TrimLeft(char)
00074500 t CUtlString::TrimLeft(char const*)
00073df0 t CUtlString::SetDirect(char const*, int)
00073dc0 t CUtlString::SetLength(int)
000745e0 t CUtlString::TrimRight(char)
00074660 t CUtlString::TrimRight(char const*)
00073fe0 t CUtlString::operator=(char const*)
00073f90 t CUtlString::operator=(CUtlString const&)
00075190 t CUtlString::~CUtlString()
00075190 t CUtlString::~CUtlString()
00074150 t CUtlString::operator+=(char)
00074200 t CUtlString::operator+=(double)
000741b0 t CUtlString::operator+=(int)
000740e0 t CUtlString::operator+=(char const*)
00074070 t CUtlString::operator+=(CUtlString const&)
00075af0 t CUtlSymbol::Initialize()
001aa660 b CUtlSymbol::s_pSymbolTable
00075310 t CUtlSymbol::DisableStaticSymbolTable()
001a6e80 d CUtlSymbol::s_bAllowStaticSymbolTable
00075c10 t CUtlSymbol::CurrTable()
00075eb0 t CUtlSymbol::CUtlSymbol(char const*)
00075eb0 t CUtlSymbol::CUtlSymbol(char const*)
0006ad50 t CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >::InsertBefore(int, CUtlString const&)
0004aaf0 t CUtlVector<CUtlSymbol, CUtlMemory<CUtlSymbol, int> >::InsertBefore(int, CUtlSymbol const&)
00030a50 t CUtlVector<CPhysicsCollisionSet, CUtlMemory<CPhysicsCollisionSet, int> >::InsertBefore(int)
000506b0 t CUtlVector<postrestore_objectlist_t, CUtlMemory<postrestore_objectlist_t, int> >::InsertBefore(int, postrestore_objectlist_t const&)
000505d0 t CUtlVector<postrestore_objectlist_t, CUtlMemory<postrestore_objectlist_t, int> >::~CUtlVector()
000505d0 t CUtlVector<postrestore_objectlist_t, CUtlMemory<postrestore_objectlist_t, int> >::~CUtlVector()
0004ac30 t CUtlVector<CSurface, CUtlMemory<CSurface, int> >::InsertBefore(int, CSurface const&)
001437e0 t CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::SetCount(int)
001437b0 t CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::~CUtlVector()
001437b0 t CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::~CUtlVector()
00030230 t CUtlVector<int, CUtlMemory<int, int> >::GrowVector(int)
0002f450 t CUtlVector<int, CUtlMemory<int, int> >::EnsureCount(int) [clone .part.16]
00030130 t CUtlVector<int, CUtlMemory<int, int> >::ShiftElementsRight(int, int)
00030100 t CUtlVector<int, CUtlMemory<int, int> >::~CUtlVector()
00030100 t CUtlVector<int, CUtlMemory<int, int> >::~CUtlVector()
000467c0 t CUtlVector<CCollisionSolver::realobjectpair_t, CUtlMemory<CCollisionSolver::realobjectpair_t, int> >::InsertBefore(int, CCollisionSolver::realobjectpair_t const&)
0006c760 t CUtlVector<memhandle_t__*, CUtlMemory<memhandle_t__*, int> >::InsertBefore(int, memhandle_t__* const&)
00042d50 t CUtlVector<CPhysicsObject*, CUtlMemory<CPhysicsObject*, int> >::InsertBefore(int, CPhysicsObject* const&)
00041ee0 t CUtlVector<IPhysicsObject*, CUtlMemory<IPhysicsObject*, int> >::FastRemove(int)
00046570 t CUtlVector<IPhysicsObject*, CUtlMemory<IPhysicsObject*, int> >::InsertBefore(int, IPhysicsObject* const&)
00042170 t CUtlVector<IPhysicsObject*, CUtlMemory<IPhysicsObject*, int> >::~CUtlVector()
00042170 t CUtlVector<IPhysicsObject*, CUtlMemory<IPhysicsObject*, int> >::~CUtlVector()
00048a60 t CUtlVector<IVP_Real_Object*, CUtlMemory<IVP_Real_Object*, int> >::InsertBefore(int, IVP_Real_Object* const&)
00042c10 t CUtlVector<IDeleteQueueItem*, CUtlMemory<IDeleteQueueItem*, int> >::InsertBefore(int, IDeleteQueueItem* const&)
00030910 t CUtlVector<IPhysicsEnvironment*, CUtlMemory<IPhysicsEnvironment*, int> >::InsertBefore(int, IPhysicsEnvironment* const&)
0005a4e0 t CUtlVector<CPhysCollideVirtualMesh*, CUtlMemory<CPhysCollideVirtualMesh*, int> >::InsertBefore(int, CPhysCollideVirtualMesh* const&)
0003d800 t CUtlVector<CPhysicsConstraintGroup*, CUtlMemory<CPhysicsConstraintGroup*, int> >::InsertBefore(int, CPhysicsConstraintGroup* const&)
0003d720 t CUtlVector<CPhysicsConstraintGroup*, CUtlMemory<CPhysicsConstraintGroup*, int> >::~CUtlVector()
0003d720 t CUtlVector<CPhysicsConstraintGroup*, CUtlMemory<CPhysicsConstraintGroup*, int> >::~CUtlVector()
00046af0 t CUtlVector<CPhysicsFluidController*, CUtlMemory<CPhysicsFluidController*, int> >::InsertBefore(int, CPhysicsFluidController* const&)
00046c30 t CUtlVector<IPhysicsPlayerController*, CUtlMemory<IPhysicsPlayerController*, int> >::InsertBefore(int, IPhysicsPlayerController* const&)
0004bd90 t CUtlVector<IVP_Core*, CUtlMemory<IVP_Core*, int> >::InsertBefore(int, IVP_Core* const&)
0004bbb0 t CUtlVector<IVP_Core*, CUtlMemory<IVP_Core*, int> >::Remove(int)
00070c00 t CUtlVector<char*, CUtlMemory<char*, int> >::InsertBefore(int, char* const&)
00063fc0 t CUtlVector<IVP_Compact_Ledgetree_Node const*, CUtlMemoryFixedGrowable<IVP_Compact_Ledgetree_Node const*, 64u, int> >::GrowVector(int)
000767e0 t CUtlVector<CUtlSymbolTable::StringPool_t*, CUtlMemory<CUtlSymbolTable::StringPool_t*, int> >::InsertBefore(int, CUtlSymbolTable::StringPool_t* const&)
0006c480 t CUtlVector<void*, CUtlMemory<void*, int> >::InsertBefore(int, void* const&)
00061a40 t CVisitHash::CVisitHash()
00061a40 t CVisitHash::CVisitHash()
         U CVProfNode::EnterScope()
         U CVProfNode::GetSubNode(char const*, int, char const*, int)
         U CVProfNode::ExitScope()
001469d0 t hk_Console::get_instance()
001a7bc0 d hk_Console::m_default_console_buffer
00146960 t hk_Console::exit(int)
00146980 t hk_Console::flush()
001469a0 t hk_Console::printf(char const*, ...)
001b7d80 b hk_Console::m_console
0007d3b0 t hk_Link_EF::get_controller_name()
0007d3a0 t hk_Link_EF::get_controller_priority()
0007d3c0 t hk_Link_EF::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
0007d3e0 t hk_Link_EF::anchor_will_be_deleted_event(IVP_Anchor*)
0007d390 t hk_Link_EF::get_associated_controlled_cores()
0007d400 t hk_Link_EF::core_is_going_to_be_deleted_event(IVP_Core*)
0007d490 t hk_Link_EF::~hk_Link_EF()
0007d430 t hk_Link_EF::~hk_Link_EF()
0007d430 t hk_Link_EF::~hk_Link_EF()
00092990 t hk_Matrix3::set_diagonal(float, float, float)
00092dd0 t hk_Matrix3::set_mul3_inv(hk_Rotation const&, hk_Matrix3 const&)
00092d30 t hk_Matrix3::set_mul3_inv2(hk_Matrix3 const&, hk_Rotation const&)
00092bd0 t hk_Matrix3::set_cross_skew(hk_Vector3 const&, hk_Matrix3 const&)
000928d0 t hk_Matrix3::set_identity_rotation()
000930f0 t hk_Matrix3::set_rotated_diagonal_matrix(hk_Rotation const&, hk_Vector3 const&)
000929c0 t hk_Matrix3::invert(float)
00092f30 t hk_Matrix3::rotate(int, float)
00092880 t hk_Matrix3::set_cols(hk_Vector3 const&, hk_Vector3 const&, hk_Vector3 const&)
00092c70 t hk_Matrix3::set_mul3(hk_Matrix3 const&, hk_Matrix3 const&)
00092810 t hk_Matrix3::set_rows(hk_Vector3 const&, hk_Vector3 const&, hk_Vector3 const&)
00092960 t hk_Matrix3::set_zero()
00092ba0 t hk_Matrix3::transpose()
00092ee0 t hk_Matrix3::operator-=(hk_Matrix3 const&)
00092e90 t hk_Matrix3::operator+=(hk_Matrix3 const&)
00093be0 t hk_Vector3::set_rotated_dir(hk_Rotation const&, hk_Vector3 const&)
00093c70 t hk_Vector3::set_rotated_inv_dir(hk_Rotation const&, hk_Vector3 const&)
00093aa0 t hk_Vector3::set_transformed_pos(hk_Transform const&, hk_Vector3 const&)
00093b40 t hk_Vector3::set_transformed_inv_pos(hk_Transform const&, hk_Vector3 const&)
000d5d50 t IVP_Anchor::init_anchor(IVP_Actuator*, IVP_Template_Anchor*)
000d7cf0 t IVP_Anchor::get_next_anchor()
000d7d00 t IVP_Anchor::get_prev_anchor()
000d7d10 t IVP_Anchor::anchor_get_real_object()
000d7430 t IVP_Anchor::object_is_going_to_be_deleted_event(IVP_Real_Object*)
000d7ce0 t IVP_Anchor::IVP_Anchor()
000d7ce0 t IVP_Anchor::IVP_Anchor()
000d65c0 t IVP_Anchor::~IVP_Anchor()
000d65c0 t IVP_Anchor::~IVP_Anchor()
001012a0 t IVP_Object::to_cluster()
000fff40 t IVP_Object::init(IVP_Environment*)
001012c0 t IVP_Object::to_ball()
00101290 t IVP_Object::to_poly()
001012b0 t IVP_Object::to_real()
00101250 t IVP_Object::set_type(IVP_OBJECT_TYPE)
000ffd10 t IVP_Object::IVP_Object(IVP_Cluster*, IVP_Template_Object const*)
000fff00 t IVP_Object::IVP_Object(IVP_Environment*)
000ffd10 t IVP_Object::IVP_Object(IVP_Cluster*, IVP_Template_Object const*)
000fff00 t IVP_Object::IVP_Object(IVP_Environment*)
000fead0 t IVP_Object::~IVP_Object()
000fea00 t IVP_Object::~IVP_Object()
000fea00 t IVP_Object::~IVP_Object()
001176c0 t IVP_U_Quat::get_angles(IVP_U_Float_Point*)
001186e0 t IVP_U_Quat::invert_quat()
00118330 t IVP_U_Quat::normize_quat()
001189d0 t IVP_U_Quat::set_mult_quat(IVP_U_Quat const*, IVP_U_Quat const*)
00117d50 t IVP_U_Quat::set_quaternion(double const (*) [4])
001183c0 t IVP_U_Quat::set_quaternion(IVP_U_Matrix3 const*)
00118be0 t IVP_U_Quat::set_invert_mult(IVP_U_Quat const*, IVP_U_Quat const*)
001185c0 t IVP_U_Quat::fast_normize_quat()
00118ad0 t IVP_U_Quat::set_div_unit_quat(IVP_U_Quat const*, IVP_U_Quat const*)
00117760 t IVP_U_Quat::set_fast_multiple(IVP_U_Point const*, double)
001152d0 t IVP_U_Quat::inline_set_mult_quat(IVP_U_Quat const*, IVP_U_Float_Quat const*)
001151d0 t IVP_U_Quat::inline_set_mult_quat(IVP_U_Quat const*, IVP_U_Quat const*)
001153e0 t IVP_U_Quat::normize_correct_step(int)
00118770 t IVP_U_Quat::set_invert_unit_quat(IVP_U_Quat const*)
00118250 t IVP_U_Quat::set_interpolate_linear(IVP_U_Quat const*, IVP_U_Quat const*, double)
00117830 t IVP_U_Quat::set_very_fast_multiple(IVP_U_Float_Point const*, double)
00117f40 t IVP_U_Quat::set_interpolate_smoothly(IVP_U_Quat const*, IVP_U_Quat const*, double)
001187c0 t IVP_U_Quat::set_from_rotation_vectors(double, double, double, double, double, double)
00117910 t IVP_U_Quat::set_fast_multiple_with_clip(IVP_U_Float_Point const*, double)
00117a40 t IVP_U_Quat::set(double, double, double)
00115150 t IVP_U_Quat::init()
00114800 t IVP_U_Quat::byte_swap()
001147f0 t IVP_U_Quat::IVP_U_Quat(IVP_U_Matrix3 const*)
001147c0 t IVP_U_Quat::IVP_U_Quat(IVP_U_Point const&)
001147b0 t IVP_U_Quat::IVP_U_Quat()
001147f0 t IVP_U_Quat::IVP_U_Quat(IVP_U_Matrix3 const*)
001147c0 t IVP_U_Quat::IVP_U_Quat(IVP_U_Point const&)
001147b0 t IVP_U_Quat::IVP_U_Quat()
00140ad0 t CPolyhedron::Center()
00143790 t CPolyhedron::~CPolyhedron()
00143710 t CPolyhedron::~CPolyhedron()
00143710 t CPolyhedron::~CPolyhedron()
00063da0 t CVProfScope::~CVProfScope()
00063da0 t CVProfScope::~CVProfScope()
00143d10 t FourVectors::RotateManyBy(FourVectors*, unsigned int, matrix3x4_t const&)
00093830 t hk_Rotation::set_axis_angle(hk_Vector3 const&, float)
00093730 t hk_Rotation::set(hk_Quaternion const&)
00100070 t IVP_Cluster::add_object(IVP_Object*)
001000a0 t IVP_Cluster::remove_object(IVP_Object*)
001012e0 t IVP_Cluster::get_next_object_in_cluster(IVP_Object*)
001012d0 t IVP_Cluster::get_first_object_of_cluster()
00100030 t IVP_Cluster::IVP_Cluster(IVP_Environment*)
000ffff0 t IVP_Cluster::IVP_Cluster(IVP_Cluster*, IVP_Template_Cluster*)
00100030 t IVP_Cluster::IVP_Cluster(IVP_Environment*)
000ffff0 t IVP_Cluster::IVP_Cluster(IVP_Cluster*, IVP_Template_Cluster*)
000feab0 t IVP_Cluster::~IVP_Cluster()
000fea60 t IVP_Cluster::~IVP_Cluster()
000fea60 t IVP_Cluster::~IVP_Cluster()
0011ecd0 t IVP_Mindist::init_mindist(IVP_Real_Object*, IVP_Real_Object*, IVP_Compact_Edge const*, IVP_Compact_Edge const*)
0011fe70 t IVP_Mindist::is_recursive()
00120110 t IVP_Mindist::get_coll_dist()
00124880 t IVP_Mindist::recalc_mindist()
00120140 t IVP_Mindist::get_environment()
001246d0 t IVP_Mindist::mindist_rescue_push()
0011e0f0 t IVP_Mindist::simulate_time_event(IVP_Environment*)
0011d4d0 t IVP_Mindist::hull_manager_is_reset(float, float)
001249d0 t IVP_Mindist::recalc_invalid_mindist()
0011d860 t IVP_Mindist::exact_mindist_went_invalid(IVP_Mindist_Manager*)
0011dbb0 t IVP_Mindist::update_exact_mindist_events(IVP_BOOL, IVP_MINDIST_EVENT_HINT)
0011d500 t IVP_Mindist::create_cp_in_advance_pretension(IVP_Real_Object*, float)
000f9f80 t IVP_Mindist::try_to_generate_managed_friction(IVP_Friction_System**, IVP_BOOL*, IVP_Simulation_Unit*, IVP_BOOL)
0011e7f0 t IVP_Mindist::mindist_hull_limit_exceeded_event(float)
0011c8e0 t IVP_Mindist::print(char const*)
000fba20 t IVP_Mindist::do_impact()
0011c890 t IVP_Mindist::IVP_Mindist(IVP_Environment*, IVP_Collision_Delegator*)
0011c890 t IVP_Mindist::IVP_Mindist(IVP_Environment*, IVP_Collision_Delegator*)
0011e6f0 t IVP_Mindist::~IVP_Mindist()
0011e580 t IVP_Mindist::~IVP_Mindist()
0011e580 t IVP_Mindist::~IVP_Mindist()
0011a8c0 t IVP_OV_Node::IVP_OV_Node()
0011a8c0 t IVP_OV_Node::IVP_OV_Node()
0011a900 t IVP_OV_Node::~IVP_OV_Node()
0011a900 t IVP_OV_Node::~IVP_OV_Node()
00103b30 t IVP_Polygon::IVP_Polygon(IVP_Cluster*, IVP_SurfaceManager*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
00103b30 t IVP_Polygon::IVP_Polygon(IVP_Cluster*, IVP_SurfaceManager*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
00103c00 t IVP_Polygon::~IVP_Polygon()
00103be0 t IVP_Polygon::~IVP_Polygon()
00103be0 t IVP_Polygon::~IVP_Polygon()
0011ff40 t IVP_Synapse::get_object()
0011ffa0 t IVP_Synapse::init_synapse_real(IVP_Mindist_Base*, IVP_Real_Object*)
0011ff80 t IVP_Synapse::set_synapse_mindist(IVP_Mindist_Base*)
0011c5d0 t IVP_Synapse::hull_manager_is_reset(float, float)
0011ecb0 t IVP_Synapse::hull_limit_exceeded_event(IVP_Hull_Manager*, float)
0011c600 t IVP_Synapse::hull_manager_is_going_to_be_deleted_event(IVP_Hull_Manager*)
0011fdc0 t IVP_Synapse::get_type()
0011feb0 t IVP_Synapse::~IVP_Synapse()
0011fdd0 t IVP_Synapse::~IVP_Synapse()
0011fdd0 t IVP_Synapse::~IVP_Synapse()
001103f0 t IVP_U_Hesse::calc_hesse(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
001104c0 t IVP_U_Hesse::calc_hesse(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
001103a0 t IVP_U_Hesse::mult_hesse(double)
00110360 t IVP_U_Hesse::calc_hesse_val(IVP_U_Point const*)
001105b0 t IVP_U_Hesse::normize()
00114520 t IVP_U_Hesse::byte_swap()
0010e300 t IVP_U_Plain::IVP_U_Plain(IVP_U_Hesse const*)
0010e390 t IVP_U_Plain::IVP_U_Plain(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
0010e300 t IVP_U_Plain::IVP_U_Plain(IVP_U_Hesse const*)
0010e390 t IVP_U_Plain::IVP_U_Plain(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
0010f230 t IVP_U_Point::fast_normize()
00111500 t IVP_U_Point::set_crossing(IVP_U_Hesse*, IVP_U_Hesse*, IVP_U_Hesse*)
0010f090 t IVP_U_Point::set_interpolate(IVP_U_Float_Point const*, IVP_U_Float_Point const*, double)
0010f020 t IVP_U_Point::set_interpolate(IVP_U_Point const*, IVP_U_Point const*, double)
00114100 t IVP_U_Point::calc_an_orthogonal(IVP_U_Point const*)
0010f830 t IVP_U_Point::calc_cross_product(IVP_U_Point const*, IVP_U_Point const*)
0010f6e0 t IVP_U_Point::set_orthogonal_part(IVP_U_Point const*, IVP_U_Float_Point const*)
0010f660 t IVP_U_Point::set_orthogonal_part(IVP_U_Point const*, IVP_U_Point const*)
0010f2c0 t IVP_U_Point::real_length_plus_normize()
0010f960 t IVP_U_Point::solve_quadratic_equation_fast(IVP_U_Point const*)
0010fa50 t IVP_U_Point::solve_quadratic_equation_accurate(IVP_U_Point const*)
0010fcb0 t IVP_U_Point::print(char const*)
0010fe10 t IVP_U_Point::rotate(IVP_COORDINATE_INDEX, float)
0010f580 t IVP_U_Point::normize()
0010fde0 t IVP_U_Point::line_max(IVP_U_Point const*)
0010fdb0 t IVP_U_Point::line_min(IVP_U_Point const*)
00114380 t IVP_U_Point::byte_swap()
00114350 t IVP_U_Point::IVP_U_Point(double, double, double)
00115bc0 t IVP_U_Point::IVP_U_Point(IVP_U_Float_Point const&)
00114340 t IVP_U_Point::IVP_U_Point()
00114350 t IVP_U_Point::IVP_U_Point(double, double, double)
00115bc0 t IVP_U_Point::IVP_U_Point(IVP_U_Float_Point const&)
00114340 t IVP_U_Point::IVP_U_Point()
0005a000 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::GetRealSize(void*)
0005a250 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::DestroyResourceStorage(void*)
0005a0c0 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::Lock()
0005a1c0 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::Unlock()
0005a060 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::TryLock()
0005a200 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::~CDataManager()
0005a010 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::~CDataManager()
0005a010 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::~CDataManager()
00041160 t CDeleteProxy<IPhysicsConstraint>::Delete()
00041190 t CDeleteProxy<IPhysicsConstraint>::~CDeleteProxy()
00041150 t CDeleteProxy<IPhysicsConstraint>::~CDeleteProxy()
00041150 t CDeleteProxy<IPhysicsConstraint>::~CDeleteProxy()
0006abe0 t CEmptyConVar::SetValue(float)
0006ac00 t CEmptyConVar::SetValue(int)
0006abc0 t CEmptyConVar::SetValue(char const*)
0006ac70 t CEmptyConVar::~CEmptyConVar()
0006ac50 t CEmptyConVar::~CEmptyConVar()
0006ac50 t CEmptyConVar::~CEmptyConVar()
00037a30 t CPhysCollide::SetOrthographicAreas(Vector const&)
00036f70 t CPhysCollide::UnserializeFromBuffer(char const*, unsigned int, int, bool)
00037a20 t CPhysCollide::ComputeOrthographicAreas(float)
00037ab0 t CPhysCollide::~CPhysCollide()
00037aa0 t CPhysCollide::~CPhysCollide()
00037aa0 t CPhysCollide::~CPhysCollide()
         U CThreadEvent::Set()
         U CThreadEvent::CThreadEvent(bool)
0005fbb0 t CTraceSolver::SweepSingleConvex()
0005f7b0 t CTraceSolver::SolveMeshIntersection(simplex_t&)
0005fb70 t CTraceSolver::SolveMeshIntersection2D(simplex_t&)
00063e10 t CTraceSolver::DoSweep()
000786f0 t (anonymous namespace)::Q_UTF32ToUChar32(wchar_t const*, wchar_t&, bool&)
00078750 t int (anonymous namespace)::Q_UnicodeConvertT<wchar_t, wchar_t, true, (anonymous namespace)::Q_UTF32ToUChar32(wchar_t const*, wchar_t&, bool&), (anonymous namespace)::Q_UChar32ToUTF32Len(wchar_t), (anonymous namespace)::Q_UChar32ToUTF32(wchar_t, wchar_t*)>(wchar_t const*, int, wchar_t*, int, EStringConvertErrorPolicy) [clone .isra.1]
000938b0 t hk_Transform::set_transform(hk_Quaternion const&, hk_Vector3 const&)
000939e0 t hk_Transform::set_interpolate(hk_QTransform&, hk_QTransform&, float)
00093960 t hk_Transform::set_identity_transform()
000938f0 t hk_Transform::set_cols4(hk_Vector3 const&, hk_Vector3 const&, hk_Vector3 const&, hk_Vector3 const&)
00093870 t hk_Transform::hk_Transform(hk_Quaternion const&, hk_Vector3 const&)
00093870 t hk_Transform::hk_Transform(hk_Quaternion const&, hk_Vector3 const&)
001a9010 b InterfaceReg::s_pInterfaceRegs
0006cc00 t InterfaceReg::InterfaceReg(void* (*)(), char const*)
0006cc00 t InterfaceReg::InterfaceReg(void* (*)(), char const*)
00037ad0 t IPhysCollide::~IPhysCollide()
000379d0 t IPhysCollide::~IPhysCollide()
000379d0 t IPhysCollide::~IPhysCollide()
000d7c50 t IVP_Actuator::get_controller_name()
000d7c40 t IVP_Actuator::get_controller_priority()
000d4e40 t IVP_Actuator::anchor_will_be_deleted_event(IVP_Anchor*)
000d7c30 t IVP_Actuator::get_associated_controlled_cores()
000d4e60 t IVP_Actuator::core_is_going_to_be_deleted_event(IVP_Core*)
000d5e50 t IVP_Actuator::IVP_Actuator(IVP_Environment*)
000d5e50 t IVP_Actuator::IVP_Actuator(IVP_Environment*)
000d5440 t IVP_Actuator::~IVP_Actuator()
000d53e0 t IVP_Actuator::~IVP_Actuator()
000d53e0 t IVP_Actuator::~IVP_Actuator()
000d2ba0 t IVP_KK_Input::calc_quad_distance_edge_edge()
000d1ba0 t IVP_KK_Input::IVP_KK_Input(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
000d1ba0 t IVP_KK_Input::IVP_KK_Input(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
0010abc0 t IVP_Material::IVP_Material()
0010abc0 t IVP_Material::IVP_Material()
0010aa00 t IVP_Material::~IVP_Material()
0010a870 t IVP_Material::~IVP_Material()
0010a870 t IVP_Material::~IVP_Material()
000b2080 t IVP_Triangle::calc_hesse()
000b20c0 t IVP_Triangle::calc_areasize()
000b2120 t IVP_Triangle::print(char const*)
000b4610 t IVP_Triangle::IVP_Triangle()
000b4610 t IVP_Triangle::IVP_Triangle()
000b1e20 t IVP_Triangle::~IVP_Triangle()
000b1e10 t IVP_Triangle::~IVP_Triangle()
000b1e10 t IVP_Triangle::~IVP_Triangle()
000b2130 t IVP_Tri_Edge::other_side()
000b21f0 t IVP_Tri_Edge::check_concavity(IVP_Tri_Edge*)
000b21d0 t IVP_Tri_Edge::p()
000b70c0 t IVP_Tri_Edge::search_nearest_edge_to(IVP_U_Point*, double*)
000b2160 t IVP_Tri_Edge::print(char const*)
00111450 t IVP_U_Matrix::init_rows4(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
00114700 t IVP_U_Matrix::set_matrix(IVP_U_Matrix const*)
00110980 t IVP_U_Matrix::interpolate(IVP_U_Matrix const*, IVP_U_Matrix const*, double)
00110a00 t IVP_U_Matrix::real_invert(double)
00110fe0 t IVP_U_Matrix::real_invert(IVP_U_Matrix const*, double)
001146e0 t IVP_U_Matrix::get_position()
00112420 t IVP_U_Matrix::init_columns4(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
00113190 t IVP_U_Matrix::rotate_invers(IVP_COORDINATE_INDEX, float, IVP_U_Matrix*)
00113420 t IVP_U_Matrix::set_transpose(IVP_U_Matrix const*)
00113cc0 t IVP_U_Matrix::write_to_file(_IO_FILE*, char const*)
00113eb0 t IVP_U_Matrix::read_from_file(_IO_FILE*)
00114090 t IVP_U_Matrix::quad_distance_to(IVP_U_Matrix const*)
001124d0 t IVP_U_Matrix::init_rot_multiple(IVP_U_Point const*, double)
00110ee0 t IVP_U_Matrix::init()
00113df0 t IVP_U_Matrix::print(char const*)
00111020 t IVP_U_Matrix::rotate(IVP_COORDINATE_INDEX, float, IVP_U_Matrix*)
00113c20 t IVP_U_Matrix::shift_os(IVP_U_Point const*)
00113be0 t IVP_U_Matrix::shift_ws(IVP_U_Point const*)
00114730 t IVP_U_Matrix::byte_swap()
00113280 t IVP_U_Matrix::transpose()
00116790 t IVP_U_Memory::neuer_sp_block(unsigned int)
001169e0 t IVP_U_Memory::get_mem_transaction(unsigned int)
00116970 t IVP_U_Memory::align_to_next_adress(void*)
00116720 t IVP_U_Memory::free_mem_transaction()
00116980 t IVP_U_Memory::end_memory_transaction()
00116960 t IVP_U_Memory::start_memory_transaction()
001167f0 t IVP_U_Memory::init_mem_transaction_usage(char*, int)
001169b0 t IVP_U_Memory::get_mem(unsigned int)
00116900 t IVP_U_Memory::free_mem()
00116860 t IVP_U_Memory::get_memc(unsigned int)
001168e0 t IVP_U_Memory::init_mem()
001168c0 t IVP_U_Memory::IVP_U_Memory()
001168c0 t IVP_U_Memory::IVP_U_Memory()
00116950 t IVP_U_Memory::~IVP_U_Memory()
00116950 t IVP_U_Memory::~IVP_U_Memory()
00097ee0 t IVP_U_Vector<IVV_Sphere>::clear()
00094230 t IVP_U_Vector<IVP_U_Hesse>::clear()
00037c40 t IVP_U_Vector<IVP_U_Point>::clear()
00099ff0 t IVP_U_Vector<IVP_Triangle>::clear()
000e77f0 t IVP_U_Vector<IVP_Controller>::~IVP_U_Vector()
000e77f0 t IVP_U_Vector<IVP_Controller>::~IVP_U_Vector()
000ea7b0 t IVP_U_Vector<IVP_Listener_PSI>::~IVP_U_Vector()
000ea7b0 t IVP_U_Vector<IVP_Listener_PSI>::~IVP_U_Vector()
00097f20 t IVP_U_Vector<IVP_Compact_Ledge>::clear()
000ea830 t IVP_U_Vector<IVP_Listener_Object>::~IVP_U_Vector()
000ea830 t IVP_U_Vector<IVP_Listener_Object>::~IVP_U_Vector()
000e3820 t IVP_U_Vector<IVP_Listener_Phantom>::~IVP_U_Vector()
000e3820 t IVP_U_Vector<IVP_Listener_Phantom>::~IVP_U_Vector()
000ea730 t IVP_U_Vector<IVP_Hull_Manager_Base>::~IVP_U_Vector()
000ea730 t IVP_U_Vector<IVP_Hull_Manager_Base>::~IVP_U_Vector()
000ea770 t IVP_U_Vector<IVP_Listener_Collision>::~IVP_U_Vector()
000ea770 t IVP_U_Vector<IVP_Listener_Collision>::~IVP_U_Vector()
000ea7f0 t IVP_U_Vector<IVP_Listener_Constraint>::~IVP_U_Vector()
000ea7f0 t IVP_U_Vector<IVP_Listener_Constraint>::~IVP_U_Vector()
000ea8f0 t IVP_U_Vector<IVP_Listener_Set_Active<IVP_Real_Object> >::~IVP_U_Vector()
000ea8f0 t IVP_U_Vector<IVP_Listener_Set_Active<IVP_Real_Object> >::~IVP_U_Vector()
000e3860 t IVP_U_Vector<IVP_Listener_Set_Active<IVP_Mindist_Base> >::~IVP_U_Vector()
000e3860 t IVP_U_Vector<IVP_Listener_Set_Active<IVP_Mindist_Base> >::~IVP_U_Vector()
000ea8b0 t IVP_U_Vector<IVP_Listener_Set_Active<IVP_Core> >::~IVP_U_Vector()
000ea8b0 t IVP_U_Vector<IVP_Listener_Set_Active<IVP_Core> >::~IVP_U_Vector()
0010e120 t IVP_U_Vector<IVP_U_Active_Int_Delayed>::clear()
000dc630 t IVP_U_Vector<IVP_Constraint_Car_Object>::clear()
0010e0e0 t IVP_U_Vector<IVP_U_Active_Float_Delayed>::clear()
000ea870 t IVP_U_Vector<IVP_Collision_Delegator_Root>::clear()
000d7d90 t IVP_U_Vector<IVP_Listener_Check_Dist_Event>::~IVP_U_Vector()
000d7d90 t IVP_U_Vector<IVP_Listener_Check_Dist_Event>::~IVP_U_Vector()
00103af0 t IVP_U_Vector<IVP_Core>::clear()
000ea6f0 t IVP_U_Vector<IVP_Core>::~IVP_U_Vector()
000ea6f0 t IVP_U_Vector<IVP_Core>::~IVP_U_Vector()
00058cf0 t CMeshInstance::EstimatedSize(virtualmeshlist_t const&)
00058f30 t CMeshInstance::CreateResource(virtualmeshlist_t const&)
00058d50 t CMeshInstance::ComputeRootLedgeSize(unsigned char const*)
00058d90 t CMeshInstance::Init(virtualmeshlist_t const&)
00058cc0 t CMeshInstance::~CMeshInstance()
00058cc0 t CMeshInstance::~CMeshInstance()
000636d0 t CPhysicsTrace::SweepBoxIVP(Ray_t const&, unsigned int, IConvexInfo*, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
000638f0 t CPhysicsTrace::SweepBoxIVP(Vector const&, Vector const&, Vector const&, Vector const&, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
000616c0 t CPhysicsTrace::IsBoxIntersectingCone(Vector const&, Vector const&, truncatedcone_t const&)
000620e0 t CPhysicsTrace::GetAABB(Vector*, Vector*, CPhysCollide const*, Vector const&, QAngle const&)
000631a0 t CPhysicsTrace::SweepIVP(Vector const&, Vector const&, CPhysCollide const*, QAngle const&, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
00061cc0 t CPhysicsTrace::GetExtent(CPhysCollide const*, Vector const&, QAngle const&, Vector const&)
00061a20 t CPhysicsTrace::CPhysicsTrace()
00061a20 t CPhysicsTrace::CPhysicsTrace()
00061a30 t CPhysicsTrace::~CPhysicsTrace()
00061a30 t CPhysicsTrace::~CPhysicsTrace()
00037350 t CPhysPolysoup::CPhysPolysoup()
00037350 t CPhysPolysoup::CPhysPolysoup()
000412b0 t CSleepObjects::event_object_frozen(IVP_Event_Object*)
000409d0 t CSleepObjects::event_object_created(IVP_Event_Object*)
00041880 t CSleepObjects::event_object_deleted(IVP_Event_Object*)
00042de0 t CSleepObjects::event_object_revived(IVP_Event_Object*)
000425e0 t CSleepObjects::~CSleepObjects()
00042630 t CSleepObjects::~CSleepObjects()
00042630 t CSleepObjects::~CSleepObjects()
         U CThreadRWLock::UnlockWrite()
         U CThreadRWLock::WaitForRead()
         U CThreadRWLock::LockForWrite()
00078400 t CUtlHashtable<CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::IndirectIndex, empty_t, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::HashProxy, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::EqualProxy, char const*>::DoInsertUnconstructed(unsigned int, bool)
000782a0 t CUtlHashtable<CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::IndirectIndex, empty_t, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::HashProxy, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::EqualProxy, char const*>::BumpEntry(unsigned int)
00078530 t CUtlHashtable<CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::IndirectIndex, empty_t, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::HashProxy, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::EqualProxy, char const*>::DoRealloc(int)
00076590 t CUtlHashtable<CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::IndirectIndex, empty_t, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::HashProxy, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::EqualProxy, char const*>::RemoveAll()
0006cae0 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::CreateList()
0006c1b0 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::LinkBefore(unsigned short, unsigned short, unsigned short)
0006c5c0 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::Alloc()
0006c0c0 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::Unlink(unsigned short, unsigned short)
0006c2a0 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::LinkAfter(unsigned short, unsigned short, unsigned short)
0006bec0 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::CUtlMultiList(int, int)
0006bec0 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::CUtlMultiList(int, int)
0006bf60 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::~CUtlMultiList()
0006bf60 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::~CUtlMultiList()
00047620 t CUtlMultiList<void*, unsigned short>::CreateList()
00042a60 t CUtlMultiList<void*, unsigned short>::LinkBefore(unsigned short, unsigned short, unsigned short)
00047310 t CUtlMultiList<void*, unsigned short>::Alloc()
00042520 t CUtlMultiList<void*, unsigned short>::Remove(unsigned short, unsigned short)
00042440 t CUtlMultiList<void*, unsigned short>::Unlink(unsigned short, unsigned short)
00041f10 t CUtlMultiList<void*, unsigned short>::CUtlMultiList(int, int)
00041f10 t CUtlMultiList<void*, unsigned short>::CUtlMultiList(int, int)
00042230 t CUtlMultiList<void*, unsigned short>::~CUtlMultiList()
00042230 t CUtlMultiList<void*, unsigned short>::~CUtlMultiList()
00041250 t CVoidPairHash::~CVoidPairHash()
00041230 t CVoidPairHash::~CVoidPairHash()
00041230 t CVoidPairHash::~CVoidPairHash()
00090920 t hk_Array_Base::grow_mem(int)
000909e0 t hk_Array_Base::grow_mem(int, int)
000908d0 t hk_Array_Base::alloc_mem(int, int)
0007fa80 t hk_Constraint::get_constraint_dof()
0007fa70 t hk_Constraint::get_constraint_type()
0007fa00 t hk_Constraint::hk_Constraint(hk_Local_Constraint_System*, hk_Rigid_Body*, hk_Rigid_Body*, IVP_CONTROLLER_PRIORITY, int)
0007fa00 t hk_Constraint::hk_Constraint(hk_Local_Constraint_System*, hk_Rigid_Body*, hk_Rigid_Body*, IVP_CONTROLLER_PRIORITY, int)
0007f9e0 t hk_Constraint::~hk_Constraint()
0007f9a0 t hk_Constraint::~hk_Constraint()
0007f9a0 t hk_Constraint::~hk_Constraint()
000933a0 t hk_Quaternion::set_axis_angle(hk_Vector3 const&, float)
000931a0 t hk_Quaternion::set(hk_Rotation const&)
00093410 t hk_Quaternion::set_slerp(hk_Quaternion const&, hk_Quaternion const&, float)
00132f60 t IVP_3D_Solver::calc_nullstelle(IVP_Time, IVP_Time, double, double, double, IVP_Real_Object*, IVP_Real_Object*)
001339e0 t IVP_3D_Solver::set_max_deviation(double)
001334a0 t IVP_3D_Solver::find_first_t_for_value_coll(double, double, IVP_Time, IVP_Time, IVP_U_Matrix_Cache*, IVP_U_Matrix_Cache*, double*, IVP_Time*)
001331a0 t IVP_3D_Solver::find_first_t_for_value_max_dev(double, IVP_Time, IVP_Time, int, IVP_U_Matrix_Cache*, IVP_U_Matrix_Cache*, double*, IVP_Time*)
00133490 t IVP_3D_Solver::find_first_t_for_value_max_dev2(double, IVP_Time, IVP_Time, int, IVP_U_Matrix_Cache*, IVP_U_Matrix_Cache*, double*, IVP_Time*)
000d0530 t IVP_CFEP_Hash::pair_to_index(IVP_CFEP_Objectpair*)
000d0570 t IVP_CFEP_Hash::add(IVP_CFEP_Objectpair*)
000d0610 t IVP_CFEP_Hash::find(IVP_CFEP_Objectpair*)
000d05c0 t IVP_CFEP_Hash::remove(IVP_CFEP_Objectpair*)
000d06a0 t IVP_CFEP_Hash::IVP_CFEP_Hash(int)
000d06a0 t IVP_CFEP_Hash::IVP_CFEP_Hash(int)
000d0450 t IVP_CFEP_Hash::~IVP_CFEP_Hash()
000d03d0 t IVP_CFEP_Hash::~IVP_CFEP_Hash()
000d03d0 t IVP_CFEP_Hash::~IVP_CFEP_Hash()
0011c410 t IVP_Collision::set_fvector_index(int, int)
0011c360 t IVP_Collision::delegator_is_going_to_be_deleted_event(IVP_Collision_Delegator*)
0011c440 t IVP_Collision::IVP_Collision(IVP_Collision_Delegator*)
0011c440 t IVP_Collision::IVP_Collision(IVP_Collision_Delegator*)
0011c3a0 t IVP_Collision::~IVP_Collision()
0011c380 t IVP_Collision::~IVP_Collision()
0011c380 t IVP_Collision::~IVP_Collision()
00103aa0 t IVP_Event_Sim::IVP_Event_Sim(IVP_Environment*)
00103a50 t IVP_Event_Sim::IVP_Event_Sim(IVP_Environment*, double)
00103aa0 t IVP_Event_Sim::IVP_Event_Sim(IVP_Environment*)
00103a50 t IVP_Event_Sim::IVP_Event_Sim(IVP_Environment*, double)
000dffa0 t IVP_MI_Vector::add_multiple(IVP_MI_Vector const*, float)
000e02c0 t IVP_MI_Vector::set_time_stamp(IVP_Time)
000e0e60 t IVP_MI_Vector::malloc_mi_vector(int)
000e0f00 t IVP_MI_Vector::malloc_and_set_mi_vector(int, float*)
000dfed0 t IVP_MI_Vector::add(IVP_MI_Vector const*)
000e1010 t IVP_MI_Vector::set(int, float)
000dfd40 t IVP_MI_Vector::set(IVP_MI_Vector const*)
000e0080 t IVP_MI_Vector::mult(float)
000dfe00 t IVP_MI_Vector::subtract(IVP_MI_Vector const*)
00126aa0 t IVP_U_FVector<IVP_Collision>::~IVP_U_FVector()
00126aa0 t IVP_U_FVector<IVP_Collision>::~IVP_U_FVector()
00111e40 t IVP_U_Matrix3::get_angles(float*, float*, float*)
00111c60 t IVP_U_Matrix3::init_rows3(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
00113350 t IVP_U_Matrix3::transpose3()
00111d40 t IVP_U_Matrix3::orthogonize()
00110cf0 t IVP_U_Matrix3::real_invert(double)
00111e20 t IVP_U_Matrix3::orthonormize()
00111cd0 t IVP_U_Matrix3::init_columns3(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
00111330 t IVP_U_Matrix3::init_rotated3(IVP_COORDINATE_INDEX, float)
00113390 t IVP_U_Matrix3::set_transpose3(IVP_U_Matrix3 const*)
0010ffc0 t IVP_U_Matrix3::calc_eigen_vector(double, IVP_U_Point*)
00111610 t IVP_U_Matrix3::init_normized3_col(IVP_U_Point const*, IVP_COORDINATE_INDEX)
00111920 t IVP_U_Matrix3::init_normized3_col(IVP_U_Point const*, IVP_COORDINATE_INDEX, IVP_U_Point const*)
00111790 t IVP_U_Matrix3::init_normized3_row(IVP_U_Point const*, IVP_COORDINATE_INDEX)
00111ac0 t IVP_U_Matrix3::init_normized3_row(IVP_U_Point const*, IVP_COORDINATE_INDEX, IVP_U_Point const*)
00113fd0 t IVP_U_Matrix3::quad_rot_distance_to(IVP_U_Matrix3 const*)
00110f60 t IVP_U_Matrix3::init3()
0010ff60 t IVP_U_Matrix3::normize()
00115b50 t IVP_U_Matrix3::set_col(IVP_COORDINATE_INDEX, IVP_U_Point const*)
00115b80 t IVP_U_Matrix3::set_col(IVP_COORDINATE_INDEX, IVP_U_Float_Point const*)
00115ae0 t IVP_U_Matrix3::set_row(IVP_COORDINATE_INDEX, IVP_U_Point const*)
00115b10 t IVP_U_Matrix3::set_row(IVP_COORDINATE_INDEX, IVP_U_Float_Point const*)
00114660 t IVP_U_Matrix3::set_elem(int, int, double)
00114680 t IVP_U_Matrix3::byte_swap()
000e5970 t IVP_Vec_PCore::IVP_Vec_PCore(IVP_Core const*, IVP_U_Float_Point const*)
000e5970 t IVP_Vec_PCore::IVP_Vec_PCore(IVP_Core const*, IVP_U_Float_Point const*)
000b2570 t P_Sur_2D_Line::has_points(P_Sur_2D_Point*, P_Sur_2D_Point*)
000b2600 t P_Sur_2D_Line::dist_to_point(IVP_U_Point*)
000b28e0 t P_Sur_2D_Line::is_crossing_line(P_Sur_2D_Line*)
000b27d0 t P_Sur_2D_Line::overlaps_with_line(P_Sur_2D_Line*)
000b26a0 t P_Sur_2D_Line::hesse_dist_to_point(IVP_U_Point*)
000b26e0 t P_Sur_2D_Line::point_lies_in_interval(IVP_U_Point*)
000b2520 t P_Sur_2D_Line::point_lies_to_the_left(IVP_U_Point*)
000b2460 t P_Sur_2D_Line::P_Sur_2D_Line(P_Sur_2D_Point*, P_Sur_2D_Point*)
000b2460 t P_Sur_2D_Line::P_Sur_2D_Line(P_Sur_2D_Point*, P_Sur_2D_Point*)
000b2510 t P_Sur_2D_Line::~P_Sur_2D_Line()
000b2510 t P_Sur_2D_Line::~P_Sur_2D_Line()
00030660 t CBaseAppSystem<IPhysics>::Disconnect()
00030640 t CBaseAppSystem<IPhysics>::QueryInterface(char const*)
00030670 t CBaseAppSystem<IPhysics>::Init()
00030650 t CBaseAppSystem<IPhysics>::Connect(void* (*)(char const*, int*))
00030680 t CBaseAppSystem<IPhysics>::Shutdown()
00063b00 t CDefConvexInfo::GetContents(int)
00069950 t ConCommandBase::CopyString(char const*)
00068f10 t ConCommandBase::CreateBase(char const*, char const*, int)
001a8e60 b ConCommandBase::s_pAccessor
001a8e70 b ConCommandBase::s_pConCommandBases
00068f80 t ConCommandBase::Init()
00069940 t ConCommandBase::GetNext()
00068fd0 t ConCommandBase::AddFlags(int)
00069910 t ConCommandBase::Shutdown()
000698f0 t ConCommandBase::ConCommandBase(char const*, char const*, int)
000698c0 t ConCommandBase::ConCommandBase()
000698f0 t ConCommandBase::ConCommandBase(char const*, char const*, int)
000698c0 t ConCommandBase::ConCommandBase()
000691b0 t ConCommandBase::~ConCommandBase()
00068ee0 t ConCommandBase::~ConCommandBase()
00068ee0 t ConCommandBase::~ConCommandBase()
0004dff0 t CPhysicsObject::EnableDrag(bool)
0004e580 t CPhysicsObject::NotifyWake()
0004c120 t CPhysicsObject::SetDamping(float const*, float const*)
0004d5c0 t CPhysicsObject::SetInertia(Vector const&)
0004ef00 t CPhysicsObject::AddVelocity(Vector const*, Vector const*)
0004e550 t CPhysicsObject::NotifySleep()
0004c160 t CPhysicsObject::SetContents(unsigned int)
0004bff0 t CPhysicsObject::SetGameData(void*)
0004cd00 t CPhysicsObject::SetPosition(Vector const&, QAngle const&, bool)
0004ecc0 t CPhysicsObject::SetVelocity(Vector const*, Vector const*)
0004ca90 t CPhysicsObject::BecomeHinged(int)
0004d940 t CPhysicsObject::EnableMotion(bool)
0004ca70 t CPhysicsObject::RemoveHinged()
0004be40 t CPhysicsObject::SetGameFlags(unsigned short)
0004be60 t CPhysicsObject::SetGameIndex(unsigned short)
0004c170 t CPhysicsObject::UpdateShadow(Vector const&, QAngle const&, bool, float)
0004de50 t CPhysicsObject::BecomeTrigger()
0004ec90 t CPhysicsObject::ClampVelocity()
0004d9f0 t CPhysicsObject::EnableGravity(bool)
0004c3f0 t CPhysicsObject::RemoveTrigger()
0004f940 t CPhysicsObject::WriteToTemplate(vphysics_save_cphysicsobject_t&)
0004f180 t CPhysicsObject::ApplyForceCenter(Vector const&)
0004f090 t CPhysicsObject::ApplyForceOffset(Vector const&, Vector const&)
0004da70 t CPhysicsObject::EnableCollisions(bool)
0004fb30 t CPhysicsObject::InitFromTemplate(CPhysicsEnvironment*, void*, vphysics_save_cphysicsobject_t const&)
0004c150 t CPhysicsObject::SetBuoyancyRatio(float)
0004be20 t CPhysicsObject::SetCallbackFlags(unsigned short)
0004d8b0 t CPhysicsObject::SetMaterialIndex(int)
0004eff0 t CPhysicsObject::ApplyTorqueCenter(Vector const&)
0004ce40 t CPhysicsObject::SetPositionMatrix(matrix3x4_t const&, bool)
0004e630 t CPhysicsObject::RecomputeDragBases()
0004bf90 t CPhysicsObject::SetDragCoefficient(float*, float*)
0004cb60 t CPhysicsObject::ComputeShadowControl(hlshadowcontrol_params_t const&, float, float)
0004bea0 t CPhysicsObject::RecheckContactPoints()
0004d660 t CPhysicsObject::CreateFrictionSnapshot()
0004e590 t CPhysicsObject::GetVPhysicsEnvironment()
0004de10 t CPhysicsObject::RecheckCollisionFilter()
0004c220 t CPhysicsObject::RemoveShadowController()
0004d650 t CPhysicsObject::DestroyFrictionSnapshot(IPhysicsFrictionSnapshot*)
0004f290 t CPhysicsObject::RestoreShadowController(IPhysicsShadowController*)
0004ede0 t CPhysicsObject::SetVelocityInstantaneous(Vector const*, Vector const*)
0004eba0 t CPhysicsObject::Init(CPhysCollide const*, IVP_Real_Object*, int, float, float, float)
0004d720 t CPhysicsObject::Wake()
0004d700 t CPhysicsObject::Sleep()
0004ead0 t CPhysicsObject::SetMass(float)
0004df50 t CPhysicsObject::SetShadow(float, float, bool, bool)
0004ea10 t CPhysicsObject::SetVolume(float)
0004e4c0 t CPhysicsObject::CPhysicsObject()
0004e4c0 t CPhysicsObject::CPhysicsObject()
0004d870 t CPhysicsObject::~CPhysicsObject()
0004d740 t CPhysicsObject::~CPhysicsObject()
0004d740 t CPhysicsObject::~CPhysicsObject()
000548f0 t CPhysicsSpring::GetEndObject()
00054000 t CPhysicsSpring::GetEndpoints(Vector*, Vector*)
00054290 t CPhysicsSpring::AttachListener()
00054330 t CPhysicsSpring::DetachListener()
000548e0 t CPhysicsSpring::GetStartObject()
000540e0 t CPhysicsSpring::SetSpringLength(float)
00054460 t CPhysicsSpring::WriteToTemplate(vphysics_save_cphysicsspring_t&)
00054150 t CPhysicsSpring::SetSpringDamping(float)
00054180 t CPhysicsSpring::SetSpringConstant(float)
00054950 t CPhysicsSpring::event_object_frozen(IVP_Event_Object*)
00054910 t CPhysicsSpring::event_object_created(IVP_Event_Object*)
000543b0 t CPhysicsSpring::event_object_deleted(IVP_Event_Object*)
00054930 t CPhysicsSpring::event_object_revived(IVP_Event_Object*)
000542e0 t CPhysicsSpring::CPhysicsSpring(CPhysicsObject*, CPhysicsObject*, IVP_Actuator_Spring*)
000542e0 t CPhysicsSpring::CPhysicsSpring(CPhysicsObject*, CPhysicsObject*, IVP_Actuator_Spring*)
00054440 t CPhysicsSpring::~CPhysicsSpring()
000543d0 t CPhysicsSpring::~CPhysicsSpring()
000543d0 t CPhysicsSpring::~CPhysicsSpring()
00078130 t CUtlLinkedList<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short>, unsigned short> >::AllocInternal(bool)
00078650 t CUtlLinkedList<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short>, unsigned short> >::Unlink(unsigned short)
00077fd0 t CUtlLinkedList<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short>, unsigned short> >::RemoveAll()
0006c8c0 t CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)
0006ca30 t CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
000474b0 t CUtlLinkedList<CUtlMultiList<void*, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<void*, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)
00046cc0 t CUtlLinkedList<CUtlMultiList<void*, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<void*, unsigned short>::List_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
000421a0 t CUtlLinkedList<CUtlMultiList<void*, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<void*, unsigned short>::List_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
000421a0 t CUtlLinkedList<CUtlMultiList<void*, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<void*, unsigned short>::List_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
00065be0 t CVPhysicsParse::ParseFluid(fluid_t*, IVPhysicsKeyHandler*)
00066360 t CVPhysicsParse::ParseSolid(solid_t*, IVPhysicsKeyHandler*)
00065780 t CVPhysicsParse::ParseCustom(void*, IVPhysicsKeyHandler*)
00065900 t CVPhysicsParse::ParseVehicle(vehicleparams_t*, IVPhysicsKeyHandler*)
00065420 t CVPhysicsParse::ParseVehicleAxle(vehicle_axleparams_t&)
00064d40 t CVPhysicsParse::ParseVehicleBody(vehicle_bodyparams_t&)
00065b20 t CVPhysicsParse::ParseSurfaceTable(int*, IVPhysicsKeyHandler*)
00065180 t CVPhysicsParse::ParseVehicleWheel(vehicle_wheelparams_t&)
00064940 t CVPhysicsParse::ParseVehicleEngine(vehicle_engineparams_t&)
00064070 t CVPhysicsParse::GetCurrentBlockName()
00064210 t CVPhysicsParse::ParseVehicleSteering(vehicle_steeringparams_t&)
00065ee0 t CVPhysicsParse::ParseRagdollConstraint(constraint_ragdollparams_t*, IVPhysicsKeyHandler*)
00064fc0 t CVPhysicsParse::ParseVehicleSuspension(vehicle_suspensionparams_t&)
00066790 t CVPhysicsParse::ParseSurfaceTablePacked(CUtlVector<char, CUtlMemory<char, int> >&)
00064780 t CVPhysicsParse::ParseVehicleEngineBoost(vehicle_engineparams_t&)
00064090 t CVPhysicsParse::Finished()
00065650 t CVPhysicsParse::NextBlock()
00066920 t CVPhysicsParse::SkipBlock()
000656f0 t CVPhysicsParse::CVPhysicsParse(char const*)
000656f0 t CVPhysicsParse::CVPhysicsParse(char const*)
00066950 t CVPhysicsParse::~CVPhysicsParse()
00066910 t CVPhysicsParse::~CVPhysicsParse()
00066910 t CVPhysicsParse::~CVPhysicsParse()
000504e0 t IPhysicsObject::~IPhysicsObject()
00050400 t IPhysicsObject::~IPhysicsObject()
00050400 t IPhysicsObject::~IPhysicsObject()
00054960 t IPhysicsSpring::~IPhysicsSpring()
000548d0 t IPhysicsSpring::~IPhysicsSpring()
000548d0 t IPhysicsSpring::~IPhysicsSpring()
000d9a90 t IVP_Car_System::calc_ackerman_angle(float, float, float)
000daaa0 t IVP_Car_System::event_object_deleted(IVP_Event_Object*)
000da920 t IVP_Car_System::IVP_Car_System()
000da920 t IVP_Car_System::IVP_Car_System()
000d9090 t IVP_Car_System::~IVP_Car_System()
000d8fc0 t IVP_Car_System::~IVP_Car_System()
000d8fc0 t IVP_Car_System::~IVP_Car_System()
00137100 t IVP_Constraint::deactivate()
001370b0 t IVP_Constraint::get_environment()
00136f10 t IVP_Constraint::fix_rotation_axis(IVP_COORDINATE_INDEX)
00136f00 t IVP_Constraint::free_rotation_axis(IVP_COORDINATE_INDEX)
00136ef0 t IVP_Constraint::limit_rotation_axis(IVP_COORDINATE_INDEX, float, float)
00136f70 t IVP_Constraint::fix_translation_axis(IVP_COORDINATE_INDEX)
00136f60 t IVP_Constraint::free_translation_axis(IVP_COORDINATE_INDEX)
00136f50 t IVP_Constraint::limit_translation_axis(IVP_COORDINATE_INDEX, float, float)
00136fb0 t IVP_Constraint::change_fixing_point_Ros(IVP_U_Point const*)
0012fbb0 t IVP_Constraint::get_controller_priority()
00136f30 t IVP_Constraint::change_rotation_axes_Ros(IVP_U_Matrix3 const*)
00136ee0 t IVP_Constraint::change_max_rotation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
00136f90 t IVP_Constraint::change_translation_axes_Ros(IVP_U_Matrix3 const*)
00136f40 t IVP_Constraint::change_max_translation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
00136fa0 t IVP_Constraint::change_target_fixing_point_Ros(IVP_U_Point const*)
00136ed0 t IVP_Constraint::change_Aos_to_relaxe_constraint()
00136ec0 t IVP_Constraint::change_Ros_to_relaxe_constraint()
00136f20 t IVP_Constraint::change_target_rotation_axes_Ros(IVP_U_Matrix3 const*)
0012fbc0 t IVP_Constraint::get_associated_controlled_cores()
00136eb0 t IVP_Constraint::get_minimum_simulation_frequency()
00136e90 t IVP_Constraint::core_is_going_to_be_deleted_event(IVP_Core*)
00136f80 t IVP_Constraint::change_target_translation_axes_Ros(IVP_U_Matrix3 const*)
001370c0 t IVP_Constraint::activate()
00137080 t IVP_Constraint::IVP_Constraint()
00137080 t IVP_Constraint::IVP_Constraint()
00137060 t IVP_Constraint::~IVP_Constraint()
00136fc0 t IVP_Constraint::~IVP_Constraint()
00136fc0 t IVP_Constraint::~IVP_Constraint()
001038a0 t IVP_Controller::reset_time(IVP_Time)
001038b0 t IVP_Controller::get_controller_name()
00103890 t IVP_Controller::get_minimum_simulation_frequency()
00103880 t IVP_Controller::core_is_going_to_be_deleted_event(IVP_Core*)
001039a0 t IVP_Controller::~IVP_Controller()
001038c0 t IVP_Controller::~IVP_Controller()
001038c0 t IVP_Controller::~IVP_Controller()
000d5a00 t IVP_Extra_Info::IVP_Extra_Info()
000d5a00 t IVP_Extra_Info::IVP_Extra_Info()
000fc030 t IVP_Merge_Core::set_radius()
000fc9b0 t IVP_Merge_Core::place_objects()
000fbdd0 t IVP_Merge_Core::find_main_axis()
000fbb60 t IVP_Merge_Core::find_mass_center()
000fbc60 t IVP_Merge_Core::find_damp_factors()
000fc8a0 t IVP_Merge_Core::synchronize_motion()
000fc910 t IVP_Merge_Core::check_for_unmovable_core()
000fcae0 t IVP_Merge_Core::calc_calc()
000fc0f0 t IVP_Merge_Core::set_speed()
000fc7f0 t IVP_Merge_Core::IVP_Merge_Core(IVP_Core_Merged*, IVP_Core*, IVP_Core*)
000fc790 t IVP_Merge_Core::IVP_Merge_Core()
000fc7f0 t IVP_Merge_Core::IVP_Merge_Core(IVP_Core_Merged*, IVP_Core*, IVP_Core*)
000fc790 t IVP_Merge_Core::IVP_Merge_Core()
000fc870 t IVP_Merge_Core::~IVP_Merge_Core()
000fc870 t IVP_Merge_Core::~IVP_Merge_Core()
00126820 t IVP_OO_Watcher::get_ledges(IVP_Compact_Ledge const**)
00126800 t IVP_OO_Watcher::get_objects(IVP_Real_Object**)
00120000 t IVP_OO_Watcher::get_synapse(int)
001264d0 t IVP_OO_Watcher::hull_limit_exceeded_event()
00126780 t IVP_OO_Watcher::collision_is_going_to_be_deleted_event(IVP_Collision*)
00126750 t IVP_OO_Watcher::hull_manager_is_going_to_be_deleted_event()
001269b0 t IVP_OO_Watcher::IVP_OO_Watcher(IVP_Collision_Delegator*, IVP_Real_Object*, IVP_Real_Object*)
001269b0 t IVP_OO_Watcher::IVP_OO_Watcher(IVP_Collision_Delegator*, IVP_Real_Object*, IVP_Real_Object*)
00126990 t IVP_OO_Watcher::~IVP_OO_Watcher()
00126850 t IVP_OO_Watcher::~IVP_OO_Watcher()
00126850 t IVP_OO_Watcher::~IVP_OO_Watcher()
0011a7c0 t IVP_OV_Element::add_oo_collision(IVP_Collision*)
0011a6d0 t IVP_OV_Element::add_to_hull_manager(IVP_Hull_Manager*, double)
0011a840 t IVP_OV_Element::remove_oo_collision(IVP_Collision*)
0011a610 t IVP_OV_Element::hull_limit_exceeded_event(IVP_Hull_Manager*, float)
0011a5f0 t IVP_OV_Element::hull_manager_is_going_to_be_deleted_event(IVP_Hull_Manager*)
0011a5e0 t IVP_OV_Element::get_type()
0011a670 t IVP_OV_Element::IVP_OV_Element(IVP_Real_Object*)
0011a670 t IVP_OV_Element::IVP_OV_Element(IVP_Real_Object*)
0011bec0 t IVP_OV_Element::~IVP_OV_Element()
0011be00 t IVP_OV_Element::~IVP_OV_Element()
0011be00 t IVP_OV_Element::~IVP_OV_Element()
000b1bb0 t IVP_point_hash::find_point(IVP_Poly_Point*)
000b1b50 t IVP_point_hash::remove_point(IVP_Poly_Point*)
000b1a70 t IVP_point_hash::point_to_index(IVP_Poly_Point*)
000b1af0 t IVP_point_hash::add_point(IVP_Poly_Point*)
000b1c40 t IVP_point_hash::IVP_point_hash(int)
000b1c40 t IVP_point_hash::IVP_point_hash(int)
000b1a40 t IVP_point_hash::~IVP_point_hash()
000b1a20 t IVP_point_hash::~IVP_point_hash()
000b1a20 t IVP_point_hash::~IVP_point_hash()
000b1ec0 t IVP_Poly_Point::p()
000b1e70 t IVP_Poly_Point::print(char const*)
000b1e40 t IVP_Poly_Point::point_num()
000d4290 t IVP_Ray_Solver::check_ray_against_ball(IVP_Ball*)
000d3240 t IVP_Ray_Solver::check_ray_against_cube(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
000d46c0 t IVP_Ray_Solver::check_ray_against_node(IVP_OV_Node*, IVP_OV_Tree_Manager*)
000d4530 t IVP_Ray_Solver::check_ray_against_object(IVP_Real_Object*)
000d3190 t IVP_Ray_Solver::check_ray_against_square(float, float, IVP_U_Float_Point const*, IVP_U_Float_Point const*, int, int)
000d4a90 t IVP_Ray_Solver::check_ray_against_all_objects_in_sim(IVP_Environment const*)
000d3050 t IVP_Ray_Solver::IVP_Ray_Solver(IVP_Ray_Solver_Template const*)
000d3050 t IVP_Ray_Solver::IVP_Ray_Solver(IVP_Ray_Solver_Template const*)
000d4cc0 t IVP_Ray_Solver::~IVP_Ray_Solver()
000d4c80 t IVP_Ray_Solver::~IVP_Ray_Solver()
000d4c80 t IVP_Ray_Solver::~IVP_Ray_Solver()
001266e0 t IVP_Synapse_OO::init_synapse_oo(IVP_OO_Watcher*, IVP_Real_Object*)
00126640 t IVP_Synapse_OO::hull_limit_exceeded_event(IVP_Hull_Manager*, float)
00126660 t IVP_Synapse_OO::hull_manager_is_going_to_be_deleted_event(IVP_Hull_Manager*)
0011fe50 t IVP_Synapse_OO::get_type()
0011fff0 t IVP_Synapse_OO::IVP_Synapse_OO()
0011fff0 t IVP_Synapse_OO::IVP_Synapse_OO()
001266c0 t IVP_Synapse_OO::~IVP_Synapse_OO()
00126690 t IVP_Synapse_OO::~IVP_Synapse_OO()
00126690 t IVP_Synapse_OO::~IVP_Synapse_OO()
000b7220 t IVP_Tetra_Edge::p()
000b71b0 t IVP_Tetra_Edge::print(char const*)
00108800 t IVP_Time_Event::simulate_time_event(IVP_Environment*)
00108830 t IVP_Time_Event::IVP_Time_Event()
00108830 t IVP_Time_Event::IVP_Time_Event()
00116e10 t IVP_U_Min_Hash::remove_min()
00116d60 t IVP_U_Min_Hash::change_value(void*, double)
00116e40 t IVP_U_Min_Hash::find_min_elem()
00116e60 t IVP_U_Min_Hash::find_min_value()
00116ae0 t IVP_U_Min_Hash::min_added_at_index(IVP_U_Min_Hash_Elem*, int)
00116b30 t IVP_U_Min_Hash::min_removed_at_index(IVP_U_Min_Hash_Elem*, int)
00116c00 t IVP_U_Min_Hash::add(void*, double)
00116cc0 t IVP_U_Min_Hash::remove(void*)
00116a10 t IVP_U_Min_Hash::IVP_U_Min_Hash(int)
00116a10 t IVP_U_Min_Hash::IVP_U_Min_Hash(int)
00116a60 t IVP_U_Min_Hash::~IVP_U_Min_Hash()
00116a60 t IVP_U_Min_Hash::~IVP_U_Min_Hash()
00117550 t IVP_U_Min_List::has_elements()
00117530 t IVP_U_Min_List::find_min_elem()
00117570 t IVP_U_Min_List::find_min_value()
00117580 t IVP_U_Min_List::prefetch0_minlist()
00117590 t IVP_U_Min_List::prefetch1_minlist()
001173e0 t IVP_U_Min_List::remove_minlist_elem(unsigned int)
00117020 t IVP_U_Min_List::add(void*, float)
001174e0 t IVP_U_Min_List::check()
00116f60 t IVP_U_Min_List::IVP_U_Min_List(int)
00116f60 t IVP_U_Min_List::IVP_U_Min_List(int)
00116ff0 t IVP_U_Min_List::~IVP_U_Min_List()
00116ff0 t IVP_U_Min_List::~IVP_U_Min_List()
0010e860 t IVP_U_Straight::calc_intersect_with(IVP_U_Straight const*, IVP_U_Point*, double*)
0010e4d0 t IVP_U_Straight::set(IVP_U_Point const*, IVP_U_Point const*)
0010e550 t IVP_U_Straight::set(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
0010e450 t IVP_U_Straight::IVP_U_Straight(IVP_U_Point const*, IVP_U_Point const*)
0010e450 t IVP_U_Straight::IVP_U_Straight(IVP_U_Point const*, IVP_U_Point const*)
000b23d0 t P_Sur_2D_Point::P_Sur_2D_Point(int)
000b23d0 t P_Sur_2D_Point::P_Sur_2D_Point(int)
000b2450 t P_Sur_2D_Point::~P_Sur_2D_Point()
000b2450 t P_Sur_2D_Point::~P_Sur_2D_Point()
00034850 t CCollisionQuery::ConvexCount()
00034880 t CCollisionQuery::GetGameData(int)
00034860 t CCollisionQuery::TriangleCount(int)
000348a0 t CCollisionQuery::GetTriangleVerts(int, int, Vector*)
00034930 t CCollisionQuery::SetTriangleVerts(int, int, Vector const*)
00034940 t CCollisionQuery::GetTriangleMaterialIndex(int, int)
00034970 t CCollisionQuery::SetTriangleMaterialIndex(int, int, int)
000366a0 t CCollisionQuery::Triangle(IVP_Compact_Ledge*, int)
000366d0 t CCollisionQuery::CCollisionQuery(CPhysCollide*)
000366d0 t CCollisionQuery::CCollisionQuery(CPhysCollide*)
00037ba0 t CCollisionQuery::~CCollisionQuery()
00037b40 t CCollisionQuery::~CCollisionQuery()
00037b40 t CCollisionQuery::~CCollisionQuery()
00041070 t CDragController::get_controller_name()
00041080 t CDragController::get_controller_priority()
00041310 t CDragController::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00041210 t CDragController::~CDragController()
00041060 t CDragController::~CDragController()
00041060 t CDragController::~CDragController()
000476d0 t CObjectPairHash::AddObjectPair(void*, void*)
00041280 t CObjectPairHash::IsObjectInHash(void*)
00047000 t CObjectPairHash::RemoveObjectPair(void*, void*)
00041120 t CObjectPairHash::IsObjectPairInHash(void*, void*)
00042000 t CObjectPairHash::GetPairListForObject(void*, int, void**)
000420b0 t CObjectPairHash::GetPairCountForObject(void*)
00046d70 t CObjectPairHash::RemoveAllPairsForObject(void*)
000423a0 t CObjectPairHash::~CObjectPairHash()
00042310 t CObjectPairHash::~CObjectPairHash()
00042310 t CObjectPairHash::~CObjectPairHash()
0005a050 t CThreadLocalPtr<CUtlVector<CPhysCollideVirtualMesh*, CUtlMemory<CPhysCollideVirtualMesh*, int> > >::~CThreadLocalPtr()
0005a050 t CThreadLocalPtr<CUtlVector<CPhysCollideVirtualMesh*, CUtlMemory<CPhysCollideVirtualMesh*, int> > >::~CThreadLocalPtr()
000306c0 t CTier1AppSystem<IPhysics, 0>::Disconnect()
00030710 t CTier1AppSystem<IPhysics, 0>::Init()
000306e0 t CTier1AppSystem<IPhysics, 0>::Connect(void* (*)(char const*, int*))
00030690 t CTier1AppSystem<IPhysics, 0>::Shutdown()
00075d40 t CUtlSymbolTable::AddString(char const*)
00075a30 t CUtlSymbolTable::RemoveAll()
00075410 t CUtlSymbolTable::CUtlSymbolTable(int, int, bool)
00075410 t CUtlSymbolTable::CUtlSymbolTable(int, int, bool)
00075a90 t CUtlSymbolTable::~CUtlSymbolTable()
00075a90 t CUtlSymbolTable::~CUtlSymbolTable()
00093d00 t hk_Vector3_Util::random_vec()
00093d30 t hk_Vector3_Util::perp_vec(hk_Vector3 const&)
00037af0 t ICollisionQuery::~ICollisionQuery()
000379c0 t ICollisionQuery::~ICollisionQuery()
000379c0 t ICollisionQuery::~ICollisionQuery()
000fcb60 t IVP_Core_Merged::set_by_merge(IVP_Core*, IVP_Core*)
000e73e0 t IVP_Core_Merged::IVP_Core_Merged(IVP_Real_Object*)
000e7280 t IVP_Core_Merged::IVP_Core_Merged(IVP_Core*, IVP_Core*)
000e73e0 t IVP_Core_Merged::IVP_Core_Merged(IVP_Real_Object*)
000e7280 t IVP_Core_Merged::IVP_Core_Merged(IVP_Core*, IVP_Core*)
000e7e70 t IVP_Environment::reset_time()
000e8200 t IVP_Environment::create_ball(IVP_Template_Ball const*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
000e8d60 t IVP_Environment::do_d_events()
000ea680 t IVP_Environment::get_gravity()
000e7940 t IVP_Environment::set_gravity(IVP_U_Point*)
000e7b60 t IVP_Environment::create_force(IVP_Template_Force*)
000e8e40 t IVP_Environment::simulate_psi(IVP_Time)
000e79e0 t IVP_Environment::create_rotmot(IVP_Template_Rot_Mot*)
000e7c00 t IVP_Environment::create_spring(IVP_Template_Spring*)
000e7a80 t IVP_Environment::create_torque(IVP_Template_Torque*)
000ea4d0 t IVP_Environment::get_env_state()
000e9080 t IVP_Environment::merge_objects(IVP_U_Vector<IVP_Real_Object>*)
000e8190 t IVP_Environment::create_polygon(IVP_SurfaceManager*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
000e8880 t IVP_Environment::fire_event_PSI()
000e7f10 t IVP_Environment::simulate_dtime(double)
000e7dd0 t IVP_Environment::simulate_until(IVP_Time)
000e8de0 t IVP_Environment::add_draw_vector(IVP_U_Point const*, IVP_U_Float_Point const*, char const*, int)
00103620 t IVP_Environment::add_revive_core(IVP_Core*)
000e8a90 t IVP_Environment::add_listener_PSI(IVP_Listener_PSI*)
000ea650 t IVP_Environment::get_current_time()
000e7da0 t IVP_Environment::get_root_cluster()
000ea580 t IVP_Environment::get_sim_unit_mem()
000ea670 t IVP_Environment::get_wakeup_count()
00103690 t IVP_Environment::revive_cores_PSI()
000e7f80 t IVP_Environment::set_current_time(IVP_Time)
000e7d50 t IVP_Environment::create_check_dist(IVP_Template_Check_Dist*)
000e21d0 t IVP_Environment::create_constraint(IVP_Template_Constraint const*)
000e7d00 t IVP_Environment::create_stabilizer(IVP_Template_Stabilizer*)
000e7cb0 t IVP_Environment::create_suspension(IVP_Template_Suspension*)
000ea440 t IVP_Environment::get_next_PSI_time()
000ea480 t IVP_Environment::get_delta_PSI_time()
000ea640 t IVP_Environment::get_freeze_manager()
000ea590 t IVP_Environment::get_short_term_mem()
00103590 t IVP_Environment::remove_revive_core(IVP_Core*)
000e7890 t IVP_Environment::set_delta_PSI_time(double)
000e7f40 t IVP_Environment::simulate_time_step(float)
000e8ae0 t IVP_Environment::remove_listener_PSI(IVP_Listener_PSI*)
000ea4c0 t IVP_Environment::get_current_time_code()
000ea5d0 t IVP_Environment::get_statistic_manager()
000ea6a0 t IVP_Environment::get_gravity_controller()
000ea4a0 t IVP_Environment::get_inv_delta_PSI_time()
000ea570 t IVP_Environment::get_performancecounter()
000e7b10 t IVP_Environment::create_controller_motion(IVP_Real_Object*, IVP_Template_Controller_Motion const*)
000e8130 t IVP_Environment::delete_draw_vector_debug()
000e8520 t IVP_Environment::fire_event_object_frozen(IVP_Event_Object*)
000e85e0 t IVP_Environment::fire_event_pre_collision(IVP_Event_Collision*)
000ea460 t IVP_Environment::get_old_time_of_last_PSI()
000e8460 t IVP_Environment::fire_event_object_created(IVP_Event_Object*)
000e84c0 t IVP_Environment::fire_event_object_deleted(IVP_Event_Object*)
000e8580 t IVP_Environment::fire_event_object_revived(IVP_Event_Object*)
000e8650 t IVP_Environment::fire_event_post_collision(IVP_Event_Collision*)
000e82f0 t IVP_Environment::add_listener_object_global(IVP_Listener_Object*)
000ea430 t IVP_Environment::get_integrated_energy_damp()
000e8270 t IVP_Environment::add_listener_object_private(IVP_Real_Object*, IVP_Listener_Object*)
000e86c0 t IVP_Environment::fire_event_friction_created(IVP_Event_Friction*)
000e8730 t IVP_Environment::fire_event_friction_deleted(IVP_Event_Friction*)
000ea5e0 t IVP_Environment::get_betterstatisticsmanager()
000ea3e0 t IVP_Environment::must_perform_movement_check()
000e7e20 t IVP_Environment::simulate_variable_time_step(float)
000e88e0 t IVP_Environment::fire_event_constraint_broken(IVP_Constraint*)
000e8940 t IVP_Environment::fire_event_constraint_broken(hk_Breakable_Constraint*)
000e7fa0 t IVP_Environment::force_psi_on_next_simulation()
000e89a0 t IVP_Environment::add_listener_collision_global(IVP_Listener_Collision*)
000e83c0 t IVP_Environment::remove_listener_object_global(IVP_Listener_Object*)
000e82b0 t IVP_Environment::add_listener_collision_private(IVP_Real_Object*, IVP_Listener_Collision*)
000e8b80 t IVP_Environment::add_listener_constraint_global(IVP_Listener_Constraint*)
000e8e20 t IVP_Environment::get_global_collision_tolerance()
000e8340 t IVP_Environment::install_listener_object_global(IVP_Listener_Object*)
000e8290 t IVP_Environment::remove_listener_object_private(IVP_Real_Object*, IVP_Listener_Object*)
000e8df0 t IVP_Environment::set_global_collision_tolerance(double, double)
000e87a0 t IVP_Environment::fire_event_friction_pair_created(IVP_Friction_Core_Pair*)
000e8810 t IVP_Environment::fire_event_friction_pair_deleted(IVP_Friction_Core_Pair*)
000e89f0 t IVP_Environment::remove_listener_collision_global(IVP_Listener_Collision*)
000e82d0 t IVP_Environment::remove_listener_collision_private(IVP_Real_Object*, IVP_Listener_Collision*)
000e8bd0 t IVP_Environment::remove_listener_constraint_global(IVP_Listener_Constraint*)
000e78e0 t IVP_Environment::fire_object_is_removed_from_collision_detection(IVP_Real_Object*)
000e92c0 t IVP_Environment::IVP_Environment(IVP_Environment_Manager*, IVP_Application_Environment*, char const*, unsigned int)
000e92c0 t IVP_Environment::IVP_Environment(IVP_Environment_Manager*, IVP_Application_Environment*, char const*, unsigned int)
000e9ae0 t IVP_Environment::~IVP_Environment()
000e9ae0 t IVP_Environment::~IVP_Environment()
00115750 t IVP_Inline_Math::save_acosf(float)
00115840 t IVP_Inline_Math::approx5_cos(float)
00115800 t IVP_Inline_Math::approx5_sin(float)
001143b0 t IVP_Inline_Math::isqrt_float(float)
001143f0 t IVP_Inline_Math::isqrt_double(double)
001157c0 t IVP_Inline_Math::fast_approx_asin(float)
00115880 t IVP_Inline_Math::upper_limit_asin(float)
00115950 t IVP_Inline_Math::invert_2x2_matrix(double, double, double, double, double*, double*, double*, double*)
00115900 t IVP_Inline_Math::fast_anywhere_asin(float)
001144c0 t IVP_Inline_Math::cosd(double)
001144b0 t IVP_Inline_Math::sind(double)
001144d0 t IVP_Inline_Math::acosd(double)
001144e0 t IVP_Inline_Math::asind(double)
001144f0 t IVP_Inline_Math::atand(double)
00114420 t IVP_Inline_Math::fabsd(double)
00114470 t IVP_Inline_Math::sqrtd(double)
00114510 t IVP_Inline_Math::atan2d(double, double)
001144a0 t IVP_Inline_Math::ivp_cosf(double)
00114500 t IVP_Inline_Math::ivp_expf(double)
00114490 t IVP_Inline_Math::ivp_sinf(double)
001158c0 t IVP_Inline_Math::fast_asin(float)
001157a0 t IVP_Inline_Math::int_div_2(int)
00114450 t IVP_Inline_Math::ivp_sqrtf(double)
000ff0c0 t IVP_Real_Object::reset_time(IVP_Time)
000ff5d0 t IVP_Real_Object::set_pinned(IVP_BOOL)
000fec70 t IVP_Real_Object::change_mass(float)
000fed90 t IVP_Real_Object::insert_anchor(IVP_Anchor*)
000fedc0 t IVP_Real_Object::remove_anchor(IVP_Anchor*)
00101370 t IVP_Real_Object::get_ov_element()
000ff0e0 t IVP_Real_Object::delete_silently()
0010a5d0 t IVP_Real_Object::get_cache_object()
00101320 t IVP_Real_Object::get_first_anchor()
00101350 t IVP_Real_Object::get_hull_manager()
001005c0 t IVP_Real_Object::init_object_core(IVP_Environment*, IVP_Template_Real_Object const*)
000ff010 t IVP_Real_Object::set_extra_radius(double)
00100c20 t IVP_Real_Object::do_radar_checking(IVP_Radar*)
00100db0 t IVP_Real_Object::convert_to_phantom(IVP_Template_Phantom const*)
000ff730 t IVP_Real_Object::disable_simulation()
001013d0 t IVP_Real_Object::get_movement_state()
000feed0 t IVP_Real_Object::recalc_core_radius()
00101380 t IVP_Real_Object::set_movement_state(IVP_Movement_Type)
000fed30 t IVP_Real_Object::add_listener_object(IVP_Listener_Object*)
00100fe0 t IVP_Real_Object::async_push_object_ws(IVP_U_Point const*, IVP_U_Float_Point const*)
000fff80 t IVP_Real_Object::calc_m_core_f_object(IVP_U_Matrix*)
00100fa0 t IVP_Real_Object::ensure_in_simulation()
000ff8b0 t IVP_Real_Object::change_unmovable_flag(IVP_BOOL)
000ff1c0 t IVP_Real_Object::get_all_near_mindists()
000ff340 t IVP_Real_Object::unlink_contact_points(IVP_BOOL)
000fecd0 t IVP_Real_Object::add_listener_collision(IVP_Listener_Collision*)
001013f0 t IVP_Real_Object::get_controller_phantom()
000fed60 t IVP_Real_Object::remove_listener_object(IVP_Listener_Object*)
00101330 t IVP_Real_Object::get_first_exact_synapse()
000feaf0 t IVP_Real_Object::set_new_m_object_f_core(IVP_U_Matrix const*)
000ff490 t IVP_Real_Object::set_new_surface_manager(IVP_SurfaceManager*)
000feeb0 t IVP_Real_Object::ensure_in_simulation_now()
0010a560 t IVP_Real_Object::get_cache_object_no_lock()
000ff220 t IVP_Real_Object::recheck_collision_filter()
000fec90 t IVP_Real_Object::recompile_values_changed()
001010f0 t IVP_Real_Object::async_add_speed_object_ws(IVP_U_Float_Point const*)
000ffaf0 t IVP_Real_Object::clear_internal_references()
000ff2d0 t IVP_Real_Object::delete_and_check_vicinity()
000fed00 t IVP_Real_Object::remove_listener_collision(IVP_Listener_Collision*)
000fec50 t IVP_Real_Object::change_fast_piling_allowed(IVP_BOOL)
000ff400 t IVP_Real_Object::enable_collision_detection(IVP_BOOL)
000ff250 t IVP_Real_Object::force_grow_friction_system()
00101340 t IVP_Real_Object::get_first_friction_synapse()
000fecb0 t IVP_Real_Object::recompile_material_changed()
000fe940 t IVP_Real_Object::set_new_quat_object_f_core(IVP_U_Quat const*, IVP_U_Point const*)
00100e20 t IVP_Real_Object::beam_object_to_new_position(IVP_U_Quat const*, IVP_U_Point const*, IVP_BOOL)
000fee70 t IVP_Real_Object::revive_object_for_simulation()
00101090 t IVP_Real_Object::async_add_rot_speed_object_cs(IVP_U_Float_Point const*)
001013e0 t IVP_Real_Object::is_collision_detection_enabled()
000ff280 t IVP_Real_Object::revive_nearest_objects_grow_fs()
000ff170 t IVP_Real_Object::recalc_exact_mindists_of_object()
000ffa80 t IVP_Real_Object::unlink_contact_points_for_object(IVP_Real_Object*)
000ff100 t IVP_Real_Object::recalc_invalid_mindists_of_object()
00100ae0 t IVP_Real_Object::get_collision_check_reference_count()
000fedf0 t IVP_Real_Object::update_exact_mindist_events_of_object()
000ffd80 t IVP_Real_Object::IVP_Real_Object(IVP_Cluster*, IVP_SurfaceManager*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
000ffd80 t IVP_Real_Object::IVP_Real_Object(IVP_Cluster*, IVP_SurfaceManager*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
000ffcf0 t IVP_Real_Object::~IVP_Real_Object()
000ffb70 t IVP_Real_Object::~IVP_Real_Object()
000ffb70 t IVP_Real_Object::~IVP_Real_Object()
000b7190 t IVP_Tetra_Point::p()
000b7480 t IVP_Tetra_Point::init(IVP_Tetra_Intrude*)
000b7130 t IVP_Tetra_Point::print(char const*)
00037c00 t IVP_U_BigVector<IVP_Compact_Ledge>::~IVP_U_BigVector()
00037c00 t IVP_U_BigVector<IVP_Compact_Ledge>::~IVP_U_BigVector()
0011a440 t IVP_VHash_Store::change_elem(void*, void*)
0011a300 t IVP_VHash_Store::remove_elem(void*)
0011a1e0 t IVP_VHash_Store::remove_elem(void*, unsigned int)
00119fb0 t IVP_VHash_Store::untouch_all()
0011a4f0 t IVP_VHash_Store::touch_element(void*, unsigned int)
0011a350 t IVP_VHash_Store::check()
0011a560 t IVP_VHash_Store::print()
0011a130 t IVP_VHash_Store::rehash(int)
0011a0d0 t IVP_VHash_Store::add_elem(void*, void*)
00119ff0 t IVP_VHash_Store::add_elem(void*, void*, int)
0011a3f0 t IVP_VHash_Store::find_elem(void*)
0011a360 t IVP_VHash_Store::find_elem(void*, unsigned int)
00119f10 t IVP_VHash_Store::IVP_VHash_Store(int)
00119f50 t IVP_VHash_Store::IVP_VHash_Store(IVP_VHash_Store_Elem*, int)
00119f10 t IVP_VHash_Store::IVP_VHash_Store(int)
00119f50 t IVP_VHash_Store::IVP_VHash_Store(IVP_VHash_Store_Elem*, int)
00119f80 t IVP_VHash_Store::~IVP_VHash_Store()
00119f80 t IVP_VHash_Store::~IVP_VHash_Store()
00055880 t vehicleparams_t::GetBaseMap()
001a5380 d vehicleparams_t::m_DataMap
00046870 t CCollisionSolver::inter_penetration(IVP_Mindist*, IVP_Real_Object*, IVP_Real_Object*, double)
00041570 t CCollisionSolver::max_velocity_exceeded(IVP_Anomaly_Limits*, IVP_Core*, IVP_U_Float_Point*)
00040fb0 t CCollisionSolver::environment_will_be_deleted(IVP_Environment*)
00041020 t CCollisionSolver::max_collision_checks_exceeded(int)
00046610 t CCollisionSolver::max_contacts_exceeded_check_freezing(IVP_Core**, int)
00040ec0 t CCollisionSolver::check_objects_for_collision_detection(IVP_Real_Object*, IVP_Real_Object*)
00040fd0 t CCollisionSolver::max_collisions_exceeded_check_freezing(IVP_Anomaly_Limits*, IVP_Core*)
00042920 t CCollisionSolver::~CCollisionSolver()
000428a0 t CCollisionSolver::~CCollisionSolver()
000428a0 t CCollisionSolver::~CCollisionSolver()
0006af60 t CDataManagerBase::TargetSize()
0006b7c0 t CDataManagerBase::MarkAsStale(memhandle_t__*)
0006bbe0 t CDataManagerBase::CreateHandle(bool)
0006b6e0 t CDataManagerBase::LockResource(memhandle_t__*)
0006b350 t CDataManagerBase::TouchByIndex(unsigned short)
0006af70 t CDataManagerBase::AvailableSize()
0006b0c0 t CDataManagerBase::BreakAllLocks()
0006ae40 t CDataManagerBase::SetTargetSize(unsigned int)
0006b3d0 t CDataManagerBase::TouchResource(memhandle_t__*)
0006b230 t CDataManagerBase::EnsureCapacity(unsigned int)
0006afd0 t CDataManagerBase::UnlockResource(memhandle_t__*)
0006b5c0 t CDataManagerBase::DestroyResource(memhandle_t__*)
0006ba80 t CDataManagerBase::FlushAllUnlocked()
0006bd90 t CDataManagerBase::GetLRUHandleList(CUtlVector<memhandle_t__*, CUtlMemory<memhandle_t__*, int> >&)
0006b330 t CDataManagerBase::FlushToTargetSize()
0006b170 t CDataManagerBase::GetForFreeByIndex(unsigned short)
0006bd10 t CDataManagerBase::GetLockHandleList(CUtlVector<memhandle_t__*, CUtlMemory<memhandle_t__*, int> >&)
0006ae00 t CDataManagerBase::NotifySizeChanged(memhandle_t__*, unsigned int, unsigned int)
0006b440 t CDataManagerBase::GetResource_NoLock(memhandle_t__*)
0006aed0 t CDataManagerBase::StoreResourceInHandle(unsigned short, void*, unsigned int)
0006ae50 t CDataManagerBase::GetResource_NoLockNoLRUTouch(memhandle_t__*)
0006be90 t CDataManagerBase::Lock()
0006b2f0 t CDataManagerBase::Purge(unsigned int)
0006beb0 t CDataManagerBase::Unlock()
0006bea0 t CDataManagerBase::TryLock()
0006b880 t CDataManagerBase::FlushAll()
0006af30 t CDataManagerBase::ToHandle(unsigned short)
0006af80 t CDataManagerBase::UsedSize()
0006b4e0 t CDataManagerBase::BreakLock(memhandle_t__*)
0006be10 t CDataManagerBase::CDataManagerBase(unsigned int)
0006be10 t CDataManagerBase::CDataManagerBase(unsigned int)
0006afb0 t CDataManagerBase::~CDataManagerBase()
0006af90 t CDataManagerBase::~CDataManagerBase()
0006af90 t CDataManagerBase::~CDataManagerBase()
0006ab80 t CDefaultAccessor::RegisterConCommandBase(ConCommandBase*)
0006d0c0 t CDllDemandLoader::GetFactory()
0006d110 t CDllDemandLoader::Unload()
0006d0a0 t CDllDemandLoader::CDllDemandLoader(char const*)
0006d0a0 t CDllDemandLoader::CDllDemandLoader(char const*)
0006d160 t CDllDemandLoader::~CDllDemandLoader()
0006d140 t CDllDemandLoader::~CDllDemandLoader()
0006d140 t CDllDemandLoader::~CDllDemandLoader()
00034160 t CPhysics_Airboat::IsBoosting()
00031140 t CPhysics_Airboat::do_steering(float, bool)
000312c0 t CPhysics_Airboat::InitAirboat(IVP_Template_Car_System const*)
00031f40 t CPhysics_Airboat::PreRaycasts(IVP_Ray_Solver_Template*, IVP_U_Matrix const*, IVP_Raycast_Airboat_Impact*)
000320c0 t CPhysics_Airboat::PostRaycasts(IVP_Ray_Solver_Template*, IVP_U_Matrix const*, IVP_Raycast_Airboat_Impact*)
00030df0 t CPhysics_Airboat::get_skid_info(IVP_Wheel_Skid_Info*)
00031ad0 t CPhysics_Airboat::GetWaterDepth(Ray_t*, IPhysicsObject*)
00030d00 t CPhysics_Airboat::get_body_speed(IVP_COORDINATE_INDEX)
00034150 t CPhysics_Airboat::set_powerslide(float, float)
00034190 t CPhysics_Airboat::update_booster(float)
000310d0 t CPhysics_Airboat::update_throttle(float)
00034180 t CPhysics_Airboat::activate_booster(float, float, float)
000327c0 t CPhysics_Airboat::DoSimulationDrag(IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
00030c20 t CPhysics_Airboat::get_wheel_torque(IVP_POS_WHEEL)
00031350 t CPhysics_Airboat::SetWheelFriction(int, float)
00031080 t CPhysics_Airboat::do_steering_wheel(IVP_POS_WHEEL, float)
000341a0 t CPhysics_Airboat::get_booster_delay()
00034040 t CPhysics_Airboat::InitRaycastCarAxes(IVP_Template_Car_System const*)
00033be0 t CPhysics_Airboat::InitRaycastCarBody(IVP_Template_Car_System const*)
00031040 t CPhysics_Airboat::change_wheel_torque(IVP_POS_WHEEL, float)
00033400 t CPhysics_Airboat::DoSimulationGravity(IVP_Event_Sim*)
00032f50 t CPhysics_Airboat::DoSimulationTurbine(IVP_Event_Sim*)
00034120 t CPhysics_Airboat::get_controller_name()
00031ff0 t CPhysics_Airboat::UpdateAirborneState(IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
00030c00 t CPhysics_Airboat::change_spring_length(IVP_POS_WHEEL, float)
00031b90 t CPhysics_Airboat::do_raycasts_gameside(int, IVP_Ray_Solver_Template*, IVP_Raycast_Airboat_Impact*)
00032680 t CPhysics_Airboat::DoSimulationPontoons(IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
000330a0 t CPhysics_Airboat::DoSimulationSteering(IVP_Event_Sim*)
00033cb0 t CPhysics_Airboat::InitRaycastCarWheels(IVP_Template_Car_System const*)
00030c90 t CPhysics_Airboat::change_body_downforce(float)
00034130 t CPhysics_Airboat::change_max_body_force(IVP_POS_WHEEL, float)
00030f20 t CPhysics_Airboat::GetCarSystemDebugData(IVP_CarSystemDebugData_t&)
00031440 t CPhysics_Airboat::pre_raycasts_gameside(int, IVP_Ray_Solver_Template*, Ray_t*, IVP_Raycast_Airboat_Impact*)
00030e50 t CPhysics_Airboat::SetCarSystemDebugData(IVP_CarSystemDebugData_t const&)
00030b70 t CPhysics_Airboat::change_spring_constant(IVP_POS_WHEEL, float)
000341b0 t CPhysics_Airboat::get_booster_time_to_go()
00034100 t CPhysics_Airboat::update_wheel_positions()
00030c80 t CPhysics_Airboat::change_fast_turn_factor(float)
00030b90 t CPhysics_Airboat::change_spring_dampening(IVP_POS_WHEEL, float)
00030cc0 t CPhysics_Airboat::get_controller_priority()
00030db0 t CPhysics_Airboat::get_orig_axles_distance()
00033aa0 t CPhysics_Airboat::change_friction_of_wheel(IVP_POS_WHEEL, float)
00033950 t CPhysics_Airboat::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00034170 t CPhysics_Airboat::set_booster_acceleration(float)
00030bd0 t CPhysics_Airboat::change_spring_pre_tension(IVP_POS_WHEEL, float)
00033410 t CPhysics_Airboat::CountSurfaceContactPoints(IVP_Raycast_Airboat_Impact*)
000325e0 t CPhysics_Airboat::DoSimulationPontoonsWater(IVP_Raycast_Airboat_Wheel*, IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
00033ac0 t CPhysics_Airboat::InitRaycastCarEnvironment(IVP_Environment*, IVP_Template_Car_System const*)
00034140 t CPhysics_Airboat::update_body_countertorque()
00030c60 t CPhysics_Airboat::change_stabilizer_constant(IVP_POS_AXIS, float)
00032480 t CPhysics_Airboat::DoSimulationPontoonsGround(IVP_Raycast_Airboat_Wheel*, IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
00030cd0 t CPhysics_Airboat::get_wheel_angular_velocity(IVP_POS_WHEEL)
000336c0 t CPhysics_Airboat::DoSimulationKeepUprightRoll(IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
00032720 t CPhysics_Airboat::PerformFrictionNotification(float, float, int, IPhysicsCollisionData*)
00031370 t CPhysics_Airboat::ComputeFrontPontoonWaveNoise(int, float)
00033450 t CPhysics_Airboat::DoSimulationKeepUprightPitch(IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
00030d70 t CPhysics_Airboat::get_orig_front_wheel_distance()
00031000 t CPhysics_Airboat::get_associated_controlled_cores()
00031020 t CPhysics_Airboat::core_is_going_to_be_deleted_event(IVP_Core*)
00030bb0 t CPhysics_Airboat::change_spring_dampening_compression(IVP_POS_WHEEL, float)
000340a0 t CPhysics_Airboat::get_axle(IVP_POS_AXIS)
00031330 t CPhysics_Airboat::GetWheel(int)
00030c40 t CPhysics_Airboat::fix_wheel(IVP_POS_WHEEL, IVP_BOOL)
000340c0 t CPhysics_Airboat::get_wheel(IVP_POS_WHEEL)
00033f00 t CPhysics_Airboat::CPhysics_Airboat(IVP_Environment*, IVP_Template_Car_System const*, IPhysicsGameTrace*)
00033f00 t CPhysics_Airboat::CPhysics_Airboat(IVP_Environment*, IVP_Template_Car_System const*, IPhysicsGameTrace*)
000312a0 t CPhysics_Airboat::~CPhysics_Airboat()
000311e0 t CPhysics_Airboat::~CPhysics_Airboat()
000311e0 t CPhysics_Airboat::~CPhysics_Airboat()
         U CThreadLocalBase::Set(void*)
         U CThreadLocalBase::CThreadLocalBase()
         U CThreadLocalBase::~CThreadLocalBase()
000411b0 t IDeleteQueueItem::~IDeleteQueueItem()
00040860 t IDeleteQueueItem::~IDeleteQueueItem()
00040860 t IDeleteQueueItem::~IDeleteQueueItem()
0010a4d0 t IVP_Cache_Object::get_core_pos()
0010a4c0 t IVP_Cache_Object::remove_reference()
00109c70 t IVP_Cache_Object::update_cache_object()
001a6ed8 d IVP_Compact_Edge::next_table
001a6ec8 d IVP_Compact_Edge::prev_table
000d11e0 t IVP_Compact_Edge::get_opposite()
000d0d50 t IVP_Compact_Edge::set_is_virtual(unsigned int)
000d0d30 t IVP_Compact_Edge::set_opposite_index(int)
000d0d20 t IVP_Compact_Edge::set_start_point_index(int)
000d1160 t IVP_Compact_Edge::get_next()
000d11a0 t IVP_Compact_Edge::get_prev()
000d0a10 t IVP_Compact_Edge::byte_swap()
000d09f0 t IVP_Compact_Edge::IVP_Compact_Edge()
000d09f0 t IVP_Compact_Edge::IVP_Compact_Edge()
000f7bf0 t IVP_Hull_Manager::reset_time(IVP_Time)
000f7b20 t IVP_Hull_Manager::reset_times()
000f7ae0 t IVP_Hull_Manager::delete_hull_manager()
000f7c30 t IVP_Hull_Manager::get_synapse_check_count(IVP_Environment*)
000f7c10 t IVP_Hull_Manager::too_many_synapses_checked_error_get_additional(IVP_Environment*, int)
0011c590 t IVP_Mindist_Base::get_ledges(IVP_Compact_Ledge const**)
0011c570 t IVP_Mindist_Base::get_objects(IVP_Real_Object**)
0011ffc0 t IVP_Mindist_Base::get_mindist_synapse(int)
0011c830 t IVP_Mindist_Base::IVP_Mindist_Base(IVP_Collision_Delegator*)
0011c830 t IVP_Mindist_Base::IVP_Mindist_Base(IVP_Collision_Delegator*)
0011fed0 t IVP_Mindist_Base::~IVP_Mindist_Base()
0011fde0 t IVP_Mindist_Base::~IVP_Mindist_Base()
0011fde0 t IVP_Mindist_Base::~IVP_Mindist_Base()
0011c080 t IVP_ov_tree_hash::node_to_index(IVP_OV_Node*)
0011c010 t IVP_ov_tree_hash::~IVP_ov_tree_hash()
0011bff0 t IVP_ov_tree_hash::~IVP_ov_tree_hash()
0011bff0 t IVP_ov_tree_hash::~IVP_ov_tree_hash()
000b3820 t IVP_Poly_Surface::get_surface_index()
000b3810 t IVP_Poly_Surface::set(IVP_Template_Surface*, IVP_Object_Polygon_Tetra*)
001200d0 t IVP_Synapse_Real::get_mindist()
00120050 t IVP_Synapse_Real::init_synapse(IVP_Mindist*, IVP_Real_Object*, IVP_Compact_Edge const*, IVP_SYNAPSE_POLYGON_STATUS)
00120020 t IVP_Synapse_Real::update_synapse(IVP_Compact_Edge const*, IVP_SYNAPSE_POLYGON_STATUS)
001200a0 t IVP_Synapse_Real::get_hull_manager()
0011c620 t IVP_Synapse_Real::print()
001200b0 t IVP_Synapse_Real::get_next()
001200c0 t IVP_Synapse_Real::get_prev()
00120040 t IVP_Synapse_Real::IVP_Synapse_Real()
00120040 t IVP_Synapse_Real::IVP_Synapse_Real()
0011fe90 t IVP_Synapse_Real::~IVP_Synapse_Real()
0011fe60 t IVP_Synapse_Real::~IVP_Synapse_Real()
0011fe60 t IVP_Synapse_Real::~IVP_Synapse_Real()
000e8c70 t IVP_Time_Event_D::simulate_time_event(IVP_Environment*)
000e8dc0 t IVP_Time_Event_D::IVP_Time_Event_D(IVP_Time)
000e8dc0 t IVP_Time_Event_D::IVP_Time_Event_D(IVP_Time)
000e8cf0 t IVP_Time_Event_N::simulate_time_event(IVP_Environment*)
000e8dd0 t IVP_Time_Event_N::IVP_Time_Event_N(IVP_Time)
000e8dd0 t IVP_Time_Event_N::IVP_Time_Event_N(IVP_Time)
00108600 t IVP_Time_Manager::event_loop(IVP_Environment*, IVP_Time)
001086f0 t IVP_Time_Manager::reset_time(IVP_Time)
00108220 t IVP_Time_Manager::insert_event(IVP_Time_Event*, IVP_Time)
00108440 t IVP_Time_Manager::remove_event(IVP_Time_Event*)
00108460 t IVP_Time_Manager::update_event(IVP_Time_Event*, IVP_Time)
00108580 t IVP_Time_Manager::get_next_event(IVP_Time)
001084d0 t IVP_Time_Manager::get_next_event()
001085e0 t IVP_Time_Manager::get_event_count()
001086d0 t IVP_Time_Manager::env_set_current_time(IVP_Environment*, IVP_Time)
00108660 t IVP_Time_Manager::simulate_variable_time_step(IVP_Environment*, float)
00108340 t IVP_Time_Manager::IVP_Time_Manager()
00108340 t IVP_Time_Manager::IVP_Time_Manager()
00108510 t IVP_Time_Manager::~IVP_Time_Manager()
00108510 t IVP_Time_Manager::~IVP_Time_Manager()
0010c650 t IVP_U_Active_Add::active_float_changed(IVP_U_Active_Float*)
0010b850 t IVP_U_Active_Add::print()
0010d860 t IVP_U_Active_Add::IVP_U_Active_Add(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0010d860 t IVP_U_Active_Add::IVP_U_Active_Add(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0010cd00 t IVP_U_Active_Add::~IVP_U_Active_Add()
0010cca0 t IVP_U_Active_Add::~IVP_U_Active_Add()
0010cca0 t IVP_U_Active_Add::~IVP_U_Active_Add()
0010ce70 t IVP_U_Active_Int::add_dependency(IVP_U_Active_Int_Listener*)
0010dfc0 t IVP_U_Active_Int::give_int_value()
0010c840 t IVP_U_Active_Int::update_derived()
0010ceb0 t IVP_U_Active_Int::remove_dependency(IVP_U_Active_Int_Listener*)
0010c3e0 t IVP_U_Active_Int::IVP_U_Active_Int(char const*)
0010c3e0 t IVP_U_Active_Int::IVP_U_Active_Int(char const*)
0010bd50 t IVP_U_Active_Int::~IVP_U_Active_Int()
0010bcf0 t IVP_U_Active_Int::~IVP_U_Active_Int()
0010bcf0 t IVP_U_Active_Int::~IVP_U_Active_Int()
0010c600 t IVP_U_Active_Sub::active_float_changed(IVP_U_Active_Float*)
0010b810 t IVP_U_Active_Sub::print()
0010d8f0 t IVP_U_Active_Sub::IVP_U_Active_Sub(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0010d8f0 t IVP_U_Active_Sub::IVP_U_Active_Sub(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0010cc80 t IVP_U_Active_Sub::~IVP_U_Active_Sub()
0010cc20 t IVP_U_Active_Sub::~IVP_U_Active_Sub()
0010cc20 t IVP_U_Active_Sub::~IVP_U_Active_Sub()
00115500 t IVP_U_Float_Quat::set(IVP_U_Quat const*)
00114810 t IVP_U_Float_Quat::byte_swap()
000e3560 t IVP_U_Set_Active<IVP_Real_Object>::~IVP_U_Set_Active()
000e33c0 t IVP_U_Set_Active<IVP_Real_Object>::~IVP_U_Set_Active()
000e33c0 t IVP_U_Set_Active<IVP_Real_Object>::~IVP_U_Set_Active()
000e3630 t IVP_U_Set_Active<IVP_Mindist_Base>::~IVP_U_Set_Active()
000e38a0 t IVP_U_Set_Active<IVP_Mindist_Base>::~IVP_U_Set_Active()
000e38a0 t IVP_U_Set_Active<IVP_Mindist_Base>::~IVP_U_Set_Active()
000e3490 t IVP_U_Set_Active<IVP_Core>::~IVP_U_Set_Active()
000e3700 t IVP_U_Set_Active<IVP_Core>::~IVP_U_Set_Active()
000e3700 t IVP_U_Set_Active<IVP_Core>::~IVP_U_Set_Active()
00047a00 t CBuoyancyAttacher::get_parameters_per_core(IVP_Core*)
00047b30 t CBuoyancyAttacher::CBuoyancyAttacher(IVP_Template_Buoyancy&, IVP_U_Set_Active<IVP_Core>*, IVP_Liquid_Surface_Descriptor*)
00047b30 t CBuoyancyAttacher::CBuoyancyAttacher(IVP_Template_Buoyancy&, IVP_U_Set_Active<IVP_Core>*, IVP_Liquid_Surface_Descriptor*)
000481c0 t CBuoyancyAttacher::~CBuoyancyAttacher()
00048260 t CBuoyancyAttacher::~CBuoyancyAttacher()
00048260 t CBuoyancyAttacher::~CBuoyancyAttacher()
00048620 t CFrictionSnapshot::GetMaterial(int)
00048500 t CFrictionSnapshot::GetNormalForce()
000483e0 t CFrictionSnapshot::GetContactPoint(Vector&)
00048530 t CFrictionSnapshot::GetSurfaceNormal(Vector&)
00048440 t CFrictionSnapshot::NextFrictionData()
000484d0 t CFrictionSnapshot::GetEnergyAbsorbed()
000484b0 t CFrictionSnapshot::RecomputeFriction()
00048490 t CFrictionSnapshot::ClearFrictionForce()
00048750 t CFrictionSnapshot::SetFrictionSynapse(IVP_Synapse_Friction*)
000488b0 t CFrictionSnapshot::MarkContactForDelete()
00048430 t CFrictionSnapshot::GetFrictionCoefficient()
00048660 t CFrictionSnapshot::DeleteAllMarkedContacts(bool)
00048390 t CFrictionSnapshot::IsValid()
000483a0 t CFrictionSnapshot::GetObject(int)
000486f0 t CFrictionSnapshot::CFrictionSnapshot(IVP_Real_Object*)
000486f0 t CFrictionSnapshot::CFrictionSnapshot(IVP_Real_Object*)
00048890 t CFrictionSnapshot::~CFrictionSnapshot()
00048840 t CFrictionSnapshot::~CFrictionSnapshot()
00048840 t CFrictionSnapshot::~CFrictionSnapshot()
00050500 t CMaterialIndexOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
000504b0 t CMaterialIndexOps::IsEmpty(SaveRestoreFieldInfo_t const&)
00050450 t CMaterialIndexOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
000504d0 t CMaterialIndexOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
00034d40 t CPhysicsCollision::ConvexFree(CPhysConvex*)
00034620 t CPhysicsCollision::CollideSize(CPhysCollide*)
000365a0 t CPhysicsCollision::IsBBoxCache(CPhysCollide*)
000376b0 t CPhysicsCollision::AddBBoxCache(CPhysCollideCompactSurface*, Vector const&, Vector const&)
000375e0 t CPhysicsCollision::BBoxToConvex(Vector const&, Vector const&)
00034750 t CPhysicsCollision::CollideIndex(CPhysCollide const*)
00034640 t CPhysicsCollision::CollideWrite(char*, CPhysCollide*, bool)
00034370 t CPhysicsCollision::ConvexVolume(CPhysConvex*)
00036610 t CPhysicsCollision::GetBBoxCache(Vector const&, Vector const&)
00034ae0 t CPhysicsCollision::TraceCollide(Vector const&, Vector const&, CPhysCollide const*, QAngle const&, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
000370a0 t CPhysicsCollision::VCollideLoad(vcollide_t*, int, char const*, int, bool)
000378e0 t CPhysicsCollision::BBoxToCollide(Vector const&, Vector const&)
00036850 t CPhysicsCollision::CollideVolume(CPhysCollide*)
00037790 t CPhysicsCollision::InitBBoxCache()
00034ac0 t CPhysicsCollision::CollideGetAABB(Vector*, Vector*, CPhysCollide const*, Vector const&, QAngle const&)
00035eb0 t CPhysicsCollision::DestroyCollide(CPhysCollide*)
00037460 t CPhysicsCollision::PolysoupCreate()
00034a20 t CPhysicsCollision::VCollideUnload(vcollide_t*)
00037630 t CPhysicsCollision::ConvexFromVerts(Vector**, int)
00036910 t CPhysicsCollision::CreateDebugMesh(CPhysCollide const*, Vector**)
000364a0 t CPhysicsCollision::FastBboxCollide(CPhysCollideCompactSurface const*, Vector const&, Vector const&)
000347a0 t CPhysicsCollision::OutputDebugInfo(CPhysCollide const*)
00036060 t CPhysicsCollision::PolysoupDestroy(CPhysPolysoup*)
00035e40 t CPhysicsCollision::CollideGetExtent(CPhysCollide const*, Vector const&, QAngle const&, Vector const&)
00035850 t CPhysicsCollision::ConvexFromPlanes(float*, int, float)
00036740 t CPhysicsCollision::CreateQueryModel(CPhysCollide*)
00034a00 t CPhysicsCollision::DestroyDebugMesh(int, Vector*)
000347c0 t CPhysicsCollision::GetBBoxCacheSize(int*, int*)
00035f10 t CPhysicsCollision::ConvexSurfaceArea(CPhysConvex*)
00037b30 t CPhysicsCollision::CreateVirtualMesh(virtualmeshparams_t const&)
00034830 t CPhysicsCollision::DestroyQueryModel(ICollisionQuery*)
00034660 t CPhysicsCollision::SetConvexGameData(CPhysConvex*, unsigned int)
00036790 t CPhysicsCollision::CollideSurfaceArea(CPhysCollide*)
00037190 t CPhysicsCollision::UnserializeCollide(char*, int, int)
000374a0 t CPhysicsCollision::ConvexFromVertsFast(Vector**, int)
00034b40 t CPhysicsCollision::PolysoupAddTriangle(CPhysPolysoup*, Vector const&, Vector const&, Vector const&, int)
00037a60 t CPhysicsCollision::SupportsVirtualMesh()
000346d0 t CPhysicsCollision::ThreadContextCreate()
000346f0 t CPhysicsCollision::CollideGetMassCenter(CPhysCollide*, Vector*)
00034730 t CPhysicsCollision::CollideSetMassCenter(CPhysCollide*, Vector const&)
00034f20 t CPhysicsCollision::PolyhedronFromConvex(CPhysConvex*, bool)
000346e0 t CPhysicsCollision::ThreadContextDestroy(IPhysicsCollision*)
00034aa0 t CPhysicsCollision::IsBoxIntersectingCone(Vector const&, Vector const&, truncatedcone_t const&)
00034510 t CPhysicsCollision::ConvertConvexToCollide(CPhysConvex**, int)
00036370 t CPhysicsCollision::RebuildConvexFromPlanes(CPhysConvex*, float)
000349f0 t CPhysicsCollision::VPhysicsKeyParserCreate(char const*)
000371c0 t CPhysicsCollision::ConvertPolysoupToCollide(CPhysPolysoup*, bool)
000349e0 t CPhysicsCollision::VPhysicsKeyParserDestroy(IVPhysicsKeyParser*)
00034dd0 t CPhysicsCollision::ConvexesFromConvexPolygon(Vector const&, Vector const*, int, CPhysConvex**)
00035600 t CPhysicsCollision::ConvexFromConvexPolyhedron(CPolyhedron const&)
00035df0 t CPhysicsCollision::CollideGetOrthographicAreas(CPhysCollide const*)
00034770 t CPhysicsCollision::CollideSetOrthographicAreas(CPhysCollide*, Vector const&)
00036cd0 t CPhysicsCollision::ConvertConvexToCollideParams(CPhysConvex**, int, convertconvexparams_t const&)
00036ab0 t CPhysicsCollision::GetConvexesUsedInCollideable(CPhysCollide const*, CPhysConvex**, int)
00037a50 t CPhysicsCollision::ReadStat(int)
00034b00 t CPhysicsCollision::TraceBox(Ray_t const&, unsigned int, IConvexInfo*, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
00034680 t CPhysicsCollision::TraceBox(Ray_t const&, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
00034b20 t CPhysicsCollision::TraceBox(Vector const&, Vector const&, Vector const&, Vector const&, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
00037dc0 t CPhysicsCollision::~CPhysicsCollision()
00037d60 t CPhysicsCollision::~CPhysicsCollision()
00037d60 t CPhysicsCollision::~CPhysicsCollision()
000303d0 t CPhysicsInterface::QueryInterface(char const*)
000302e0 t CPhysicsInterface::FindCollisionSet(unsigned int)
00030490 t CPhysicsInterface::CreateEnvironment()
00030330 t CPhysicsInterface::DestroyEnvironment(IPhysicsEnvironment*)
000303c0 t CPhysicsInterface::CreateObjectPairHash()
000302c0 t CPhysicsInterface::DestroyObjectPairHash(IPhysicsObjectPairHash*)
00030410 t CPhysicsInterface::DestroyAllCollisionSets()
000304d0 t CPhysicsInterface::FindOrCreateCollisionSet(unsigned int, int)
00030290 t CPhysicsInterface::GetActiveEnvironmentByIndex(int)
000307d0 t CPhysicsInterface::~CPhysicsInterface()
000307d0 t CPhysicsInterface::~CPhysicsInterface()
00050b90 t CPlayerController::IsInContact()
000516e0 t CPlayerController::AttachObject()
00051800 t CPlayerController::DetachObject()
00053b70 t CPlayerController::GetLastImpulse(Vector*)
00050780 t CPlayerController::SetEventHandler(IPhysicsPlayerControllerEvent*)
00053c30 t CPlayerController::GetPushMassLimit()
00053bf0 t CPlayerController::SetPushMassLimit(float)
00053c50 t CPlayerController::GetPushSpeedLimit()
00053f30 t CPlayerController::GetShadowPosition(Vector*, QAngle*)
00050c10 t CPlayerController::GetShadowVelocity(Vector*)
00053c10 t CPlayerController::SetPushSpeedLimit(float)
00051990 t CPlayerController::TryTeleportObject()
00053cd0 t CPlayerController::event_object_frozen(IVP_Event_Object*)
00053b20 t CPlayerController::get_controller_name()
00053c90 t CPlayerController::event_object_created(IVP_Event_Object*)
00053c70 t CPlayerController::event_object_deleted(IVP_Event_Object*)
00053cb0 t CPlayerController::event_object_revived(IVP_Event_Object*)
00053b10 t CPlayerController::get_controller_priority()
00051ae0 t CPlayerController::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00050760 t CPlayerController::Jump()
00050e80 t CPlayerController::StepUp(float)
000514a0 t CPlayerController::Update(Vector const&, Vector const&, float, bool, IPhysicsObject*)
00050d00 t CPlayerController::MaxSpeed(Vector const&)
00053bd0 t CPlayerController::GetObject()
00051420 t CPlayerController::SetGround(CPhysicsObject*)
00051880 t CPlayerController::SetObject(IPhysicsObject*)
00053b40 t CPlayerController::WasFrozen()
00051760 t CPlayerController::CPlayerController(CPhysicsObject*)
00051760 t CPlayerController::CPlayerController(CPhysicsObject*)
00051970 t CPlayerController::~CPlayerController()
000518f0 t CPlayerController::~CPlayerController()
000518f0 t CPlayerController::~CPlayerController()
00050850 t CShadowController::GetMaxSpeed(float*, float*)
00053030 t CShadowController::AttachObject()
00053310 t CShadowController::DetachObject()
00053d40 t CShadowController::AllowsRotation()
00053d70 t CShadowController::GetLastImpulse(Vector*)
000536e0 t CShadowController::WriteToTemplate(vphysics_save_cshadowcontroller_t&)
000537b0 t CShadowController::InitFromTemplate(vphysics_save_cshadowcontroller_t const&)
00053d10 t CShadowController::AllowsTranslation()
00050890 t CShadowController::GetTargetPosition(Vector*, QAngle*)
00053e40 t CShadowController::UseShadowMaterial(bool)
00053cf0 t CShadowController::get_controller_name()
000507d0 t CShadowController::GetTeleportDistance()
000507a0 t CShadowController::SetTeleportDistance(float)
00053ec0 t CShadowController::ObjectMaterialChanged(int)
00053e10 t CShadowController::IsPhysicallyControlled()
00053ce0 t CShadowController::get_controller_priority()
00053dd0 t CShadowController::SetPhysicallyControlled(bool)
00052c10 t CShadowController::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00050b00 t CShadowController::StepUp(float)
00050930 t CShadowController::Update(Vector const&, QAngle const&, float)
00050810 t CShadowController::MaxSpeed(float, float)
000534a0 t CShadowController::SetObject(IPhysicsObject*)
00053220 t CShadowController::CShadowController(CPhysicsObject*, bool, bool)
00052fd0 t CShadowController::CShadowController()
00053220 t CShadowController::CShadowController(CPhysicsObject*, bool, bool)
00052fd0 t CShadowController::CShadowController()
00053470 t CShadowController::~CShadowController()
00053410 t CShadowController::~CShadowController()
00053410 t CShadowController::~CShadowController()
         U CThreadSpinRWLock::UnlockRead()
         U CThreadSpinRWLock::LockForRead()
         U CThreadSpinRWLock::UnlockWrite()
         U CThreadSpinRWLock::SpinLockForWrite(unsigned int)
         U CThreadSyncObject::~CThreadSyncObject()
00073320 t CUtlInplaceBuffer::InplaceGetLinePtr(char**, int*)
000733d0 t CUtlInplaceBuffer::InplaceGetLinePtr()
00073ae0 t CUtlInplaceBuffer::CUtlInplaceBuffer(int, int, int)
00073ae0 t CUtlInplaceBuffer::CUtlInplaceBuffer(int, int, int)
0004a900 t CUtlSymbolTableMT::AddString(char const*)
0004a950 t CUtlSymbolTableMT::~CUtlSymbolTableMT()
0004a950 t CUtlSymbolTableMT::~CUtlSymbolTableMT()
00037b10 t IPhysicsCollision::~IPhysicsCollision()
000379b0 t IPhysicsCollision::~IPhysicsCollision()
000379b0 t IPhysicsCollision::~IPhysicsCollision()
000d1010 t IVP_Compact_Ledge::is_compact()
000d0b20 t IVP_Compact_Ledge::c_ledge_init()
000d0bb0 t IVP_Compact_Ledge::byte_swap_all(IVP_U_BigVector<IVP_Compact_Poly_Point>*)
000d0f30 t IVP_Compact_Ledge::set_is_compact(IVP_BOOL)
000d0f60 t IVP_Compact_Ledge::get_point_array()
000d1040 t IVP_Compact_Ledge::set_client_data(unsigned int)
000d0f80 t IVP_Compact_Ledge::get_first_triangle()
000d0f00 t IVP_Compact_Ledge::set_offset_ledge_points(int)
000d0f10 t IVP_Compact_Ledge::set_size(int)
000d0b50 t IVP_Compact_Ledge::byte_swap()
000fda50 t IVP_Contact_Point::reset_time(IVP_Time)
000f9dd0 t IVP_Contact_Point::get_material_info(IVP_Material**)
000fad10 t IVP_Contact_Point::calc_coll_distance()
000fe7a0 t IVP_Contact_Point::get_contact_normal(IVP_U_Float_Point*)
000fe750 t IVP_Contact_Point::recompute_friction()
000fe7c0 t IVP_Contact_Point::set_contact_normal(IVP_U_Float_Point const&)
000eab60 t IVP_Contact_Point::two_values_friction(IVP_U_Float_Point*)
000fcf50 t IVP_Contact_Point::p_calc_friction_s_PK(IVP_U_Point const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Impact_Solver_Long_Term*, IVP_U_Float_Point*)
000fce00 t IVP_Contact_Point::p_calc_friction_s_PP(IVP_U_Point const*, IVP_U_Point const*, IVP_Impact_Solver_Long_Term*, IVP_U_Float_Point*)
000fcbc0 t IVP_Contact_Point::p_calc_friction_qr_PF(IVP_U_Point const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Impact_Solver_Long_Term*, IVP_U_Float_Point*)
000fd350 t IVP_Contact_Point::p_calc_friction_ss_KK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*, IVP_Impact_Solver_Long_Term*, IVP_U_Float_Point*)
000fda70 t IVP_Contact_Point::recalc_friction_s_vals()
000eb130 t IVP_Contact_Point::static_friction_single(IVP_Event_Sim const*, float, float)
000ecb20 t IVP_Contact_Point::ease_the_friction_force(IVP_U_Float_Point*)
000fac80 t IVP_Contact_Point::get_rescue_speed_impact(IVP_Environment*)
000ecac0 t IVP_Contact_Point::set_friction_to_neutral()
000fab80 t IVP_Contact_Point::get_rot_speed_uncertainty()
000ef6a0 t IVP_Contact_Point::calc_virtual_mass_of_mindist()
000eb010 t IVP_Contact_Point::get_and_set_real_friction_len(IVP_U_Float_Point*)
000ec340 t IVP_Contact_Point::friction_force_local_constraint_1d(IVP_Event_Sim const*)
000ebfd0 t IVP_Contact_Point::friction_force_local_constraint_2d(IVP_Event_Sim const*)
000f9ee0 t IVP_Contact_Point::read_materials_for_contact_situation(IVP_Impact_Solver_Long_Term*)
000eb540 t IVP_Contact_Point::friction_force_local_constraint_2d_wheel(IVP_Core*, IVP_Impact_Solver_Long_Term*, IVP_Event_Sim const*, float&)
000ea940 t IVP_Contact_Point::IVP_Contact_Point(IVP_Mindist*)
000ea940 t IVP_Contact_Point::IVP_Contact_Point(IVP_Mindist*)
000ed2d0 t IVP_Contact_Point::~IVP_Contact_Point()
000ed2d0 t IVP_Contact_Point::~IVP_Contact_Point()
000e80a0 t IVP_Debug_Manager::init_debug_manager()
000e8060 t IVP_Debug_Manager::clear_debug_manager()
000e8120 t IVP_Debug_Manager::IVP_Debug_Manager()
000e8120 t IVP_Debug_Manager::IVP_Debug_Manager()
000e8090 t IVP_Debug_Manager::~IVP_Debug_Manager()
000e8090 t IVP_Debug_Manager::~IVP_Debug_Manager()
001085f0 t IVP_Event_Manager::simulate_time_events(IVP_Time_Manager*, IVP_Environment*, IVP_Time)
00108140 t IVP_Event_Manager::simulate_variable_time_step(IVP_Time_Manager*, IVP_Environment*, IVP_Time_Event_PSI*, float)
001087e0 t IVP_Event_Manager::~IVP_Event_Manager()
00108770 t IVP_Event_Manager::~IVP_Event_Manager()
00108770 t IVP_Event_Manager::~IVP_Event_Manager()
000fbb50 t IVP_Friction_Hash::~IVP_Friction_Hash()
000fbb50 t IVP_Friction_Hash::~IVP_Friction_Hash()
00093ed0 t IVP_Halfspacesoup::add_halfspace(IVP_U_Hesse const*)
00094100 t IVP_Halfspacesoup::IVP_Halfspacesoup(IVP_Compact_Ledge const*)
00093e10 t IVP_Halfspacesoup::IVP_Halfspacesoup()
00094100 t IVP_Halfspacesoup::IVP_Halfspacesoup(IVP_Compact_Ledge const*)
00093e10 t IVP_Halfspacesoup::IVP_Halfspacesoup()
00093e30 t IVP_Halfspacesoup::~IVP_Halfspacesoup()
00093e30 t IVP_Halfspacesoup::~IVP_Halfspacesoup()
000f82a0 t IVP_Impact_Solver::confirm_impact(int)
000f8d50 t IVP_Impact_Solver::delay_decision(IVP_Core**)
000f8430 t IVP_Impact_Solver::do_rescue_push(IVP_U_Float_Point*, IVP_BOOL)
000f8c70 t IVP_Impact_Solver::delay_of_impact(int)
000f8b80 t IVP_Impact_Solver::do_push_on_core(IVP_U_Float_Point*, int)
000f7c40 t IVP_Impact_Solver::get_total_energy()
000f9400 t IVP_Impact_Solver::estimate_push_impulse()
000f9e50 t IVP_Impact_Solver::get_cos_sin_for_impact(float, float, float*, float*)
000f8010 t IVP_Impact_Solver::get_world_push_direction()
000f8d00 t IVP_Impact_Solver::clear_change_values_cores()
000f7ca0 t IVP_Impact_Solver::get_relative_speed_vector()
000f92e0 t IVP_Impact_Solver::calc_virt_masses_impact_solver(IVP_U_Float_Point const*)
000fa840 t IVP_Impact_Solver::get_world_direction_second_friction(IVP_Contact_Point*)
000f7d40 t IVP_Impact_Solver::get_world_push_direction_two_friction(double)
000f8f90 t IVP_Impact_Solver::do_push(double)
000f94a0 t IVP_Impact_Solver::do_impact(IVP_Core**, IVP_BOOL, int, float)
000f8340 t IVP_Impact_Solver::undo_push()
000faf80 t IVP_Impact_System::test_loop_all_pairs()
000fa5f0 t IVP_Impact_System::add_pair_to_impact_system(IVP_Friction_Core_Pair*)
000fa780 t IVP_Impact_System::pair_is_already_in_system(IVP_Friction_Core_Pair*)
000fb1a0 t IVP_Impact_System::recalc_all_affected_cores()
000fa7f0 t IVP_Impact_System::invalidate_impact_mindists(IVP_Core*)
000faec0 t IVP_Impact_System::debug_check_all_dists_at_end()
000fb480 t IVP_Impact_System::init_and_solve_impact_system(IVP_Mindist*, IVP_Friction_System*, IVP_Friction_Core_Pair*, IVP_Contact_Point*)
000fa550 t IVP_Impact_System::impact_system_check_start_pair(IVP_Friction_Core_Pair*, IVP_Contact_Point*)
000fa660 t IVP_Impact_System::add_pushed_core_with_pairs_except(IVP_Core*, IVP_Friction_Core_Pair*)
000fa630 t IVP_Impact_System::synchronize_core_for_impact_system(IVP_Core*)
000b1d40 t IVP_I_Point_VHash::find_point(IVP_U_Point*)
000b1ce0 t IVP_I_Point_VHash::remove_point(IVP_U_Point*)
000b1ab0 t IVP_I_Point_VHash::point_to_index(IVP_U_Point*)
000b1c80 t IVP_I_Point_VHash::add_point(IVP_U_Point*)
000b1dd0 t IVP_I_Point_VHash::IVP_I_Point_VHash(int)
000b1dd0 t IVP_I_Point_VHash::IVP_I_Point_VHash(int)
000b19f0 t IVP_I_Point_VHash::~IVP_I_Point_VHash()
000b19d0 t IVP_I_Point_VHash::~IVP_I_Point_VHash()
000b19d0 t IVP_I_Point_VHash::~IVP_I_Point_VHash()
000f7a70 t IVP_Listener_Hull::hull_manager_is_reset(float, float)
00126bf0 t IVP_Range_Manager::get_coll_range_in_world(IVP_Real_Object const*)
00126c80 t IVP_Range_Manager::environment_will_be_deleted(IVP_Environment*)
00126ae0 t IVP_Range_Manager::get_coll_range_intra_objects(IVP_Real_Object const*, IVP_Real_Object const*, double*, double*)
00126ca0 t IVP_Range_Manager::IVP_Range_Manager(IVP_Environment*, IVP_BOOL)
00126ca0 t IVP_Range_Manager::IVP_Range_Manager(IVP_Environment*, IVP_BOOL)
000d39d0 t IVP_Ray_Solver_Os::check_ray_against_compact_ledge_os(IVP_Compact_Ledge const*)
000d40f0 t IVP_Ray_Solver_Os::check_ray_against_compact_surface_os(IVP_Compact_Surface const*)
000d3f80 t IVP_Ray_Solver_Os::check_ray_against_ledge_tree_node_os(IVP_Compact_Ledgetree_Node const*)
000d4110 t IVP_Ray_Solver_Os::IVP_Ray_Solver_Os(IVP_Ray_Solver*, IVP_Real_Object*)
000d4110 t IVP_Ray_Solver_Os::IVP_Ray_Solver_Os(IVP_Ray_Solver*, IVP_Real_Object*)
000b78e0 t IVP_Tetra_Intrude::checkin_edge(IVP_Tri_Edge*)
000b76f0 t IVP_Tetra_Intrude::point_2_bits(IVP_U_Point*, IVP_U_Point*, int*)
000b7a10 t IVP_Tetra_Intrude::checkout_edge(IVP_Tri_Edge*)
000b8260 t IVP_Tetra_Intrude::check_intrusion(IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Extra_Point*, int, IVP_Intrusion_Status*)
000b7780 t IVP_Tetra_Intrude::init_tetra_edge(IVP_Tetra_Edge*, IVP_Tetra_Point*, IVP_Tetra_Point*, IVP_Tri_Edge*)
000b8d70 t IVP_Tetra_Intrude::calc_intrusion_status(IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Extra_Point*, int)
000b7650 t IVP_Tetra_Intrude::pe(int)
000b7490 t IVP_Tetra_Intrude::IVP_Tetra_Intrude(IVP_Tetra_Point*, int)
000b7490 t IVP_Tetra_Intrude::IVP_Tetra_Intrude(IVP_Tetra_Point*, int)
000b7600 t IVP_Tetra_Intrude::~IVP_Tetra_Intrude()
000b7600 t IVP_Tetra_Intrude::~IVP_Tetra_Intrude()
0010c550 t IVP_U_Active_Mult::active_float_changed(IVP_U_Active_Float*)
0010ba00 t IVP_U_Active_Mult::print()
0010da20 t IVP_U_Active_Mult::IVP_U_Active_Mult(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0010da20 t IVP_U_Active_Mult::IVP_U_Active_Mult(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0010cb80 t IVP_U_Active_Mult::~IVP_U_Active_Mult()
0010cb20 t IVP_U_Active_Mult::~IVP_U_Active_Mult()
0010cb20 t IVP_U_Active_Mult::~IVP_U_Active_Mult()
0010c790 t IVP_U_Active_Sine::active_float_changed(IVP_U_Active_Float*)
0010bbb0 t IVP_U_Active_Sine::print()
0010d650 t IVP_U_Active_Sine::IVP_U_Active_Sine(char const*, IVP_U_Active_Float*, double, double, double, double)
0010d650 t IVP_U_Active_Sine::IVP_U_Active_Sine(char const*, IVP_U_Active_Float*, double, double, double, double)
0010ce50 t IVP_U_Active_Sine::~IVP_U_Active_Sine()
0010ce00 t IVP_U_Active_Sine::~IVP_U_Active_Sine()
0010ce00 t IVP_U_Active_Sine::~IVP_U_Active_Sine()
00110790 t IVP_U_Float_Hesse::calc_hesse(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00110610 t IVP_U_Float_Hesse::mult_hesse(double)
001108b0 t IVP_U_Float_Hesse::calc_hesse_val(IVP_U_Float_Point const*)
00114560 t IVP_U_Float_Hesse::set4(IVP_U_Float_Hesse const*)
001108f0 t IVP_U_Float_Hesse::normize()
001145f0 t IVP_U_Float_Hesse::byte_swap()
001145b0 t IVP_U_Float_Hesse::IVP_U_Float_Hesse(double, double, double, double)
001145a0 t IVP_U_Float_Hesse::IVP_U_Float_Hesse()
001145b0 t IVP_U_Float_Hesse::IVP_U_Float_Hesse(double, double, double, double)
001145a0 t IVP_U_Float_Hesse::IVP_U_Float_Hesse()
00114850 t IVP_U_Float_Point::set_to_zero()
00115670 t IVP_U_Float_Point::add_multiple(IVP_U_Float_Point const*, double)
001149f0 t IVP_U_Float_Point::add_multiple(IVP_U_Float_Point const*, IVP_U_Float_Point const*, double)
0010f400 t IVP_U_Float_Point::fast_normize()
001156f0 t IVP_U_Float_Point::set_multiple(IVP_U_Quat const*, double)
00114890 t IVP_U_Float_Point::set_multiple(IVP_U_Float_Point const*, double)
001148f0 t IVP_U_Float_Point::set_negative(IVP_U_Float_Point const*)
0010f110 t IVP_U_Float_Point::set_interpolate(IVP_U_Float_Point const*, IVP_U_Float_Point const*, double)
00114a70 t IVP_U_Float_Point::set_pairwise_mult(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
0010f8b0 t IVP_U_Float_Point::calc_cross_product(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
0010f770 t IVP_U_Float_Point::set_orthogonal_part(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00114b30 t IVP_U_Float_Point::inline_subtract_and_mult(IVP_U_Float_Point const*, IVP_U_Float_Point const*, double)
0010f350 t IVP_U_Float_Point::real_length_plus_normize()
00114fd0 t IVP_U_Float_Point::inline_calc_cross_product(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00116540 t IVP_U_Float_Point::inline_calc_cross_product_and_normize(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00115630 t IVP_U_Float_Point::add(IVP_U_Float_Point const*)
00114ab0 t IVP_U_Float_Point::add(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00115550 t IVP_U_Float_Point::set(float, float, float)
001155d0 t IVP_U_Float_Point::set(float const*)
00114870 t IVP_U_Float_Point::set(IVP_U_Float_Point const*)
00115080 t IVP_U_Float_Point::inline_set_vert_to_area_defined_by_three_points(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00114950 t IVP_U_Float_Point::mult(double)
0010feb0 t IVP_U_Float_Point::rotate(IVP_COORDINATE_INDEX, float)
0010f4c0 t IVP_U_Float_Point::normize()
001155f0 t IVP_U_Float_Point::subtract(IVP_U_Float_Point const*)
00114af0 t IVP_U_Float_Point::subtract(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00114270 t IVP_U_Float_Point::byte_swap()
0010f600 t IVP_U_Float_Point::line_sqrt()
00114230 t IVP_U_Float_Point::IVP_U_Float_Point(double, double, double)
00115bf0 t IVP_U_Float_Point::IVP_U_Float_Point(IVP_U_Float_Point const*)
00114220 t IVP_U_Float_Point::IVP_U_Float_Point()
00114230 t IVP_U_Float_Point::IVP_U_Float_Point(double, double, double)
00115bf0 t IVP_U_Float_Point::IVP_U_Float_Point(IVP_U_Float_Point const*)
00114220 t IVP_U_Float_Point::IVP_U_Float_Point()
0010ee90 t IVP_U_String_Hash::add(char const*, void*)
0010ef30 t IVP_U_String_Hash::remove(char const*)
0010ed50 t IVP_U_String_Hash::IVP_U_String_Hash(int, void*)
0010ed50 t IVP_U_String_Hash::IVP_U_String_Hash(int, void*)
0010ed80 t IVP_U_String_Hash::~IVP_U_String_Hash()
0010ed80 t IVP_U_String_Hash::~IVP_U_String_Hash()
001197f0 t IVP_U_Vector_Base::increment_mem()
000b23a0 t P_Sur_2D_Triangle::P_Sur_2D_Triangle(int, int, int)
000b23a0 t P_Sur_2D_Triangle::P_Sur_2D_Triangle(int, int, int)
000670d0 t CDefSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
00050410 t CDefSaveRestoreOps::Parse(SaveRestoreFieldInfo_t const&, char const*)
000670f0 t CDefSaveRestoreOps::IsEmpty(SaveRestoreFieldInfo_t const&)
000670e0 t CDefSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
00067100 t CDefSaveRestoreOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
00037ff0 t CPhysicsConstraint::Deactivate()
0003a860 t CPhysicsConstraint::InitLength(IVP_Environment*, CPhysicsConstraintGroup*, constraint_lengthparams_t const&)
0003a4e0 t CPhysicsConstraint::InitPulley(IVP_Environment*, CPhysicsConstraintGroup*, constraint_pulleyparams_t const&)
0003c010 t CPhysicsConstraint::InitRagdoll(IVP_Environment*, CPhysicsConstraintGroup*, constraint_ragdollparams_t const&)
00039fd0 t CPhysicsConstraint::InitSliding(IVP_Environment*, CPhysicsConstraintGroup*, constraint_slidingparams_t const&)
0003d510 t CPhysicsConstraint::SetGameData(void*)
0003bd90 t CPhysicsConstraint::DetachListener()
00039d00 t CPhysicsConstraint::InitBallsocket(IVP_Environment*, CPhysicsConstraintGroup*, constraint_ballsocketparams_t const&)
000381b0 t CPhysicsConstraint::SetLinearMotor(float, float)
0003d5d0 t CPhysicsConstraint::OutputDebugInfo()
00038240 t CPhysicsConstraint::SetAngularMotor(float, float)
0003bf50 t CPhysicsConstraint::SetupRagdollAxis(int, constraint_axislimit_t const&, hk_Limited_Ball_Socket_BP*)
0003d580 t CPhysicsConstraint::event_object_frozen(IVP_Event_Object*)
0003d540 t CPhysicsConstraint::event_object_created(IVP_Event_Object*)
0003bec0 t CPhysicsConstraint::event_object_deleted(IVP_Event_Object*)
0003d560 t CPhysicsConstraint::event_object_revived(IVP_Event_Object*)
000385f0 t CPhysicsConstraint::UpdateRagdollTransforms(matrix3x4_t const&, matrix3x4_t const&)
00038020 t CPhysicsConstraint::Activate()
00039a20 t CPhysicsConstraint::InitFixed(IVP_Environment*, CPhysicsConstraintGroup*, constraint_fixedparams_t const&)
000394a0 t CPhysicsConstraint::InitHinge(IVP_Environment*, CPhysicsConstraintGroup*, constraint_limitedhingeparams_t const&)
000393d0 t CPhysicsConstraint::CPhysicsConstraint(CPhysicsObject*, CPhysicsObject*)
000393d0 t CPhysicsConstraint::CPhysicsConstraint(CPhysicsObject*, CPhysicsObject*)
0003be90 t CPhysicsConstraint::~CPhysicsConstraint()
0003be00 t CPhysicsConstraint::~CPhysicsConstraint()
0003be00 t CPhysicsConstraint::~CPhysicsConstraint()
00070db0 t CUtlCharConversion::FindConversion(char const*, int*)
00070e50 t CUtlCharConversion::CUtlCharConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
00070e50 t CUtlCharConversion::CUtlCharConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
00057840 t CVehicleController::CalcEngine(float, float, bool, float, bool)
00054a90 t CVehicleController::IsBoosting()
00055a70 t CVehicleController::ResetState()
00055cf0 t CVehicleController::CreateWheel(int, vehicle_axleparams_t&)
00057420 t CVehicleController::CalcSteering(float, float, float, bool)
00057d60 t CVehicleController::UpdateEngine(vehicle_controlparams_t const&, float, float, float, bool, bool)
00058930 t CVehicleController::GetWheelCount()
00056810 t CVehicleController::InitCarSystem(CPhysicsObject*)
00054ac0 t CVehicleController::OnVehicleExit()
00054a50 t CVehicleController::UpdateBooster(float)
00055cd0 t CVehicleController::AttachListener()
00054e20 t CVehicleController::OnVehicleEnter()
000570a0 t CVehicleController::UpdateSkidding(bool)
00057640 t CVehicleController::UpdateSteering(vehicle_controlparams_t const&, float, float)
00056020 t CVehicleController::CreateTraceData(int, vehicle_axleparams_t&)
00056990 t CVehicleController::InitVehicleData(vehicleparams_t const&)
00054a30 t CVehicleController::SetSpringLength(int, float)
00056f60 t CVehicleController::UpdateHandbrake(vehicle_controlparams_t const&, float, bool, bool)
00058020 t CVehicleController::WriteToTemplate(vphysics_save_cvehiclecontroller_t&)
00056520 t CVehicleController::CreateIVPObjects()
00058910 t CVehicleController::GetVehicleParams()
00058300 t CVehicleController::InitFromTemplate(CPhysicsEnvironment*, void*, IPhysicsGameTrace*, vphysics_save_cvehiclecontroller_t const&)
00058960 t CVehicleController::IsEngineDisabled()
00054df0 t CVehicleController::SetWheelFriction(int, float)
00056bf0 t CVehicleController::UpdatePowerslide(vehicle_controlparams_t const&, bool, float)
00056200 t CVehicleController::InitCarSystemBody(IVP_Template_Car_System&)
00058940 t CVehicleController::SetEngineDisabled(bool)
000567a0 t CVehicleController::ShutdownCarSystem()
00057200 t CVehicleController::UpdateExtraForces()
00054980 t CVehicleController::VehicleDataReload()
00058900 t CVehicleController::GetOperatingParams()
000589c0 t CVehicleController::event_object_frozen(IVP_Event_Object*)
00056270 t CVehicleController::InitCarSystemWheels(IVP_Template_Car_System&)
00058980 t CVehicleController::event_object_created(IVP_Event_Object*)
000568e0 t CVehicleController::event_object_deleted(IVP_Event_Object*)
000589a0 t CVehicleController::event_object_revived(IVP_Event_Object*)
00054ee0 t CVehicleController::GetWheelContactPoint(int, Vector*, int*)
000573f0 t CVehicleController::UpdateWheelPositions()
00054be0 t CVehicleController::GetCarSystemDebugData(vehicle_debugcarsystem_t&)
000576c0 t CVehicleController::CalcEngineTransmission(float)
00056e50 t CVehicleController::UpdateEngineTurboStart(vehicle_controlparams_t const&, float)
00056f00 t CVehicleController::UpdateEngineTurboFinish()
00058920 t CVehicleController::GetVehicleParamsForChange()
00057de0 t CVehicleController::Update(float, vehicle_controlparams_t&)
00054e70 t CVehicleController::GetWheel(int)
00056b90 t CVehicleController::CVehicleController(vehicleparams_t const&, CPhysicsEnvironment*, unsigned int, IPhysicsGameTrace*)
00055cb0 t CVehicleController::CVehicleController()
00056b90 t CVehicleController::CVehicleController(vehicleparams_t const&, CPhysicsEnvironment*, unsigned int, IPhysicsGameTrace*)
00055cb0 t CVehicleController::CVehicleController()
00056970 t CVehicleController::~CVehicleController()
00056910 t CVehicleController::~CVehicleController()
00056910 t CVehicleController::~CVehicleController()
000907b0 t hk_Rigid_Body_Core::apply_impulses(hk_Core_VMQ_Input&, float const*)
00090570 t hk_Rigid_Body_Core::add_to_mass_matrix_inv(hk_Core_VMQ_Input&, hk_Dense_Matrix&, float*)
0003d5b0 t IPhysicsConstraint::~IPhysicsConstraint()
0003d4f0 t IPhysicsConstraint::~IPhysicsConstraint()
0003d4f0 t IPhysicsConstraint::~IPhysicsConstraint()
000d76c0 t IVP_Actuator_Extra::do_float_cam(double)
000d7450 t IVP_Actuator_Extra::do_puck_force(double)
000d62e0 t IVP_Actuator_Extra::get_float_cam_props(double*, double*, double*, double*)
000d4ea0 t IVP_Actuator_Extra::active_float_changed(IVP_U_Active_Float*)
000d75c0 t IVP_Actuator_Extra::calc_float_cam_matrix(IVP_U_Matrix*)
000d7950 t IVP_Actuator_Extra::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000d62c0 t IVP_Actuator_Extra::get_force()
000d70a0 t IVP_Actuator_Extra::IVP_Actuator_Extra(IVP_Environment*, IVP_Template_Extra*)
000d70a0 t IVP_Actuator_Extra::IVP_Actuator_Extra(IVP_Environment*, IVP_Template_Extra*)
000d6a90 t IVP_Actuator_Extra::~IVP_Actuator_Extra()
000d69c0 t IVP_Actuator_Extra::~IVP_Actuator_Extra()
000d69c0 t IVP_Actuator_Extra::~IVP_Actuator_Extra()
000d7c60 t IVP_Actuator_Force::get_controller_name()
000d51b0 t IVP_Actuator_Force::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000d6230 t IVP_Actuator_Force::set_force(double)
000d7250 t IVP_Actuator_Force::IVP_Actuator_Force(IVP_Environment*, IVP_Template_Force*)
000d7250 t IVP_Actuator_Force::IVP_Actuator_Force(IVP_Environment*, IVP_Template_Force*)
000d6b50 t IVP_Actuator_Force::~IVP_Actuator_Force()
000d6ab0 t IVP_Actuator_Force::~IVP_Actuator_Force()
000d6ab0 t IVP_Actuator_Force::~IVP_Actuator_Force()
00109250 t IVP_Anomaly_Limits::get_max_collisions_per_psi()
001089f0 t IVP_Anomaly_Limits::environment_will_be_deleted(IVP_Environment*)
00109260 t IVP_Anomaly_Limits::get_max_collision_checks_per_psi()
00108ad0 t IVP_Anomaly_Limits::IVP_Anomaly_Limits(IVP_BOOL)
00108ad0 t IVP_Anomaly_Limits::IVP_Anomaly_Limits(IVP_BOOL)
001089d0 t IVP_Anomaly_Limits::~IVP_Anomaly_Limits()
00108850 t IVP_Anomaly_Limits::~IVP_Anomaly_Limits()
00108850 t IVP_Anomaly_Limits::~IVP_Anomaly_Limits()
000dde10 t IVP_Buoyancy_Input::IVP_Buoyancy_Input()
000dde10 t IVP_Buoyancy_Input::IVP_Buoyancy_Input()
000e6200 t IVP_Core_Collision::split_collision_merged_core_next_PSI()
000e73b0 t IVP_Core_Collision::IVP_Core_Collision(IVP_Core*, IVP_Core*)
000e73b0 t IVP_Core_Collision::IVP_Core_Collision(IVP_Core*, IVP_Core*)
000e7880 t IVP_Freeze_Manager::init_freeze_manager()
000e7870 t IVP_Freeze_Manager::IVP_Freeze_Manager()
000e7870 t IVP_Freeze_Manager::IVP_Freeze_Manager()
00066970 t IVPhysicsKeyParser::~IVPhysicsKeyParser()
00066900 t IVPhysicsKeyParser::~IVPhysicsKeyParser()
00066900 t IVPhysicsKeyParser::~IVPhysicsKeyParser()
000b18a0 t IVP_I_FPoint_VHash::find_point(IVP_U_Float_Point*)
000b1840 t IVP_I_FPoint_VHash::remove_point(IVP_U_Float_Point*)
000b17a0 t IVP_I_FPoint_VHash::point_to_index(IVP_U_Float_Point*)
000b17e0 t IVP_I_FPoint_VHash::add_point(IVP_U_Float_Point*)
000b1930 t IVP_I_FPoint_VHash::IVP_I_FPoint_VHash(int)
000b1930 t IVP_I_FPoint_VHash::IVP_I_FPoint_VHash(int)
000b1770 t IVP_I_FPoint_VHash::~IVP_I_FPoint_VHash()
000b1750 t IVP_I_FPoint_VHash::~IVP_I_FPoint_VHash()
000b1750 t IVP_I_FPoint_VHash::~IVP_I_FPoint_VHash()
000d4d90 t IVP_Ray_Solver_Min::get_ray_hit()
000d4db0 t IVP_Ray_Solver_Min::get_ray_dist()
000d2f20 t IVP_Ray_Solver_Min::add_hit_object(IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_Compact_Triangle const*, double, IVP_U_Point*)
000d4dc0 t IVP_Ray_Solver_Min::IVP_Ray_Solver_Min(IVP_Ray_Solver_Template const*)
000d4dc0 t IVP_Ray_Solver_Min::IVP_Ray_Solver_Min(IVP_Ray_Solver_Template const*)
000d4ca0 t IVP_Ray_Solver_Min::~IVP_Ray_Solver_Min()
000d4c90 t IVP_Ray_Solver_Min::~IVP_Ray_Solver_Min()
000d4c90 t IVP_Ray_Solver_Min::~IVP_Ray_Solver_Min()
0010af20 t IVP_SurfaceManager::add_reference_to_ledge(IVP_Compact_Ledge const*)
0010af30 t IVP_SurfaceManager::remove_reference_to_ledge(IVP_Compact_Ledge const*)
0010af10 t IVP_SurfaceManager::get_ledge_specific_client_data(IVP_Compact_Ledge const*)
0010aef0 t IVP_SurfaceManager::set_ledge_specific_client_data(IVP_Compact_Ledge*, unsigned int)
0010aed0 t IVP_SurfaceManager::~IVP_SurfaceManager()
0010aec0 t IVP_SurfaceManager::~IVP_SurfaceManager()
0010aec0 t IVP_SurfaceManager::~IVP_SurfaceManager()
000d57d0 t IVP_Template_Force::IVP_Template_Force()
000d57d0 t IVP_Template_Force::IVP_Template_Force()
00108260 t IVP_Time_Event_PSI::simulate_time_event(IVP_Environment*)
00108840 t IVP_Time_Event_PSI::IVP_Time_Event_PSI()
00108840 t IVP_Time_Event_PSI::IVP_Time_Event_PSI()
001a6ef0 d IVP_U_Active_Float::change_meter
0010c940 t IVP_U_Active_Float::add_dependency(IVP_U_Active_Float_Listener*)
0010c430 t IVP_U_Active_Float::update_derived()
0010dfa0 t IVP_U_Active_Float::get_float_value()
0010df90 t IVP_U_Active_Float::give_double_value()
0010c980 t IVP_U_Active_Float::remove_dependency(IVP_U_Active_Float_Listener*)
0010c390 t IVP_U_Active_Float::IVP_U_Active_Float(char const*)
0010c390 t IVP_U_Active_Float::IVP_U_Active_Float(char const*)
0010bcd0 t IVP_U_Active_Float::~IVP_U_Active_Float()
0010bc70 t IVP_U_Active_Float::~IVP_U_Active_Float()
0010bc70 t IVP_U_Active_Float::~IVP_U_Active_Float()
0010c500 t IVP_U_Active_Limit::active_float_changed(IVP_U_Active_Float*)
0010b9b0 t IVP_U_Active_Limit::print()
0010dab0 t IVP_U_Active_Limit::IVP_U_Active_Limit(char const*, IVP_U_Active_Float*, double, double)
0010dab0 t IVP_U_Active_Limit::IVP_U_Active_Limit(char const*, IVP_U_Active_Float*, double, double)
0010cb00 t IVP_U_Active_Limit::~IVP_U_Active_Limit()
0010cab0 t IVP_U_Active_Limit::~IVP_U_Active_Limit()
0010cab0 t IVP_U_Active_Limit::~IVP_U_Active_Limit()
0010c6a0 t IVP_U_Active_Pulse::active_float_changed(IVP_U_Active_Float*)
0010bae0 t IVP_U_Active_Pulse::print()
0010d7b0 t IVP_U_Active_Pulse::IVP_U_Active_Pulse(char const*, IVP_U_Active_Float*, double, int, int, double, double)
0010d7b0 t IVP_U_Active_Pulse::IVP_U_Active_Pulse(char const*, IVP_U_Active_Float*, double, int, int, double, double)
0010cd70 t IVP_U_Active_Pulse::~IVP_U_Active_Pulse()
0010cd20 t IVP_U_Active_Pulse::~IVP_U_Active_Pulse()
0010cd20 t IVP_U_Active_Pulse::~IVP_U_Active_Pulse()
0010df40 t IVP_U_Active_Value::add_reference()
0010df50 t IVP_U_Active_Value::remove_reference()
0010df80 t IVP_U_Active_Value::get_name()
0010c360 t IVP_U_Active_Value::IVP_U_Active_Value(char const*)
0010c360 t IVP_U_Active_Value::IVP_U_Active_Value(char const*)
0010bc50 t IVP_U_Active_Value::~IVP_U_Active_Value()
0010bc20 t IVP_U_Active_Value::~IVP_U_Active_Value()
0010bc20 t IVP_U_Active_Value::~IVP_U_Active_Value()
00115590 t IVP_U_Float_Point3::set(double const*)
00115570 t IVP_U_Float_Point3::set(float const*)
001141f0 t IVP_U_Float_Point3::byte_swap()
00133810 t IVP_U_Matrix_Cache::calc_matrix_at(IVP_Time, int)
00133880 t IVP_U_Matrix_Cache::calc_matrix_at_now(IVP_Time, int)
00133970 t IVP_U_Matrix_Cache::calc_calc_matrix_cache(IVP_Cache_Object*)
001afaf0 b IVP_U_Matrix_Cache::hits
001afaec b IVP_U_Matrix_Cache::misses
00133890 t IVP_U_Matrix_Cache::p_init(IVP_Cache_Object*)
00133900 t IVP_U_Matrix_Cache::IVP_U_Matrix_Cache(IVP_Cache_Object*)
00133900 t IVP_U_Matrix_Cache::IVP_U_Matrix_Cache(IVP_Cache_Object*)
000493a0 t CIVPMaterialManager::SetPropMap(int*, int)
0004a850 t CIVPMaterialManager::get_elasticity(IVP_Contact_Situation*)
0004a890 t CIVPMaterialManager::get_friction_factor(IVP_Contact_Situation*)
00048c40 t CIVPMaterialManager::get_material_by_index(IVP_Real_Object*, IVP_U_Point const*, int)
00049240 t CIVPMaterialManager::CIVPMaterialManager()
00049240 t CIVPMaterialManager::CIVPMaterialManager()
0004a7f0 t CIVPMaterialManager::~CIVPMaterialManager()
0004a790 t CIVPMaterialManager::~CIVPMaterialManager()
0004a790 t CIVPMaterialManager::~CIVPMaterialManager()
0003e450 t CPhysicsEnvironment::ClearStats()
0003ecc0 t CPhysicsEnvironment::PhantomAdd(CPhysicsObject*)
00067080 t CPhysicsEnvironment::PreRestore(physprerestoreparams_t const&)
0003e800 t CPhysicsEnvironment::SetGravity(Vector const&)
00066d60 t CPhysicsEnvironment::PostRestore()
0003e7b0 t CPhysicsEnvironment::CreateSpring(IPhysicsObject*, IPhysicsObject*, springparams_t*)
00040180 t CPhysicsEnvironment::DestroyObject(IPhysicsObject*)
0003e120 t CPhysicsEnvironment::DestroySpring(IPhysicsSpring*)
0003ed00 t CPhysicsEnvironment::PhantomRemove(CPhysicsObject*)
0003e2a0 t CPhysicsEnvironment::SetAirDensity(float)
00040820 t CPhysicsEnvironment::SetQuickDelete(bool)
000404f0 t CPhysicsEnvironment::TransferObject(IPhysicsObject*, IPhysicsEnvironment*)
0003dfc0 t CPhysicsEnvironment::GetDebugOverlay()
0003df70 t CPhysicsEnvironment::SetDebugOverlay(void* (*)(char const*, int*))
0003ed40 t CPhysicsEnvironment::ClearDeadObjects()
000403a0 t CPhysicsEnvironment::CreatePolyObject(CPhysCollide const*, int, Vector const&, QAngle const&, objectparams_t*)
0003e2f0 t CPhysicsEnvironment::SweepCollideable(CPhysCollide const*, Vector const&, Vector const&, QAngle const&, unsigned int, IPhysicsTraceFilter*, CGameTrace*)
0003ee50 t CPhysicsEnvironment::CleanupDeleteList()
0003f5b0 t CPhysicsEnvironment::DestroyConstraint(IPhysicsConstraint*)
00040840 t CPhysicsEnvironment::EnableDeleteQueue(bool)
00040110 t CPhysicsEnvironment::CreateSphereObject(float, int, Vector const&, QAngle const&, objectparams_t*, bool)
0003e910 t CPhysicsEnvironment::DebugCheckContacts()
0003e170 t CPhysicsEnvironment::SetCollisionSolver(IPhysicsCollisionSolver*)
00040460 t CPhysicsEnvironment::AddPlayerController(IPhysicsPlayerController*)
0003ec60 t CPhysicsEnvironment::FindPlayerController(IPhysicsObject*)
0003e5b0 t CPhysicsEnvironment::ResetSimulationClock()
0003e600 t CPhysicsEnvironment::CreateConstraintGroup(constraint_groupparams_t const&)
0003e6a0 t CPhysicsEnvironment::CreateFixedConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_fixedparams_t const&)
00040410 t CPhysicsEnvironment::CreateFluidController(IPhysicsObject*, fluidparams_t*)
0003e6e0 t CPhysicsEnvironment::CreateHingeConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_hingeparams_t const&)
0003e1b0 t CPhysicsEnvironment::SetObjectEventHandler(IPhysicsObjectEvent*)
0003e580 t CPhysicsEnvironment::SetSimulationTimestep(float)
0003e620 t CPhysicsEnvironment::CreateLengthConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_lengthparams_t const&)
0003e550 t CPhysicsEnvironment::CreateMotionController(IMotionEvent*)
000404c0 t CPhysicsEnvironment::CreatePlayerController(IPhysicsObject*)
00040330 t CPhysicsEnvironment::CreatePolyObjectStatic(CPhysCollide const*, int, Vector const&, QAngle const&, objectparams_t*)
0003e640 t CPhysicsEnvironment::CreatePulleyConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_pulleyparams_t const&)
0003e560 t CPhysicsEnvironment::CreateShadowController(IPhysicsObject*, bool, bool)
0003e140 t CPhysicsEnvironment::DestroyConstraintGroup(IPhysicsConstraintGroup*)
0003ea40 t CPhysicsEnvironment::DestroyFluidController(IPhysicsFluidController*)
0003e440 t CPhysicsEnvironment::EnableConstraintNotify(bool)
0003ebb0 t CPhysicsEnvironment::RemovePlayerController(IPhysicsPlayerController*)
0003e480 t CPhysicsEnvironment::SetPerformanceSettings(physics_performanceparams_t const*)
0003e790 t CPhysicsEnvironment::CreateRagdollConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_ragdollparams_t const&)
0003e680 t CPhysicsEnvironment::CreateSlidingConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_slidingparams_t const&)
0003e540 t CPhysicsEnvironment::CreateVehicleController(IPhysicsObject*, vehicleparams_t const&, unsigned int, IPhysicsGameTrace*)
0003e210 t CPhysicsEnvironment::DestroyMotionController(IPhysicsMotionController*)
0003ec30 t CPhysicsEnvironment::DestroyPlayerController(IPhysicsPlayerController*)
0003e1f0 t CPhysicsEnvironment::DestroyShadowController(IPhysicsShadowController*)
0003e7d0 t CPhysicsEnvironment::SerializeObjectToBuffer(IPhysicsObject*, unsigned char*, unsigned int)
0003e230 t CPhysicsEnvironment::DestroyVehicleController(IPhysicsVehicleController*)
0003eb70 t CPhysicsEnvironment::GetCollisionEventHandler()
0003eb80 t CPhysicsEnvironment::NotifyConstraintDisabled(IPhysicsConstraint*)
0003e190 t CPhysicsEnvironment::SetCollisionEventHandler(IPhysicsCollisionEvent*)
0003e1d0 t CPhysicsEnvironment::SetConstraintEventHandler(IPhysicsConstraintEvent*)
0003e660 t CPhysicsEnvironment::CreateBallsocketConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_ballsocketparams_t const&)
000402d0 t CPhysicsEnvironment::UnserializeObjectFromBuffer(void*, unsigned char*, unsigned int, bool)
0003e6c0 t CPhysicsEnvironment::CreateLimitedHingeConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_limitedhingeparams_t const&)
00066cc0 t CPhysicsEnvironment::Save(physsaveparams_t const&)
00066fc0 t CPhysicsEnvironment::Restore(physrestoreparams_t const&)
0003f660 t CPhysicsEnvironment::Simulate(float)
0003e160 t CPhysicsEnvironment::TraceBox(CGameTrace*, Vector const&, Vector const&, Vector const&, Vector const&)
0003e2e0 t CPhysicsEnvironment::TraceRay(Ray_t const&, unsigned int, IPhysicsTraceFilter*, CGameTrace*)
0003e390 t CPhysicsEnvironment::ReadStats(physics_stats_t*)
0003ef30 t CPhysicsEnvironment::CPhysicsEnvironment()
0003ef30 t CPhysicsEnvironment::CPhysicsEnvironment()
0003f590 t CPhysicsEnvironment::~CPhysicsEnvironment()
0003f2f0 t CPhysicsEnvironment::~CPhysicsEnvironment()
0003f2f0 t CPhysicsEnvironment::~CPhysicsEnvironment()
00077f80 t CUtlConstStringBase<char>::Set(char const*)
00073ba0 t CUtlNoEscConversion::FindConversion(char const*, int*)
0007fde0 t hk_Fixed_Constraint::init_constraint(void const*)
0007faa0 t hk_Fixed_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
0007ff20 t hk_Fixed_Constraint::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
0007ffb0 t hk_Fixed_Constraint::get_constraint_dof()
0007fdf0 t hk_Fixed_Constraint::write_to_blueprint(hk_Fixed_BP*)
0007ffa0 t hk_Fixed_Constraint::get_constraint_type()
0007fa90 t hk_Fixed_Constraint::get_vmq_storage_size()
0007fd70 t hk_Fixed_Constraint::init_fixed_constraint(hk_Fixed_BP const*)
00080010 t hk_Fixed_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
0007fe60 t hk_Fixed_Constraint::hk_Fixed_Constraint(hk_Environment*, hk_Fixed_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0007fec0 t hk_Fixed_Constraint::hk_Fixed_Constraint(hk_Local_Constraint_System*, hk_Fixed_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0007fe60 t hk_Fixed_Constraint::hk_Fixed_Constraint(hk_Environment*, hk_Fixed_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0007fec0 t hk_Fixed_Constraint::hk_Fixed_Constraint(hk_Local_Constraint_System*, hk_Fixed_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0007ffe0 t hk_Fixed_Constraint::~hk_Fixed_Constraint()
0007ffc0 t hk_Fixed_Constraint::~hk_Fixed_Constraint()
0007ffc0 t hk_Fixed_Constraint::~hk_Fixed_Constraint()
00081620 t hk_Hinge_BP_Builder::set_axis_ws(hk_Rigid_Body*, hk_Rigid_Body*, hk_Vector3 const&)
000815f0 t hk_Hinge_BP_Builder::set_position_os(int, hk_Vector3 const&)
00081b90 t hk_Hinge_BP_Builder::set_axis_perp_os(int, hk_Vector3 const&)
00081c30 t hk_Hinge_BP_Builder::set_angular_motor(float, float)
00081c60 t hk_Hinge_BP_Builder::set_angular_limits(float, float)
00081cd0 t hk_Hinge_BP_Builder::set_joint_friction(float)
00081d00 t hk_Hinge_BP_Builder::set_tau(float)
000847d0 t hk_Hinge_Constraint::set_limits(float, float)
00084850 t hk_Hinge_Constraint::set_friction(float)
00084500 t hk_Hinge_Constraint::init_constraint(void const*)
00081d20 t hk_Hinge_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
00084750 t hk_Hinge_Constraint::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
000848e0 t hk_Hinge_Constraint::get_constraint_dof()
00084510 t hk_Hinge_Constraint::write_to_blueprint(hk_Hinge_BP*)
000848d0 t hk_Hinge_Constraint::get_constraint_type()
00081d10 t hk_Hinge_Constraint::get_vmq_storage_size()
00083b60 t hk_Hinge_Constraint::init_hinge_constraint(hk_Hinge_BP const*)
00082020 t hk_Hinge_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
00084890 t hk_Hinge_Constraint::set_motor(float, float)
000845d0 t hk_Hinge_Constraint::hk_Hinge_Constraint(hk_Environment*, hk_Hinge_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00084690 t hk_Hinge_Constraint::hk_Hinge_Constraint(hk_Local_Constraint_System*, hk_Hinge_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
000845d0 t hk_Hinge_Constraint::hk_Hinge_Constraint(hk_Environment*, hk_Hinge_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00084690 t hk_Hinge_Constraint::hk_Hinge_Constraint(hk_Local_Constraint_System*, hk_Hinge_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00084910 t hk_Hinge_Constraint::~hk_Hinge_Constraint()
000848f0 t hk_Hinge_Constraint::~hk_Hinge_Constraint()
000848f0 t hk_Hinge_Constraint::~hk_Hinge_Constraint()
000411f0 t IPhysicsEnvironment::~IPhysicsEnvironment()
00040810 t IPhysicsEnvironment::~IPhysicsEnvironment()
00040810 t IPhysicsEnvironment::~IPhysicsEnvironment()
00120490 t IVP_3D_Solver_PK_KK::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
000d8d20 t IVP_Actuator_Spring::get_constant()
000d8a60 t IVP_Actuator_Spring::set_constant(double)
000d8d30 t IVP_Actuator_Spring::get_damp_factor()
000d8d60 t IVP_Actuator_Spring::get_only_stretch()
000d8d40 t IVP_Actuator_Spring::get_rel_pos_damp()
000d8ac0 t IVP_Actuator_Spring::set_rel_pos_damp(double)
000d8a20 t IVP_Actuator_Spring::set_break_max_len(double)
000d8d00 t IVP_Actuator_Spring::get_controller_name()
000d83d0 t IVP_Actuator_Spring::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000d8380 t IVP_Actuator_Spring::fire_event_spring_broken()
000d8d50 t IVP_Actuator_Spring::get_spring_length_zero_force()
000d88a0 t IVP_Actuator_Spring::set_len(double)
000d8a90 t IVP_Actuator_Spring::set_damp(double)
000d8720 t IVP_Actuator_Spring::IVP_Actuator_Spring(IVP_Environment*, IVP_Template_Spring*, IVP_ACTUATOR_TYPE)
000d8720 t IVP_Actuator_Spring::IVP_Actuator_Spring(IVP_Environment*, IVP_Template_Spring*, IVP_ACTUATOR_TYPE)
000d8260 t IVP_Actuator_Spring::~IVP_Actuator_Spring()
000d80d0 t IVP_Actuator_Spring::~IVP_Actuator_Spring()
000d80d0 t IVP_Actuator_Spring::~IVP_Actuator_Spring()
000d7d70 t IVP_Actuator_Torque::get_torque()
000d64f0 t IVP_Actuator_Torque::set_torque(double)
000d7c80 t IVP_Actuator_Torque::get_controller_name()
000d64b0 t IVP_Actuator_Torque::set_max_rotation_speed(double)
000d5460 t IVP_Actuator_Torque::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000d6cc0 t IVP_Actuator_Torque::IVP_Actuator_Torque(IVP_Environment*, IVP_Template_Torque*)
000d6cc0 t IVP_Actuator_Torque::IVP_Actuator_Torque(IVP_Environment*, IVP_Template_Torque*)
000d67c0 t IVP_Actuator_Torque::~IVP_Actuator_Torque()
000d6760 t IVP_Actuator_Torque::~IVP_Actuator_Torque()
000d6760 t IVP_Actuator_Torque::~IVP_Actuator_Torque()
00108dc0 t IVP_Anomaly_Manager::inter_penetration(IVP_Mindist*, IVP_Real_Object*, IVP_Real_Object*, double)
00108a30 t IVP_Anomaly_Manager::max_velocity_exceeded(IVP_Anomaly_Limits*, IVP_Core*, IVP_U_Float_Point*)
001088a0 t IVP_Anomaly_Manager::get_push_speed_penetration(IVP_Real_Object*, IVP_Real_Object*)
00108a10 t IVP_Anomaly_Manager::environment_will_be_deleted(IVP_Environment*)
00108900 t IVP_Anomaly_Manager::max_angular_velocity_exceeded(IVP_Anomaly_Limits*, IVP_Core*, IVP_U_Float_Point*)
00108890 t IVP_Anomaly_Manager::max_collision_checks_exceeded(int)
00108b30 t IVP_Anomaly_Manager::solve_inter_penetration_simple(IVP_Real_Object*, IVP_Real_Object*, double)
00108880 t IVP_Anomaly_Manager::max_contacts_exceeded_check_freezing(IVP_Core**, int)
00108870 t IVP_Anomaly_Manager::max_collisions_exceeded_check_freezing(IVP_Anomaly_Limits*, IVP_Core*)
00108b10 t IVP_Anomaly_Manager::IVP_Anomaly_Manager(IVP_BOOL)
00108b10 t IVP_Anomaly_Manager::IVP_Anomaly_Manager(IVP_BOOL)
001089b0 t IVP_Anomaly_Manager::~IVP_Anomaly_Manager()
00108860 t IVP_Anomaly_Manager::~IVP_Anomaly_Manager()
00108860 t IVP_Anomaly_Manager::~IVP_Anomaly_Manager()
000dde30 t IVP_Buoyancy_Output::IVP_Buoyancy_Output()
000dde30 t IVP_Buoyancy_Output::IVP_Buoyancy_Output()
0012b770 t IVP_Buoyancy_Solver::compute_forces(IVP_U_Float_Point const*, IVP_U_Float_Hesse const*, IVP_Real_Object*)
0012a610 t IVP_Buoyancy_Solver::compute_values_for_one_ball(IVP_Real_Object const*, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*)
0012b520 t IVP_Buoyancy_Solver::compute_values_for_one_ledge(IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*)
0012b580 t IVP_Buoyancy_Solver::compute_values_for_one_polygon(IVP_Real_Object*, IVP_U_Float_Hesse const*)
0012a8b0 t IVP_Buoyancy_Solver::compute_values_for_one_triangle(IVP_Real_Object*, IVP_Compact_Triangle const*, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*, IVP_Compact_Ledge const*)
00127180 t IVP_Buoyancy_Solver::compute_disection_points_with_ball(IVP_U_Float_Hesse const*, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*, float const&, IVP_U_Float_Point*, IVP_U_Float_Point*)
00126fc0 t IVP_Buoyancy_Solver::compute_buoyancy_values_for_one_ball(int const&, float const&, float const&, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*)
00127500 t IVP_Buoyancy_Solver::compute_dampening_values_for_one_ball(int const&, float const&, float const&, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Hesse const*, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
0012b8d0 t IVP_Buoyancy_Solver::compute_rotation_and_translation_values_for_one_triangle(IVP_Real_Object*, IVP_Compact_Triangle const*, IVP_U_Float_Point const**, IVP_Compact_Ledge const*, float const*, int const&, int const&, int const&)
00126ef0 t IVP_Buoyancy_Solver::IVP_Buoyancy_Solver(IVP_Core*, IVP_Controller_Buoyancy*, IVP_Template_Buoyancy const*, IVP_U_Float_Point const*)
00126ef0 t IVP_Buoyancy_Solver::IVP_Buoyancy_Solver(IVP_Core*, IVP_Controller_Buoyancy*, IVP_Template_Buoyancy const*, IVP_U_Float_Point const*)
00102b10 t IVP_Cluster_Manager::add_object(IVP_Real_Object*)
00102b20 t IVP_Cluster_Manager::remove_object(IVP_Real_Object*)
001016e0 t IVP_Cluster_Manager::get_root_cluster()
001025f0 t IVP_Cluster_Manager::add_listener_object(IVP_Real_Object*, IVP_Listener_Object*)
00102710 t IVP_Cluster_Manager::add_listener_collision(IVP_Real_Object*, IVP_Listener_Collision*)
00102830 t IVP_Cluster_Manager::remove_listener_object(IVP_Real_Object*, IVP_Listener_Object*)
001018b0 t IVP_Cluster_Manager::check_for_unused_objects(IVP_Universe_Manager*)
00101cb0 t IVP_Cluster_Manager::fire_event_object_frozen(IVP_Event_Object*)
00102320 t IVP_Cluster_Manager::fire_event_pre_collision(IVP_Real_Object*, IVP_Event_Collision*)
00101b70 t IVP_Cluster_Manager::fire_event_object_created(IVP_Event_Object*)
00101df0 t IVP_Cluster_Manager::fire_event_object_deleted(IVP_Event_Object*)
00101a30 t IVP_Cluster_Manager::fire_event_object_revived(IVP_Event_Object*)
001020a0 t IVP_Cluster_Manager::fire_event_post_collision(IVP_Real_Object*, IVP_Event_Collision*)
001029a0 t IVP_Cluster_Manager::remove_listener_collision(IVP_Real_Object*, IVP_Listener_Collision*)
001021e0 t IVP_Cluster_Manager::fire_event_friction_created(IVP_Real_Object*, IVP_Event_Friction*)
00102460 t IVP_Cluster_Manager::fire_event_friction_deleted(IVP_Real_Object*, IVP_Event_Friction*)
00101f60 t IVP_Cluster_Manager::fire_event_collision_object_deleted(IVP_Real_Object*)
00101820 t IVP_Cluster_Manager::get_next_real_object_in_cluster_tree(IVP_Object*)
001016f0 t IVP_Cluster_Manager::IVP_Cluster_Manager(IVP_Environment*)
001016f0 t IVP_Cluster_Manager::IVP_Cluster_Manager(IVP_Environment*)
001025a0 t IVP_Cluster_Manager::~IVP_Cluster_Manager()
001025a0 t IVP_Cluster_Manager::~IVP_Cluster_Manager()
0010b1a0 t IVP_Compact_Surface::byte_swap_all(IVP_BOOL, int)
0010b0f0 t IVP_Compact_Surface::byte_swap()
00107fc0 t IVP_Event_Manager_D::simulate_time_events(IVP_Time_Manager*, IVP_Environment*, IVP_Time)
001087c0 t IVP_Event_Manager_D::~IVP_Event_Manager_D()
00108780 t IVP_Event_Manager_D::~IVP_Event_Manager_D()
00108780 t IVP_Event_Manager_D::~IVP_Event_Manager_D()
000f1550 t IVP_Friction_Solver::complex_failed(IVP_Friction_System*)
000f19e0 t IVP_Friction_Solver::calc_solver_PSI(IVP_Friction_System*, int*)
000f0710 t IVP_Friction_Solver::do_penalty_step(float*, float*, float, float)
000ecbe0 t IVP_Friction_Solver::ease_two_mindists(IVP_Contact_Point*, IVP_Contact_Point*, IVP_U_Float_Point*, IVP_U_Float_Point*, double)
000f0030 t IVP_Friction_Solver::factor_result_vec()
000ed030 t IVP_Friction_Solver::ease_friction_pair(IVP_Friction_Core_Pair*, IVP_U_Memory*)
000f1270 t IVP_Friction_Solver::do_inactives_pushes(IVP_Friction_System*)
000f1580 t IVP_Friction_Solver::do_resulting_pushes(IVP_Friction_System*)
000f18f0 t IVP_Friction_Solver::setup_coords_mindists(IVP_Friction_System*)
000ecbd0 t IVP_Friction_Solver::ease_test_two_mindists(IVP_Contact_Point*, IVP_Contact_Point*, IVP_U_Float_Point*)
000f0070 t IVP_Friction_Solver::normize_constraint_equ()
000f1540 t IVP_Friction_Solver::debug_distance_after_push(int)
000f2550 t IVP_Friction_Solver::solve_linear_equation_and_push(IVP_Friction_System*, int*, int, IVP_U_Memory*)
000efef0 t IVP_Friction_Solver::test_gauss_solution_suggestion(double*, int*, int, IVP_U_Memory*)
000ed5a0 t IVP_Friction_Solver::IVP_Friction_Solver(IVP_Friction_System*, IVP_Event_Sim const*)
000ed5a0 t IVP_Friction_Solver::IVP_Friction_Solver(IVP_Friction_System*, IVP_Event_Sim const*)
000ee4f0 t IVP_Friction_System::reset_time(IVP_Time)
000edd20 t IVP_Friction_System::add_fr_pair(IVP_Friction_Core_Pair*)
000edd80 t IVP_Friction_System::del_fr_pair(IVP_Friction_Core_Pair*)
000ee4e0 t IVP_Friction_System::print_all_dists()
000edea0 t IVP_Friction_System::union_find_fr_sys()
001033a0 t IVP_Friction_System::add_core_to_system(IVP_Core*)
00103370 t IVP_Friction_System::add_dist_to_system(IVP_Contact_Point*)
000ef5c0 t IVP_Friction_System::debug_fs_out_ascii()
000f2810 t IVP_Friction_System::do_friction_system(IVP_Event_Sim const*)
000ef630 t IVP_Friction_System::find_pair_of_cores(IVP_Core*, IVP_Core*)
000eda00 t IVP_Friction_System::apply_real_friction(IVP_Event_Sim const*)
00103930 t IVP_Friction_System::get_controller_name()
000f24c0 t IVP_Friction_System::get_max_energy_gain()
000f2470 t IVP_Friction_System::undo_complex_pushes()
000ec8a0 t IVP_Friction_System::calc_friction_forces(IVP_Event_Sim const*)
000fa7d0 t IVP_Friction_System::debug_clean_tmp_info()
000ed250 t IVP_Friction_System::ease_friction_forces()
000ef940 t IVP_Friction_System::get_controlled_cores(IVP_U_Vector<IVP_Core>*)
000f2150 t IVP_Friction_System::ivp_debug_fs_pointers()
000edff0 t IVP_Friction_System::split_friction_system(IVP_Core*)
000f2420 t IVP_Friction_System::confirm_complex_pushes()
000ef5d0 t IVP_Friction_System::core_is_found_in_pairs(IVP_Core*)
000f2230 t IVP_Friction_System::core_is_terminal_in_fs(IVP_Core*)
000ede10 t IVP_Friction_System::get_pair_info_for_objs(IVP_Core*, IVP_Core*)
000f2100 t IVP_Friction_System::exchange_friction_dists(IVP_Contact_Point*, IVP_Contact_Point*)
001ad1a8 b IVP_Friction_System::friction_global_counter
000eda30 t IVP_Friction_System::fusion_friction_systems(IVP_Friction_System*)
00103940 t IVP_Friction_System::get_controller_priority()
00103450 t IVP_Friction_System::remove_core_from_system(IVP_Core*)
00103280 t IVP_Friction_System::remove_dist_from_system(IVP_Contact_Point*)
000ed6c0 t IVP_Friction_System::delete_friction_distance(IVP_Contact_Point*)
000efab0 t IVP_Friction_System::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000f18e0 t IVP_Friction_System::test_hole_fr_system_data()
000f0280 t IVP_Friction_System::do_pushes_distance_keepers(IVP_Event_Sim const*)
000f2330 t IVP_Friction_System::kinetic_energy_of_hole_frs()
001032c0 t IVP_Friction_System::dist_added_update_pair_info(IVP_Contact_Point*)
000f2160 t IVP_Friction_System::bubble_sort_dists_importance()
000ee620 t IVP_Friction_System::clear_integrated_anti_energy()
001030e0 t IVP_Friction_System::fs_recalc_all_contact_points()
000f2050 t IVP_Friction_System::reorder_mindists_for_complex()
001031b0 t IVP_Friction_System::dist_removed_update_pair_info(IVP_Contact_Point*)
000ede70 t IVP_Friction_System::debug_check_system_consistency()
000ef960 t IVP_Friction_System::get_associated_controlled_cores()
000f0250 t IVP_Friction_System::get_num_supposed_active_frdists()
000ef950 t IVP_Friction_System::get_minimum_simulation_frequency()
000f22a0 t IVP_Friction_System::static_fr_oversized_matrix_panic()
000efc10 t IVP_Friction_System::core_is_going_to_be_deleted_event(IVP_Core*)
000ef000 t IVP_Friction_System::remove_energy_gained_by_real_friction()
00103060 t IVP_Friction_System::IVP_Friction_System(IVP_Environment*)
00103060 t IVP_Friction_System::IVP_Friction_System(IVP_Environment*)
00103820 t IVP_Friction_System::~IVP_Friction_System()
00103730 t IVP_Friction_System::~IVP_Friction_System()
00103730 t IVP_Friction_System::~IVP_Friction_System()
000f5380 t IVP_Incr_L_U_Matrix::normize_row(int)
000f5e00 t IVP_Incr_L_U_Matrix::add_neg_col_L(int, int, double)
000f6820 t IVP_Incr_L_U_Matrix::add_neg_row_L(int, int, double)
000f7660 t IVP_Incr_L_U_Matrix::debug_print_a()
000f6940 t IVP_Incr_L_U_Matrix::decrement_l_u(int)
000f6070 t IVP_Incr_L_U_Matrix::increment_l_u()
000f52a0 t IVP_Incr_L_U_Matrix::normize_row_L(int)
000f6420 t IVP_Incr_L_U_Matrix::solve_lin_equ()
000f5ad0 t IVP_Incr_L_U_Matrix::subtract_row_L(int, int, double)
000f75a0 t IVP_Incr_L_U_Matrix::debug_print_l_u()
000f5f20 t IVP_Incr_L_U_Matrix::mult_vec_with_L()
000f55c0 t IVP_Incr_L_U_Matrix::pivot_search_l_u(int)
000f62b0 t IVP_Incr_L_U_Matrix::solve_vec_with_U()
000f5510 t IVP_Incr_L_U_Matrix::exchange_rows_l_u(int, int)
000f5e60 t IVP_Incr_L_U_Matrix::exchange_columns_L(int, int)
000f5ec0 t IVP_Incr_L_U_Matrix::exchange_columns_U(int, int)
000f5890 t IVP_Incr_L_U_Matrix::add_neg_row_to_row_l_u(int, int, double)
000f5650 t IVP_Incr_L_U_Matrix::add_neg_row_upwards_l_u(int, int, double)
000f5c00 t IVP_Incr_L_U_Matrix::l_u_decomposition_with_pivoting()
001039e0 t IVP_Listener_Object::~IVP_Listener_Object()
00103840 t IVP_Listener_Object::~IVP_Listener_Object()
00103840 t IVP_Listener_Object::~IVP_Listener_Object()
0010a9b0 t IVP_Material_Simple::get_damping()
0010a9c0 t IVP_Material_Simple::get_adhesion()
0010a9a0 t IVP_Material_Simple::get_elasticity()
0010a990 t IVP_Material_Simple::get_friction_factor()
0010ab60 t IVP_Material_Simple::get_second_friction_factor()
0010a9d0 t IVP_Material_Simple::get_name()
0010ab20 t IVP_Material_Simple::IVP_Material_Simple(double, double)
0010aae0 t IVP_Material_Simple::IVP_Material_Simple()
0010ab20 t IVP_Material_Simple::IVP_Material_Simple(double, double)
0010aae0 t IVP_Material_Simple::IVP_Material_Simple()
0010a9e0 t IVP_Material_Simple::~IVP_Material_Simple()
0010a980 t IVP_Material_Simple::~IVP_Material_Simple()
0010a980 t IVP_Material_Simple::~IVP_Material_Simple()
0011c970 t IVP_Mindist_Manager::print_mindists()
0011cb30 t IVP_Mindist_Manager::recheck_ov_element(IVP_Real_Object*)
0011dac0 t IVP_Mindist_Manager::insert_hull_mindist(IVP_Mindist*, float)
0011d970 t IVP_Mindist_Manager::insert_hull_mindist(IVP_Mindist*, float, float)
0011d930 t IVP_Mindist_Manager::remove_hull_mindist(IVP_Mindist*)
0011c9d0 t IVP_Mindist_Manager::insert_exact_mindist(IVP_Mindist*)
0011e530 t IVP_Mindist_Manager::mindist_left_phantom(IVP_Mindist*)
0011fb60 t IVP_Mindist_Manager::recalc_exact_mindist(IVP_Mindist*)
0011d730 t IVP_Mindist_Manager::remove_exact_mindist(IVP_Mindist*)
0011ef10 t IVP_Mindist_Manager::create_exact_mindists(IVP_Real_Object*, IVP_Real_Object*, double, IVP_U_FVector<IVP_Collision>*, IVP_Compact_Ledge const*, IVP_Compact_Ledge const*, IVP_Compact_Ledge const*, IVP_Compact_Ledge const*, IVP_Collision_Delegator*)
0011cab0 t IVP_Mindist_Manager::insert_invalid_mindist(IVP_Mindist*)
0011d8a0 t IVP_Mindist_Manager::remove_invalid_mindist(IVP_Mindist*)
0011e4d0 t IVP_Mindist_Manager::mindist_entered_phantom(IVP_Mindist*)
0011e3e0 t IVP_Mindist_Manager::insert_lazy_hull_mindist(IVP_Mindist*, float)
0011e340 t IVP_Mindist_Manager::insert_lazy_hull_mindist(IVP_Mindist*, float, float)
0011fc70 t IVP_Mindist_Manager::recalc_all_exact_mindists()
0011fcb0 t IVP_Mindist_Manager::recalc_all_exact_wheel_mindist()
0011e200 t IVP_Mindist_Manager::insert_and_recalc_exact_mindist(IVP_Mindist*)
0011e1c0 t IVP_Mindist_Manager::recalc_all_exact_mindists_events()
0011e710 t IVP_Mindist_Manager::insert_and_recalc_phantom_mindist(IVP_Mindist*)
0011d440 t IVP_Mindist_Manager::enable_collision_detection_for_object(IVP_Real_Object*)
0011fa20 t IVP_Mindist_Manager::IVP_Mindist_Manager(IVP_Environment*)
0011fa20 t IVP_Mindist_Manager::IVP_Mindist_Manager(IVP_Environment*)
0011fab0 t IVP_Mindist_Manager::~IVP_Mindist_Manager()
0011fab0 t IVP_Mindist_Manager::~IVP_Mindist_Manager()
0011b410 t IVP_OV_Tree_Manager::expand_tree(IVP_OV_Node const*)
0011bce0 t IVP_OV_Tree_Manager::cleanup_node(IVP_OV_Node*)
0011b1c0 t IVP_OV_Tree_Manager::connect_boxes(IVP_OV_Node*, IVP_OV_Node*)
0011ac60 t IVP_OV_Tree_Manager::calc_optimal_box(IVP_OV_Element const*, double, double)
0011ba50 t IVP_OV_Tree_Manager::insert_ov_element(IVP_OV_Element*, double, double, IVP_U_Vector<IVP_OV_Element>*)
0011bd50 t IVP_OV_Tree_Manager::remove_ov_element(IVP_OV_Element*)
0011bee0 t IVP_OV_Tree_Manager::get_luf_coordinates_ws(IVP_OV_Node const*, IVP_U_Float_Point*, float*)
0011bf60 t IVP_OV_Tree_Manager::get_center_coordinates_ws(IVP_OV_Node const*, IVP_U_Float_Point*, float*)
0011b7c0 t IVP_OV_Tree_Manager::collect_collision_partners(IVP_OV_Element const*, IVP_OV_Node const*, IVP_OV_Node const*)
0011b670 t IVP_OV_Tree_Manager::collect_subbox_collision_partners(IVP_OV_Element const*, IVP_OV_Node const*)
001af640 b IVP_OV_Tree_Manager::powerlist
0011aa80 t IVP_OV_Tree_Manager::IVP_OV_Tree_Manager()
0011aa80 t IVP_OV_Tree_Manager::IVP_OV_Tree_Manager()
0011ab60 t IVP_OV_Tree_Manager::~IVP_OV_Tree_Manager()
0011ab60 t IVP_OV_Tree_Manager::~IVP_OV_Tree_Manager()
00105950 t IVP_Simulation_Unit::reset_time(IVP_Time)
00103eb0 t IVP_Simulation_Unit::clean_sim_unit()
00104ae0 t IVP_Simulation_Unit::split_sim_unit(IVP_Core*)
001043e0 t IVP_Simulation_Unit::add_sim_unit_core(IVP_Core*)
001044b0 t IVP_Simulation_Unit::rem_sim_unit_core(IVP_Core*)
00104530 t IVP_Simulation_Unit::sim_unit_core_exists(IVP_Core*)
00104190 t IVP_Simulation_Unit::sim_unit_remove_core(IVP_Core*)
00103f70 t IVP_Simulation_Unit::get_pos_of_controller(IVP_Controller*)
001048c0 t IVP_Simulation_Unit::add_controller_of_core(IVP_Core*, IVP_Controller*)
00105350 t IVP_Simulation_Unit::do_sim_unit_union_find()
00105b00 t IVP_Simulation_Unit::get_unit_movement_type()
00104ca0 t IVP_Simulation_Unit::perform_test_and_split()
00105b10 t IVP_Simulation_Unit::set_unit_movement_type(IVP_Movement_Type)
00103d10 t IVP_Simulation_Unit::add_controller_unit_sim(IVP_Controller*)
001040b0 t IVP_Simulation_Unit::rem_sim_unit_controller(IVP_Controller*)
001049c0 t IVP_Simulation_Unit::sim_unit_calc_redundants()
00103d80 t IVP_Simulation_Unit::sim_unit_union_find_test()
00104aa0 t IVP_Simulation_Unit::fusion_simulation_unities(IVP_Simulation_Unit*)
001045a0 t IVP_Simulation_Unit::remove_controller_of_core(IVP_Core*, IVP_Controller*)
001047f0 t IVP_Simulation_Unit::sim_unit_sort_controllers()
001054a0 t IVP_Simulation_Unit::simulate_single_sim_unit_psi(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00105380 t IVP_Simulation_Unit::sim_unit_calc_movement_state(IVP_Environment*)
00104420 t IVP_Simulation_Unit::throw_cores_into_my_sim_unit(IVP_Simulation_Unit*)
00105b30 t IVP_Simulation_Unit::sim_unit_ensure_in_simulation()
00104d00 t IVP_Simulation_Unit::sim_unit_exchange_controllers(int, int)
00105030 t IVP_Simulation_Unit::sim_unit_ensure_cores_movement()
00104e50 t IVP_Simulation_Unit::sim_unit_revive_for_simulation(IVP_Environment*)
00103c30 t IVP_Simulation_Unit::controller_is_known_to_sim_unit(IVP_Controller*)
00103c90 t IVP_Simulation_Unit::add_controlled_core_for_controller(IVP_Controller*, IVP_Core*)
00105b20 t IVP_Simulation_Unit::prefetch0_init_moving_core_for_psi(IVP_Core*)
00105300 t IVP_Simulation_Unit::sim_unit_clear_movement_check_values()
00104070 t IVP_Simulation_Unit::IVP_Simulation_Unit()
00104070 t IVP_Simulation_Unit::IVP_Simulation_Unit()
00103fb0 t IVP_Simulation_Unit::~IVP_Simulation_Unit()
00103fb0 t IVP_Simulation_Unit::~IVP_Simulation_Unit()
00098570 t IVP_SurMan_PS_Plane::get_area_size()
000986a0 t IVP_SurMan_PS_Plane::get_len_of_all_edges()
000d7cb0 t IVP_Template_Anchor::get_object()
000d7cc0 t IVP_Template_Anchor::get_anchor_point_ws()
000d5c80 t IVP_Template_Anchor::set_anchor_position_cs(IVP_Real_Object*, double, double, double)
000d5c10 t IVP_Template_Anchor::set_anchor_position_cs(IVP_Real_Object*, IVP_U_Float_Point const*)
000d5b60 t IVP_Template_Anchor::set_anchor_position_os(IVP_Real_Object*, double, double, double)
000d5ad0 t IVP_Template_Anchor::set_anchor_position_os(IVP_Real_Object*, IVP_U_Float_Point const*)
000d5aa0 t IVP_Template_Anchor::set_anchor_position_ws(IVP_Real_Object*, double, double, double)
000d5a60 t IVP_Template_Anchor::set_anchor_position_ws(IVP_Real_Object*, IVP_U_Point const*)
0010afc0 t IVP_Template_Object::set_name(char const*)
0010af80 t IVP_Template_Object::IVP_Template_Object()
0010af80 t IVP_Template_Object::IVP_Template_Object()
0010af90 t IVP_Template_Object::~IVP_Template_Object()
0010af90 t IVP_Template_Object::~IVP_Template_Object()
000d8280 t IVP_Template_Spring::IVP_Template_Spring()
000d8280 t IVP_Template_Spring::IVP_Template_Spring()
000d5860 t IVP_Template_Torque::IVP_Template_Torque()
000d5860 t IVP_Template_Torque::IVP_Template_Torque()
0010c720 t IVP_U_Active_Square::active_float_changed(IVP_U_Active_Float*)
0010bb50 t IVP_U_Active_Square::print()
0010d710 t IVP_U_Active_Square::IVP_U_Active_Square(char const*, IVP_U_Active_Float*, double, double, double)
0010d710 t IVP_U_Active_Square::IVP_U_Active_Square(char const*, IVP_U_Active_Float*, double, double, double)
0010cde0 t IVP_U_Active_Square::~IVP_U_Active_Square()
0010cd90 t IVP_U_Active_Square::~IVP_U_Active_Square()
0010cd90 t IVP_U_Active_Square::~IVP_U_Active_Square()
0010b7f0 t IVP_U_Active_Switch::active_int_changed(IVP_U_Active_Int*)
0010c490 t IVP_U_Active_Switch::active_float_changed(IVP_U_Active_Float*)
0010b8d0 t IVP_U_Active_Switch::print()
0010dbe0 t IVP_U_Active_Switch::IVP_U_Active_Switch(char const*, IVP_U_Active_Int*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0010dbe0 t IVP_U_Active_Switch::IVP_U_Active_Switch(char const*, IVP_U_Active_Int*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0010cfd0 t IVP_U_Active_Switch::~IVP_U_Active_Switch()
0010cf50 t IVP_U_Active_Switch::~IVP_U_Active_Switch()
0010cf50 t IVP_U_Active_Switch::~IVP_U_Active_Switch()
000360e0 t physcollideheader_t::GetBaseMap()
001a3260 d physcollideheader_t::m_DataMap
000341e0 t CAirboatFrictionData::GetContactPoint(Vector&)
00034200 t CAirboatFrictionData::GetContactSpeed(Vector&)
000341c0 t CAirboatFrictionData::GetSurfaceNormal(Vector&)
00030620 t CPhysicsCollisionSet::ShouldCollide(int, int)
00030590 t CPhysicsCollisionSet::EnableCollisions(int, int)
000305d0 t CPhysicsCollisionSet::DisableCollisions(int, int)
00041690 t CPhysicsFrictionData::GetContactPoint(Vector&)
00040960 t CPhysicsFrictionData::GetContactSpeed(Vector&)
000415e0 t CPhysicsFrictionData::GetSurfaceNormal(Vector&)
0004a770 t CPhysicsSurfaceProps::GetIVPManager()
00048e60 t CPhysicsSurfaceProps::GetIVPMaterial(int)
00048e70 t CPhysicsSurfaceProps::GetSurfaceData(int)
00049910 t CPhysicsSurfaceProps::ParseSurfaceData(char const*, char const*)
00049850 t CPhysicsSurfaceProps::AddFileToDatabase(char const*)
00048e10 t CPhysicsSurfaceProps::GetInternalSurface(int)
00049200 t CPhysicsSurfaceProps::CopyPhysicsProperties(CSurface*, int)
00048b60 t CPhysicsSurfaceProps::SetWorldMaterialIndexTable(int*, int)
000495e0 t CPhysicsSurfaceProps::CPhysicsSurfaceProps()
000495e0 t CPhysicsSurfaceProps::CPhysicsSurfaceProps()
000495c0 t CPhysicsSurfaceProps::~CPhysicsSurfaceProps()
00049460 t CPhysicsSurfaceProps::~CPhysicsSurfaceProps()
00049460 t CPhysicsSurfaceProps::~CPhysicsSurfaceProps()
00092340 t hk_Dense_Matrix_Util::invert_2x2(hk_Dense_Matrix const&, hk_Dense_Matrix&, float)
00091ca0 t hk_Dense_Matrix_Util::invert_4x4(hk_Fixed_Dense_Matrix<4>&, float)
000916e0 t hk_Dense_Matrix_Util::invert_5x5(hk_Fixed_Dense_Matrix<5>&, float)
00091050 t hk_Dense_Matrix_Util::invert_6x6(hk_Fixed_Dense_Matrix<6>&, float)
00092160 t hk_Dense_Matrix_Util::invert_3x3_symmetric(hk_Dense_Matrix&, float)
00090fc0 t hk_Dense_Matrix_Util::mult(hk_Dense_Matrix const&, float const*, float*)
00090f00 t hk_Dense_Matrix_Util::mult(hk_Dense_Matrix const&, hk_Dense_Vector const&, hk_Dense_Vector&)
000926f0 t hk_Dense_Matrix_Util::print(hk_Dense_Matrix const&)
000923e0 t hk_Dense_Matrix_Util::solve(hk_Dense_Matrix&, hk_Dense_Vector&, float)
00088450 t hk_Pulley_Constraint::set_length(float)
00088460 t hk_Pulley_Constraint::set_gearing(float)
00088300 t hk_Pulley_Constraint::init_constraint(void const*)
00088060 t hk_Pulley_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
000884a0 t hk_Pulley_Constraint::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
00088500 t hk_Pulley_Constraint::get_constraint_dof()
00088310 t hk_Pulley_Constraint::write_to_blueprint(hk_Pulley_BP*)
000884f0 t hk_Pulley_Constraint::get_constraint_type()
00088050 t hk_Pulley_Constraint::get_vmq_storage_size()
00088470 t hk_Pulley_Constraint::set_worldspace_point(int, hk_Vector3 const&)
00088280 t hk_Pulley_Constraint::init_pulley_constraint(hk_Pulley_BP const*)
00088560 t hk_Pulley_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
00088390 t hk_Pulley_Constraint::hk_Pulley_Constraint(hk_Environment*, hk_Pulley_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
000883f0 t hk_Pulley_Constraint::hk_Pulley_Constraint(hk_Local_Constraint_System*, hk_Pulley_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00088390 t hk_Pulley_Constraint::hk_Pulley_Constraint(hk_Environment*, hk_Pulley_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
000883f0 t hk_Pulley_Constraint::hk_Pulley_Constraint(hk_Local_Constraint_System*, hk_Pulley_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00088530 t hk_Pulley_Constraint::~hk_Pulley_Constraint()
00088510 t hk_Pulley_Constraint::~hk_Pulley_Constraint()
00088510 t hk_Pulley_Constraint::~hk_Pulley_Constraint()
0004a830 t IPhysicsSurfaceProps::~IPhysicsSurfaceProps()
0004a6c0 t IPhysicsSurfaceProps::~IPhysicsSurfaceProps()
0004a6c0 t IPhysicsSurfaceProps::~IPhysicsSurfaceProps()
00120630 t IVP_3D_Solver_PF_NPF::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
00120230 t IVP_3D_Solver_S_VALS::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
000d63c0 t IVP_Actuator_Rot_Mot::set_max_torque(double)
000d7c70 t IVP_Actuator_Rot_Mot::get_controller_name()
000d6340 t IVP_Actuator_Rot_Mot::set_max_rotation_speed(double)
000d5590 t IVP_Actuator_Rot_Mot::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000d7d60 t IVP_Actuator_Rot_Mot::get_power()
000d6380 t IVP_Actuator_Rot_Mot::set_power(double)
000d6ea0 t IVP_Actuator_Rot_Mot::IVP_Actuator_Rot_Mot(IVP_Environment*, IVP_Template_Rot_Mot*)
000d6ea0 t IVP_Actuator_Rot_Mot::IVP_Actuator_Rot_Mot(IVP_Environment*, IVP_Template_Rot_Mot*)
000d68e0 t IVP_Actuator_Rot_Mot::~IVP_Actuator_Rot_Mot()
000d6880 t IVP_Actuator_Rot_Mot::~IVP_Actuator_Rot_Mot()
000d6880 t IVP_Actuator_Rot_Mot::~IVP_Actuator_Rot_Mot()
000d0330 t IVP_Collision_Filter::~IVP_Collision_Filter()
000d01d0 t IVP_Collision_Filter::~IVP_Collision_Filter()
000d01d0 t IVP_Collision_Filter::~IVP_Collision_Filter()
000d0ef0 t IVP_Compact_Triangle::get_next_tri()
000d0dc0 t IVP_Compact_Triangle::set_tri_index(int)
000d0eb0 t IVP_Compact_Triangle::get_first_edge()
000d0e20 t IVP_Compact_Triangle::set_is_virtual(unsigned int)
000d0de0 t IVP_Compact_Triangle::set_pierce_index(int)
000d0e00 t IVP_Compact_Triangle::set_material_index(int)
000d0aa0 t IVP_Compact_Triangle::byte_swap()
000d0a70 t IVP_Compact_Triangle::IVP_Compact_Triangle()
000d0a70 t IVP_Compact_Triangle::IVP_Compact_Triangle()
0012fb90 t IVP_Constraint_Local::get_objectA()
0012fb80 t IVP_Constraint_Local::get_objectR()
0012f470 t IVP_Constraint_Local::fix_rotation_axis(IVP_COORDINATE_INDEX)
0012fba0 t IVP_Constraint_Local::constraint_changed()
0012f420 t IVP_Constraint_Local::free_rotation_axis(IVP_COORDINATE_INDEX)
0012f3b0 t IVP_Constraint_Local::limit_rotation_axis(IVP_COORDINATE_INDEX, float, float)
0012f1b0 t IVP_Constraint_Local::fix_translation_axis(IVP_COORDINATE_INDEX)
0012f160 t IVP_Constraint_Local::free_translation_axis(IVP_COORDINATE_INDEX)
0012f200 t IVP_Constraint_Local::sort_rotation_mapping()
0012f0f0 t IVP_Constraint_Local::limit_translation_axis(IVP_COORDINATE_INDEX, float, float)
0012cab0 t IVP_Constraint_Local::change_fixing_point_Ros(IVP_U_Point const*)
0012c6d0 t IVP_Constraint_Local::change_rotation_axes_Ros(IVP_U_Matrix3 const*)
0012cc70 t IVP_Constraint_Local::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
0012efb0 t IVP_Constraint_Local::sort_translation_mapping()
0012c490 t IVP_Constraint_Local::change_max_rotation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
0012c8a0 t IVP_Constraint_Local::change_translation_axes_Ros(IVP_U_Matrix3 const*)
0012c540 t IVP_Constraint_Local::change_max_translation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
0012c9c0 t IVP_Constraint_Local::change_target_fixing_point_Ros(IVP_U_Point const*)
0012c3c0 t IVP_Constraint_Local::change_Aos_to_relaxe_constraint()
0012c2f0 t IVP_Constraint_Local::change_Ros_to_relaxe_constraint()
0012c5f0 t IVP_Constraint_Local::change_target_rotation_axes_Ros(IVP_U_Matrix3 const*)
0012c2d0 t IVP_Constraint_Local::core_is_going_to_be_deleted_event(IVP_Core*)
0012c810 t IVP_Constraint_Local::change_target_translation_axes_Ros(IVP_U_Matrix3 const*)
0012f4c0 t IVP_Constraint_Local::init(IVP_Template_Constraint const&)
0012faf0 t IVP_Constraint_Local::IVP_Constraint_Local(IVP_Template_Constraint const&)
0012ef30 t IVP_Constraint_Local::IVP_Constraint_Local()
0012faf0 t IVP_Constraint_Local::IVP_Constraint_Local(IVP_Template_Constraint const&)
0012ef30 t IVP_Constraint_Local::IVP_Constraint_Local()
0012cc50 t IVP_Constraint_Local::~IVP_Constraint_Local()
0012cbe0 t IVP_Constraint_Local::~IVP_Constraint_Local()
0012cbe0 t IVP_Constraint_Local::~IVP_Constraint_Local()
0012fbf0 t IVP_Controller_Golem::reset_time(IVP_Time)
00130f70 t IVP_Controller_Golem::set_prime_position(IVP_U_Point const*, IVP_U_Float_Point const*, IVP_Time const&)
00130ff0 t IVP_Controller_Golem::set_prime_orientation(IVP_U_Quat const*, IVP_Time const&, IVP_U_Quat const*, float)
001301a0 t IVP_Controller_Golem::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00130f40 t IVP_Controller_Golem::beam_object_to_target_position(IVP_Event_Sim*)
00130e50 t IVP_Controller_Golem::IVP_Controller_Golem(IVP_Real_Object*, IVP_Template_Controller_Golem const*)
00130e50 t IVP_Controller_Golem::IVP_Controller_Golem(IVP_Real_Object*, IVP_Template_Controller_Golem const*)
00130150 t IVP_Controller_Golem::~IVP_Controller_Golem()
00130130 t IVP_Controller_Golem::~IVP_Controller_Golem()
00130130 t IVP_Controller_Golem::~IVP_Controller_Golem()
00100be0 t IVP_Controller_VHash::controller_to_index(IVP_Controller*)
000fe9d0 t IVP_Controller_VHash::~IVP_Controller_VHash()
000fe9b0 t IVP_Controller_VHash::~IVP_Controller_VHash()
000fe9b0 t IVP_Controller_VHash::~IVP_Controller_VHash()
000e74c0 t IVP_Core_Fast_Static::get_inv_masses()
000e77b0 t IVP_Core_Fast_Static::~IVP_Core_Fast_Static()
000e77b0 t IVP_Core_Fast_Static::~IVP_Core_Fast_Static()
000fe890 t IVP_Friction_Manager::generate_contact_point(IVP_Mindist*, IVP_BOOL*)
000fe7e0 t IVP_Friction_Manager::get_associated_contact_point(IVP_Mindist*)
000fe850 t IVP_Friction_Manager::delete_all_contact_points_of_object(IVP_Real_Object*)
000b73f0 t IVP_Intrusion_Status::p()
000b7380 t IVP_Intrusion_Status::print(char const*)
000b7410 t IVP_Intrusion_Status::IVP_Intrusion_Status()
000b7410 t IVP_Intrusion_Status::IVP_Intrusion_Status()
000b7430 t IVP_Intrusion_Status::~IVP_Intrusion_Status()
000b7430 t IVP_Intrusion_Status::~IVP_Intrusion_Status()
000e37d0 t IVP_Listener_Phantom::IVP_Listener_Phantom()
000e37d0 t IVP_Listener_Phantom::IVP_Listener_Phantom()
0010a900 t IVP_Material_Manager::get_damping(IVP_Contact_Situation*)
0010a940 t IVP_Material_Manager::get_adhesion(IVP_Contact_Situation*)
0010a8c0 t IVP_Material_Manager::get_elasticity(IVP_Contact_Situation*)
0010a880 t IVP_Material_Manager::get_friction_factor(IVP_Contact_Situation*)
0010aa20 t IVP_Material_Manager::get_material_by_index(IVP_Real_Object*, IVP_U_Point const*, int)
0010aba0 t IVP_Material_Manager::environment_will_be_deleted(IVP_Environment*)
0010aac0 t IVP_Material_Manager::IVP_Material_Manager(IVP_BOOL)
0010aac0 t IVP_Material_Manager::IVP_Material_Manager(IVP_BOOL)
0010ab80 t IVP_Material_Manager::~IVP_Material_Manager()
0010ab70 t IVP_Material_Manager::~IVP_Material_Manager()
0010ab70 t IVP_Material_Manager::~IVP_Material_Manager()
0011c660 t IVP_Mindist_Settings::set_collision_tolerance(double, double)
0011c7c0 t IVP_Mindist_Settings::set_event_queue_min_delta_time_base(double)
0011c7e0 t IVP_Mindist_Settings::IVP_Mindist_Settings()
0011c7e0 t IVP_Mindist_Settings::IVP_Mindist_Settings()
000ee6c0 t IVP_Mutual_Energizer::calc_energy_potential(double, double, double, double, double)
000eea90 t IVP_Mutual_Energizer::calc_energy_potential()
000ee750 t IVP_Mutual_Energizer::init_mutual_energizer(IVP_Core*, IVP_Core*)
000eebb0 t IVP_Mutual_Energizer::destroy_percent_energy(double)
000ee660 t IVP_Mutual_Energizer::calc_impulse_to_reduce_energy_level(double, double, double, double)
000d4ce0 t IVP_Ray_Hit_Listener::~IVP_Ray_Hit_Listener()
000d4c70 t IVP_Ray_Hit_Listener::~IVP_Ray_Hit_Listener()
000d4c70 t IVP_Ray_Hit_Listener::~IVP_Ray_Hit_Listener()
000d3910 t IVP_Ray_Solver_Group::check_ray_group_against_cube(IVP_U_Float_Point const*, float)
000d4900 t IVP_Ray_Solver_Group::check_ray_group_against_node(IVP_OV_Node*, IVP_OV_Tree_Manager*)
000d45c0 t IVP_Ray_Solver_Group::check_ray_group_against_object(IVP_Real_Object*)
000d4ac0 t IVP_Ray_Solver_Group::check_ray_group_against_all_objects_in_sim(IVP_Environment const*)
000d4af0 t IVP_Ray_Solver_Group::IVP_Ray_Solver_Group(int, IVP_Ray_Solver**)
000d4af0 t IVP_Ray_Solver_Group::IVP_Ray_Solver_Group(int, IVP_Ray_Solver**)
00101430 t IVP_Real_Object_Fast::IVP_Real_Object_Fast(IVP_Cluster*, IVP_Template_Object const*)
00101430 t IVP_Real_Object_Fast::IVP_Real_Object_Fast(IVP_Cluster*, IVP_Template_Object const*)
001011f0 t IVP_Real_Object_Fast::~IVP_Real_Object_Fast()
00101170 t IVP_Real_Object_Fast::~IVP_Real_Object_Fast()
00101170 t IVP_Real_Object_Fast::~IVP_Real_Object_Fast()
000e2240 t IVP_Template_Phantom::IVP_Template_Phantom()
000e2240 t IVP_Template_Phantom::IVP_Template_Phantom()
0009a0d0 t IVP_Template_Polygon::IVP_Template_Polygon(int, int, int)
0009a030 t IVP_Template_Polygon::IVP_Template_Polygon()
0009a0d0 t IVP_Template_Polygon::IVP_Template_Polygon(int, int, int)
0009a030 t IVP_Template_Polygon::IVP_Template_Polygon()
0009a1c0 t IVP_Template_Polygon::~IVP_Template_Polygon()
0009a1c0 t IVP_Template_Polygon::~IVP_Template_Polygon()
000d58e0 t IVP_Template_Rot_Mot::IVP_Template_Rot_Mot()
000d58e0 t IVP_Template_Rot_Mot::IVP_Template_Rot_Mot()
0009a2b0 t IVP_Template_Surface::init_surface(int)
0009a180 t IVP_Template_Surface::close_surface()
0009a2f0 t IVP_Template_Surface::get_surface_index()
0009a240 t IVP_Template_Surface::calc_surface_normal_template(int, int, int)
0009a070 t IVP_Template_Surface::IVP_Template_Surface()
0009a070 t IVP_Template_Surface::IVP_Template_Surface()
0009a310 t IVP_Template_Surface::~IVP_Template_Surface()
0009a310 t IVP_Template_Surface::~IVP_Template_Surface()
0010e160 t IVP_U_BigVector_Base::increment_mem()
001016c0 t IVP_Universe_Manager::event_object_deleted(IVP_Real_Object*)
001016b0 t IVP_Universe_Manager::object_no_longer_needed(IVP_Real_Object*)
001016d0 t IVP_Universe_Manager::provide_universe_settings()
001016a0 t IVP_Universe_Manager::ensure_objects_in_environment(IVP_Real_Object*, IVP_U_Float_Point*, double)
0009a790 t IVV_Cluster_Min_Hash::remove_min()
0009a6c0 t IVV_Cluster_Min_Hash::change_value(void*, double)
0009a420 t IVV_Cluster_Min_Hash::min_added_at_index(IVV_Cluster_Min_Hash_Elem*, int)
0009a470 t IVV_Cluster_Min_Hash::min_removed_at_index(IVV_Cluster_Min_Hash_Elem*, int)
0009a540 t IVV_Cluster_Min_Hash::add(void*, double)
0009a600 t IVV_Cluster_Min_Hash::remove(void*)
0009a710 t IVV_Cluster_Min_Hash::is_elem(void*)
0009a320 t IVV_Cluster_Min_Hash::IVV_Cluster_Min_Hash(int)
0009a320 t IVV_Cluster_Min_Hash::IVV_Cluster_Min_Hash(int)
0009a3a0 t IVV_Cluster_Min_Hash::~IVV_Cluster_Min_Hash()
0009a3a0 t IVV_Cluster_Min_Hash::~IVV_Cluster_Min_Hash()
00055610 t vehicle_axleparams_t::GetBaseMap()
001a53e0 d vehicle_axleparams_t::m_DataMap
00055330 t vehicle_bodyparams_t::GetBaseMap()
001a5440 d vehicle_bodyparams_t::m_DataMap
000408a0 t CPhysicsCollisionData::GetContactPoint(Vector&)
00040910 t CPhysicsCollisionData::GetContactSpeed(Vector&)
00040870 t CPhysicsCollisionData::GetSurfaceNormal(Vector&)
00070d70 t CUtlCStringConversion::FindConversion(char const*, int*)
00070f50 t CUtlCStringConversion::CUtlCStringConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
00070f50 t CUtlCStringConversion::CUtlCStringConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
000410a0 t CVPhysicsDebugOverlay::AddBoxOverlay(Vector const&, Vector const&, Vector const&, QAngle const&, int, int, int, int, float)
000410c0 t CVPhysicsDebugOverlay::AddLineOverlay(Vector const&, Vector const&, int, int, int, bool, float)
000410d0 t CVPhysicsDebugOverlay::AddTextOverlay(Vector const&, float, char const*, ...)
000410e0 t CVPhysicsDebugOverlay::AddTextOverlay(Vector const&, int, float, char const*, ...)
00041110 t CVPhysicsDebugOverlay::AddTextOverlayRGB(Vector const&, int, float, float, float, float, float, char const*, ...)
00041100 t CVPhysicsDebugOverlay::AddSweptBoxOverlay(Vector const&, Vector const&, Vector const&, Vector const&, QAngle const&, int, int, int, int, float)
000410b0 t CVPhysicsDebugOverlay::AddTriangleOverlay(Vector const&, Vector const&, Vector const&, int, int, int, int, bool, float)
00041090 t CVPhysicsDebugOverlay::AddEntityTextOverlay(int, int, float, int, int, int, int, char const*, ...)
000410f0 t CVPhysicsDebugOverlay::AddScreenTextOverlay(float, float, float, int, int, int, int, char const*)
00089eb0 t hk_Ragdoll_Constraint::init_constraint(void const*)
0008b2f0 t hk_Ragdoll_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
0008a340 t hk_Ragdoll_Constraint::update_friction(float)
0008a290 t hk_Ragdoll_Constraint::update_transforms(hk_Transform const&, hk_Transform const&)
0008a590 t hk_Ragdoll_Constraint::apply_angular_part(hk_PSI_Info&, hk_Ragdoll_Constraint_Work&, float, float)
0008b630 t hk_Ragdoll_Constraint::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
0008b6e0 t hk_Ragdoll_Constraint::get_constraint_dof()
00089ee0 t hk_Ragdoll_Constraint::write_to_blueprint(hk_Ragdoll_Constraint_BP*)
0008b6d0 t hk_Ragdoll_Constraint::get_constraint_type()
00089b50 t hk_Ragdoll_Constraint::get_vmq_storage_size()
00089b60 t hk_Ragdoll_Constraint::init_ragdoll_constraint(hk_Ragdoll_Constraint_BP const*, hk_Local_Constraint_System*)
0008b740 t hk_Ragdoll_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
0008a3a0 t hk_Ragdoll_Constraint::hk_Ragdoll_Constraint(hk_Environment*, hk_Ragdoll_Constraint_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008a4a0 t hk_Ragdoll_Constraint::hk_Ragdoll_Constraint(hk_Local_Constraint_System*, hk_Ragdoll_Constraint_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008a3a0 t hk_Ragdoll_Constraint::hk_Ragdoll_Constraint(hk_Environment*, hk_Ragdoll_Constraint_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008a4a0 t hk_Ragdoll_Constraint::hk_Ragdoll_Constraint(hk_Local_Constraint_System*, hk_Ragdoll_Constraint_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008b710 t hk_Ragdoll_Constraint::~hk_Ragdoll_Constraint()
0008b6f0 t hk_Ragdoll_Constraint::~hk_Ragdoll_Constraint()
0008b6f0 t hk_Ragdoll_Constraint::~hk_Ragdoll_Constraint()
001207d0 t IVP_3D_Solver_KK_COLL::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
001202d0 t IVP_3D_Solver_PF_COLL::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
001206a0 t IVP_3D_Solver_PK_COLL::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
0010c080 t IVP_Active_Value_Hash::object_to_index(IVP_U_Active_Value*)
0010e0a0 t IVP_Active_Value_Hash::add_active_value(IVP_U_Active_Value*)
0010e000 t IVP_Active_Value_Hash::find_active_value(IVP_U_Active_Value*)
0010e040 t IVP_Active_Value_Hash::remove_active_value(IVP_U_Active_Value*)
0010dfd0 t IVP_Active_Value_Hash::IVP_Active_Value_Hash(int)
0010dfd0 t IVP_Active_Value_Hash::IVP_Active_Value_Hash(int)
0010c060 t IVP_Active_Value_Hash::~IVP_Active_Value_Hash()
0010bff0 t IVP_Active_Value_Hash::~IVP_Active_Value_Hash()
0010bff0 t IVP_Active_Value_Hash::~IVP_Active_Value_Hash()
000d5e80 t IVP_Anchor_Check_Dist::init_anchor_check_dist(IVP_Real_Object*, IVP_U_Point*, IVP_Actuator_Check_Dist*)
000d6210 t IVP_Anchor_Check_Dist::hull_limit_exceeded_event(IVP_Hull_Manager*, float)
000d7b00 t IVP_Anchor_Check_Dist::hull_manager_is_going_to_be_deleted_event(IVP_Hull_Manager*)
000d7c90 t IVP_Anchor_Check_Dist::get_type()
000d7d80 t IVP_Anchor_Check_Dist::IVP_Anchor_Check_Dist()
000d7d80 t IVP_Anchor_Check_Dist::IVP_Anchor_Check_Dist()
000d5190 t IVP_Anchor_Check_Dist::~IVP_Anchor_Check_Dist()
000d4e80 t IVP_Anchor_Check_Dist::~IVP_Anchor_Check_Dist()
000d4e80 t IVP_Anchor_Check_Dist::~IVP_Anchor_Check_Dist()
00048010 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::element_added(IVP_U_Set_Active<IVP_Core>*, IVP_Core*)
00047fd0 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::element_removed(IVP_U_Set_Active<IVP_Core>*, IVP_Core*)
00047e90 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::pset_is_going_to_be_deleted(IVP_U_Set_Active<IVP_Core>*)
000482f0 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::~IVP_Attacher_To_Cores()
00047f40 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::~IVP_Attacher_To_Cores()
00047f40 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::~IVP_Attacher_To_Cores()
0010a510 t IVP_Cache_Ledge_Point::get_object_cache()
0010a540 t IVP_Cache_Ledge_Point::remove_reference()
0010a500 t IVP_Cache_Ledge_Point::get_compact_ledge()
0010a640 t IVP_Cache_Ledge_Point::init_cache_ledge_point(IVP_Real_Object*, IVP_Compact_Ledge const*)
0010a520 t IVP_Cache_Ledge_Point::get_core()
0010a6d0 t IVP_Cache_Ledge_Point::IVP_Cache_Ledge_Point(IVP_Real_Object*, IVP_Compact_Ledge const*)
0010a550 t IVP_Cache_Ledge_Point::IVP_Cache_Ledge_Point()
0010a6d0 t IVP_Cache_Ledge_Point::IVP_Cache_Ledge_Point(IVP_Real_Object*, IVP_Compact_Ledge const*)
0010a550 t IVP_Cache_Ledge_Point::IVP_Cache_Ledge_Point()
000b1010 t IVP_Compact_Recursive::add_compact_ledge(IVP_Compact_Ledge const*)
000b10c0 t IVP_Compact_Recursive::build_convex_hull()
000b10a0 t IVP_Compact_Recursive::add_compact_surface(IVP_Compact_Surface const*)
000b12e0 t IVP_Compact_Recursive::set_rekursive_convex_hull()
000b1050 t IVP_Compact_Recursive::add_compact_ledge_treenode(IVP_Compact_Ledgetree_Node const*)
000b16f0 t IVP_Compact_Recursive::compile()
000b0fa0 t IVP_Compact_Recursive::IVP_Compact_Recursive()
000b0fa0 t IVP_Compact_Recursive::IVP_Compact_Recursive()
000b0fd0 t IVP_Compact_Recursive::~IVP_Compact_Recursive()
000b0fd0 t IVP_Compact_Recursive::~IVP_Compact_Recursive()
000ed4b0 t IVP_Contact_Point_API::get_vert_force(IVP_Contact_Point*)
000ed490 t IVP_Contact_Point_API::get_eliminated_energy(IVP_Contact_Point*)
000ed4c0 t IVP_Contact_Point_API::get_surface_normal_ws(IVP_Contact_Point*, IVP_U_Float_Point*)
000ed4a0 t IVP_Contact_Point_API::reset_eliminated_energy(IVP_Contact_Point*)
000fbb40 t IVP_Contact_Situation::IVP_Contact_Situation()
000fbb40 t IVP_Contact_Situation::IVP_Contact_Situation()
00130ba0 t IVP_Controller_Motion::set_max_torque(IVP_U_Float_Point const*)
00131190 t IVP_Controller_Motion::set_damp_factor(float)
00131180 t IVP_Controller_Motion::set_force_factor(float)
001311a0 t IVP_Controller_Motion::set_torque_factor(float)
00130bf0 t IVP_Controller_Motion::set_target_position_ws(IVP_U_Point const*)
001310f0 t IVP_Controller_Motion::get_controller_priority()
001311b0 t IVP_Controller_Motion::set_angular_damp_factor(float)
0012fc10 t IVP_Controller_Motion::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00130bd0 t IVP_Controller_Motion::set_max_translation_force(IVP_U_Float_Point const*)
00130d60 t IVP_Controller_Motion::set_target_q_world_f_core(IVP_U_Quat const*)
00130c90 t IVP_Controller_Motion::set_target_object_position_ws(IVP_Real_Object*, IVP_U_Quat const*, IVP_U_Point const*)
0012fbd0 t IVP_Controller_Motion::core_is_going_to_be_deleted_event(IVP_Core*)
00130ae0 t IVP_Controller_Motion::IVP_Controller_Motion(IVP_Real_Object*, IVP_Template_Controller_Motion const*)
00130ae0 t IVP_Controller_Motion::IVP_Controller_Motion(IVP_Real_Object*, IVP_Template_Controller_Motion const*)
00130180 t IVP_Controller_Motion::~IVP_Controller_Motion()
001300f0 t IVP_Controller_Motion::~IVP_Controller_Motion()
001300f0 t IVP_Controller_Motion::~IVP_Controller_Motion()
000e7fd0 t IVP_Draw_Vector_Debug::IVP_Draw_Vector_Debug()
000e7fd0 t IVP_Draw_Vector_Debug::IVP_Draw_Vector_Debug()
000e8030 t IVP_Draw_Vector_Debug::~IVP_Draw_Vector_Debug()
000e8030 t IVP_Draw_Vector_Debug::~IVP_Draw_Vector_Debug()
000f7a80 t IVP_Hull_Manager_Base::IVP_Hull_Manager_Base()
000f7a80 t IVP_Hull_Manager_Base::IVP_Hull_Manager_Base()
000f7ad0 t IVP_Hull_Manager_Base::~IVP_Hull_Manager_Base()
000f7ad0 t IVP_Hull_Manager_Base::~IVP_Hull_Manager_Base()
0011fe80 t IVP_Mindist_Recursive::is_recursive()
00125a60 t IVP_Mindist_Recursive::delete_all_children()
00125a50 t IVP_Mindist_Recursive::mindist_rescue_push()
00125d40 t IVP_Mindist_Recursive::recheck_recursive_childs(double)
00126490 t IVP_Mindist_Recursive::get_spawned_mindist_count()
00125e70 t IVP_Mindist_Recursive::exact_mindist_went_invalid(IVP_Mindist_Manager*)
00126280 t IVP_Mindist_Recursive::invalid_mindist_went_exact()
00126460 t IVP_Mindist_Recursive::change_spawned_mindist_count(int)
001262d0 t IVP_Mindist_Recursive::rec_hull_limit_exceeded_event()
00125cb0 t IVP_Mindist_Recursive::collision_is_going_to_be_deleted_event(IVP_Collision*)
00125fd0 t IVP_Mindist_Recursive::do_impact()
00125b10 t IVP_Mindist_Recursive::IVP_Mindist_Recursive(IVP_Environment*, IVP_Collision_Delegator*)
00125b10 t IVP_Mindist_Recursive::IVP_Mindist_Recursive(IVP_Environment*, IVP_Collision_Delegator*)
00125c80 t IVP_Mindist_Recursive::~IVP_Mindist_Recursive()
00125b90 t IVP_Mindist_Recursive::~IVP_Mindist_Recursive()
00125b90 t IVP_Mindist_Recursive::~IVP_Mindist_Recursive()
00105ac0 t IVP_Sim_Units_Manager::reset_time(IVP_Time)
00104d80 t IVP_Sim_Units_Manager::add_unit_to_slot(IVP_Simulation_Unit*, IVP_Simulation_Unit**)
00104de0 t IVP_Sim_Units_Manager::rem_unit_from_slot(IVP_Simulation_Unit*, IVP_Simulation_Unit**)
001059e0 t IVP_Sim_Units_Manager::simulate_sim_units_psi(IVP_Environment*, IVP_U_Vector<IVP_Core>*)
00104da0 t IVP_Sim_Units_Manager::add_sim_unit_to_manager(IVP_Simulation_Unit*)
00104e10 t IVP_Sim_Units_Manager::rem_sim_unit_from_manager(IVP_Simulation_Unit*)
00104d40 t IVP_Sim_Units_Manager::IVP_Sim_Units_Manager(IVP_Environment*)
00104d40 t IVP_Sim_Units_Manager::IVP_Sim_Units_Manager(IVP_Environment*)
00101500 t IVP_Statistic_Manager::clear_statistic()
00101490 t IVP_Statistic_Manager::output_statistic()
00101570 t IVP_Statistic_Manager::IVP_Statistic_Manager()
00101570 t IVP_Statistic_Manager::IVP_Statistic_Manager()
000ddd90 t IVP_Template_Buoyancy::IVP_Template_Buoyancy()
000ddd90 t IVP_Template_Buoyancy::IVP_Template_Buoyancy()
000e74a0 t IVP_Vector_of_Objects::reset()
000e7480 t IVP_Vector_of_Objects::IVP_Vector_of_Objects()
000e7480 t IVP_Vector_of_Objects::IVP_Vector_of_Objects()
00055400 t vehicle_wheelparams_t::GetBaseMap()
001a5420 d vehicle_wheelparams_t::m_DataMap
00076620 t CCleanupUtlSymbolTable::~CCleanupUtlSymbolTable()
00076620 t CCleanupUtlSymbolTable::~CCleanupUtlSymbolTable()
000361b0 t compactsurfaceheader_t::GetBaseMap()
001a3240 d compactsurfaceheader_t::m_DataMap
00140a00 t CPolyhedron_AllocByNew::Release()
00140a20 t CPolyhedron_AllocByNew::Allocate(unsigned short, unsigned short, unsigned short, unsigned short)
00143770 t CPolyhedron_AllocByNew::~CPolyhedron_AllocByNew()
00143720 t CPolyhedron_AllocByNew::~CPolyhedron_AllocByNew()
00143720 t CPolyhedron_AllocByNew::~CPolyhedron_AllocByNew()
00143730 t CPolyhedron_TempMemory::Release()
00143750 t CPolyhedron_TempMemory::~CPolyhedron_TempMemory()
00143740 t CPolyhedron_TempMemory::~CPolyhedron_TempMemory()
00143740 t CPolyhedron_TempMemory::~CPolyhedron_TempMemory()
000411d0 t IPhysicsObjectPairHash::~IPhysicsObjectPairHash()
00040850 t IPhysicsObjectPairHash::~IPhysicsObjectPairHash()
00040850 t IPhysicsObjectPairHash::~IPhysicsObjectPairHash()
000d7d20 t IVP_Actuator_Two_Point::get_actuator_anchor(int)
000d5f00 t IVP_Actuator_Two_Point::ensure_actuator_in_simulation()
000d6ba0 t IVP_Actuator_Two_Point::IVP_Actuator_Two_Point(IVP_Environment*, IVP_Template_Two_Point*, IVP_ACTUATOR_TYPE)
000d6ba0 t IVP_Actuator_Two_Point::IVP_Actuator_Two_Point(IVP_Environment*, IVP_Template_Two_Point*, IVP_ACTUATOR_TYPE)
000d6b80 t IVP_Actuator_Two_Point::~IVP_Actuator_Two_Point()
000d66e0 t IVP_Actuator_Two_Point::~IVP_Actuator_Two_Point()
000d66e0 t IVP_Actuator_Two_Point::~IVP_Actuator_Two_Point()
001092a0 t IVP_BetterDebugmanager::output_function(IVP_DEBUG_CLASS, char const*)
00109300 t IVP_BetterDebugmanager::is_debug_enabled(IVP_DEBUG_CLASS)
001092c0 t IVP_BetterDebugmanager::enable_debug_output(IVP_DEBUG_CLASS)
001092e0 t IVP_BetterDebugmanager::disable_debug_output(IVP_DEBUG_CLASS)
00109330 t IVP_BetterDebugmanager::dprint(IVP_DEBUG_CLASS, char const*, ...)
00109380 t IVP_BetterDebugmanager::IVP_BetterDebugmanager()
00109380 t IVP_BetterDebugmanager::IVP_BetterDebugmanager()
00109280 t IVP_BetterDebugmanager::~IVP_BetterDebugmanager()
00109270 t IVP_BetterDebugmanager::~IVP_BetterDebugmanager()
00109270 t IVP_BetterDebugmanager::~IVP_BetterDebugmanager()
000d0d00 t IVP_Compact_Poly_Point::set_client_data(void*)
000d0cc0 t IVP_Compact_Poly_Point::IVP_Compact_Poly_Point(IVP_U_Point*)
000d0cc0 t IVP_Compact_Poly_Point::IVP_Compact_Poly_Point(IVP_U_Point*)
001049a0 t IVP_Controller_Manager::add_controller_to_core(IVP_Controller_Independent*, IVP_Core*)
00104580 t IVP_Controller_Manager::ensure_core_in_simulation(IVP_Core*)
001047d0 t IVP_Controller_Manager::remove_controller_from_core(IVP_Controller_Independent*, IVP_Core*)
00105080 t IVP_Controller_Manager::ensure_controller_in_simulation(IVP_Controller_Dependent*)
00104f00 t IVP_Controller_Manager::announce_controller_to_environment(IVP_Controller_Dependent*)
001050e0 t IVP_Controller_Manager::remove_controller_from_environment(IVP_Controller_Dependent*, IVP_BOOL)
00103ae0 t IVP_Controller_Manager::IVP_Controller_Manager(IVP_Environment*)
00103ae0 t IVP_Controller_Manager::IVP_Controller_Manager(IVP_Environment*)
000e2390 t IVP_Controller_Phantom::add_sleeping_object(IVP_Real_Object*)
000e3260 t IVP_Controller_Phantom::event_object_frozen(IVP_Event_Object*)
000e2960 t IVP_Controller_Phantom::mindist_left_volume(IVP_Mindist*)
000e22d0 t IVP_Controller_Phantom::add_listener_phantom(IVP_Listener_Phantom*)
000e3250 t IVP_Controller_Phantom::event_object_created(IVP_Event_Object*)
000e2230 t IVP_Controller_Phantom::event_object_deleted(IVP_Event_Object*)
000e25b0 t IVP_Controller_Phantom::event_object_revived(IVP_Event_Object*)
000e2560 t IVP_Controller_Phantom::fire_event_core_left(IVP_Core*)
000e3800 t IVP_Controller_Phantom::get_intruding_mindists()
000e2650 t IVP_Controller_Phantom::mindist_entered_volume(IVP_Mindist*)
000e23f0 t IVP_Controller_Phantom::remove_sleeping_object(IVP_Real_Object*)
000e2510 t IVP_Controller_Phantom::fire_event_core_entered(IVP_Core*)
000e2310 t IVP_Controller_Phantom::remove_listener_phantom(IVP_Listener_Phantom*)
000e2450 t IVP_Controller_Phantom::wake_all_sleeping_objects()
000e2c40 t IVP_Controller_Phantom::IVP_Controller_Phantom(IVP_Real_Object*, IVP_Template_Phantom const*)
000e2c40 t IVP_Controller_Phantom::IVP_Controller_Phantom(IVP_Real_Object*, IVP_Template_Phantom const*)
000e3230 t IVP_Controller_Phantom::~IVP_Controller_Phantom()
000e2f70 t IVP_Controller_Phantom::~IVP_Controller_Phantom()
000e2f70 t IVP_Controller_Phantom::~IVP_Controller_Phantom()
000ef4a0 t IVP_Friction_Core_Pair::debug_printf_pair()
000edc50 t IVP_Friction_Core_Pair::number_of_pair_dists()
000ef180 t IVP_Friction_Core_Pair::set_friction_vectors(IVP_U_Float_Point*)
000edc60 t IVP_Friction_Core_Pair::add_fr_dist_obj_pairs(IVP_Contact_Point*)
000edca0 t IVP_Friction_Core_Pair::del_fr_dist_obj_pairs(IVP_Contact_Point*)
000eeeb0 t IVP_Friction_Core_Pair::destroy_mutual_energy(double)
000ef290 t IVP_Friction_Core_Pair::get_average_friction_vector(IVP_U_Float_Point*)
000ef4e0 t IVP_Friction_Core_Pair::debug_read_vector_after_ease()
000ef4b0 t IVP_Friction_Core_Pair::debug_store_vector_before_ease()
000ee580 t IVP_Friction_Core_Pair::check_all_fr_mindists_to_be_valid(IVP_Friction_System*)
000eef60 t IVP_Friction_Core_Pair::remove_energy_gained_by_real_friction()
000ef140 t IVP_Friction_Core_Pair::IVP_Friction_Core_Pair()
000ef140 t IVP_Friction_Core_Pair::IVP_Friction_Core_Pair()
000ef100 t IVP_Friction_Core_Pair::~IVP_Friction_Core_Pair()
000ef100 t IVP_Friction_Core_Pair::~IVP_Friction_Core_Pair()
00101650 t IVP_Listener_Collision::event_pre_collision(IVP_Event_Collision*)
00101660 t IVP_Listener_Collision::event_post_collision(IVP_Event_Collision*)
00103a20 t IVP_Listener_Collision::get_enabled_callbacks()
00101680 t IVP_Listener_Collision::event_friction_created(IVP_Event_Friction*)
00101690 t IVP_Listener_Collision::event_friction_deleted(IVP_Event_Friction*)
00103850 t IVP_Listener_Collision::event_friction_pair_created(IVP_Friction_Core_Pair*)
00103860 t IVP_Listener_Collision::event_friction_pair_deleted(IVP_Friction_Core_Pair*)
00101670 t IVP_Listener_Collision::event_collision_object_deleted(IVP_Real_Object*)
00103a30 t IVP_Listener_Collision::IVP_Listener_Collision(int)
00103a30 t IVP_Listener_Collision::IVP_Listener_Collision(int)
001039c0 t IVP_Listener_Collision::~IVP_Listener_Collision()
00103870 t IVP_Listener_Collision::~IVP_Listener_Collision()
00103870 t IVP_Listener_Collision::~IVP_Listener_Collision()
0010aeb0 t IVP_PerformanceCounter::IVP_PerformanceCounter()
0010aeb0 t IVP_PerformanceCounter::IVP_PerformanceCounter()
0010ae90 t IVP_PerformanceCounter::~IVP_PerformanceCounter()
0010ae80 t IVP_PerformanceCounter::~IVP_PerformanceCounter()
0010ae80 t IVP_PerformanceCounter::~IVP_PerformanceCounter()
000b6bb0 t IVP_Rot_Inertia_Solver::find_center_given_xyz(IVP_U_BigVector<IVP_Compact_Ledge>*, int, int, int, IVP_U_Matrix const*, double*, double*, double*)
000b7030 t IVP_Rot_Inertia_Solver::calc_mass_center_and_rotation_inertia(IVP_Compact_Surface const*, IVP_U_Point*, IVP_U_Point*)
000d57b0 t IVP_Template_Two_Point::IVP_Template_Two_Point()
000d57b0 t IVP_Template_Two_Point::IVP_Template_Two_Point()
000557b0 t vehicle_engineparams_t::GetBaseMap()
001a53a0 d vehicle_engineparams_t::m_DataMap
00040a10 t CEmptyCollisionListener::StartTouch(IPhysicsObject*, IPhysicsObject*, IPhysicsCollisionData*)
000409e0 t CEmptyCollisionListener::PreCollision(vcollisionevent_t*)
00040a40 t CEmptyCollisionListener::FluidEndTouch(IPhysicsObject*, IPhysicsFluidController*)
000409f0 t CEmptyCollisionListener::PostCollision(vcollisionevent_t*)
00040a30 t CEmptyCollisionListener::FluidStartTouch(IPhysicsObject*, IPhysicsFluidController*)
00040a50 t CEmptyCollisionListener::ObjectEnterTrigger(IPhysicsObject*, IPhysicsObject*)
00040a60 t CEmptyCollisionListener::ObjectLeaveTrigger(IPhysicsObject*, IPhysicsObject*)
00040a70 t CEmptyCollisionListener::PostSimulationFrame()
00040a20 t CEmptyCollisionListener::EndTouch(IPhysicsObject*, IPhysicsObject*, IPhysicsCollisionData*)
00040a00 t CEmptyCollisionListener::Friction(IPhysicsObject*, float, int, int, IPhysicsCollisionData*)
000590b0 t CPhysCollideVirtualMesh::BuildLedges()
00059fd0 t CPhysCollideVirtualMesh::SetMassCenter(Vector const&)
000596e0 t CPhysCollideVirtualMesh::BuildBoundingLedge()
00059590 t CPhysCollideVirtualMesh::CreateMeshBoundingHull(virtualmeshlist_t const&)
0005a570 t CPhysCollideVirtualMesh::GetAllLedgesWithinRadius(IVP_U_Point const*, double, IVP_U_BigVector<IVP_Compact_Ledge>*, IVP_Compact_Ledge const*)
000592a0 t CPhysCollideVirtualMesh::CreateBoundingSurfaceFromRange(virtualmeshlist_t const&, int, int)
00059190 t CPhysCollideVirtualMesh::AddRef()
00058fa0 t CPhysCollideVirtualMesh::Release()
00058c00 t CPhysCollideVirtualMesh::~CPhysCollideVirtualMesh()
00058bb0 t CPhysCollideVirtualMesh::~CPhysCollideVirtualMesh()
00058bb0 t CPhysCollideVirtualMesh::~CPhysCollideVirtualMesh()
00038140 t CPhysicsConstraintGroup::GetErrorParams(constraint_groupparams_t*)
00037ee0 t CPhysicsConstraintGroup::IsInErrorState()
00037f20 t CPhysicsConstraintGroup::SetErrorParams(constraint_groupparams_t const&)
00037f00 t CPhysicsConstraintGroup::ClearErrorState()
00038100 t CPhysicsConstraintGroup::SolvePenetration(IPhysicsObject*, IPhysicsObject*)
00038050 t CPhysicsConstraintGroup::Activate()
00038b10 t CPhysicsConstraintGroup::CPhysicsConstraintGroup(IVP_Environment*, constraint_groupparams_t const&)
00038b10 t CPhysicsConstraintGroup::CPhysicsConstraintGroup(IVP_Environment*, constraint_groupparams_t const&)
00037fb0 t CPhysicsConstraintGroup::~CPhysicsConstraintGroup()
00037f50 t CPhysicsConstraintGroup::~CPhysicsConstraintGroup()
00037f50 t CPhysicsConstraintGroup::~CPhysicsConstraintGroup()
000478e0 t CPhysicsFluidController::SetGameData(void*)
00047b10 t CPhysicsFluidController::GetIVPObject()
00047ac0 t CPhysicsFluidController::WakeAllSleepingObjects()
00047ae0 t CPhysicsFluidController::CPhysicsFluidController(CBuoyancyAttacher*, IVP_Liquid_Surface_Descriptor*, CPhysicsObject*, int)
00047ae0 t CPhysicsFluidController::CPhysicsFluidController(CBuoyancyAttacher*, IVP_Liquid_Surface_Descriptor*, CPhysicsObject*, int)
00047a80 t CPhysicsFluidController::~CPhysicsFluidController()
000478a0 t CPhysicsFluidController::~CPhysicsFluidController()
000478a0 t CPhysicsFluidController::~CPhysicsFluidController()
00062330 t CTraceSolverSweptObject::SweepLedgeTree_r(IVP_Compact_Ledgetree_Node const*)
00062f80 t CTraceSolverSweptObject::DoSweep()
0005c670 t CTraceSolverSweptObject::InitOSRay()
0005c5b0 t CTraceSolverSweptObject::CTraceSolverSweptObject(CGameTrace*, ITraceObject*, CTraceRay*, CTraceIVP*, Vector const&, unsigned int, IConvexInfo*)
0005c5b0 t CTraceSolverSweptObject::CTraceSolverSweptObject(CGameTrace*, ITraceObject*, CTraceRay*, CTraceIVP*, Vector const&, unsigned int, IConvexInfo*)
00075750 t CUtlFilenameSymbolTable::FindFileName(char const*)
00075fd0 t CUtlFilenameSymbolTable::FindOrAddFileName(char const*)
00075960 t CUtlFilenameSymbolTable::String(void* const&, char*, int)
00075f10 t CUtlFilenameSymbolTable::RemoveAll()
000756a0 t CUtlFilenameSymbolTable::CUtlFilenameSymbolTable()
000756a0 t CUtlFilenameSymbolTable::CUtlFilenameSymbolTable()
00075f70 t CUtlFilenameSymbolTable::~CUtlFilenameSymbolTable()
00075f70 t CUtlFilenameSymbolTable::~CUtlFilenameSymbolTable()
00066d30 t CVPhysPtrSaveRestoreOps::PreRestore()
00066d40 t CVPhysPtrSaveRestoreOps::PostRestore()
00066a50 t CVPhysPtrSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
00066b10 t CVPhysPtrSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
00066d20 t CVPhysPtrSaveRestoreOps::CVPhysPtrSaveRestoreOps()
00066d20 t CVPhysPtrSaveRestoreOps::CVPhysPtrSaveRestoreOps()
0007e990 t hk_Breakable_Constraint::init_constraint(void const*)
0007ebf0 t hk_Breakable_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
0007ebb0 t hk_Breakable_Constraint::FireEventIfBroken()
0007f260 t hk_Breakable_Constraint::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
0007f290 t hk_Breakable_Constraint::get_constraint_dof()
0007eb80 t hk_Breakable_Constraint::write_to_blueprint(hk_Breakable_Constraint_BP*)
0007f270 t hk_Breakable_Constraint::get_constraint_type()
0007e9c0 t hk_Breakable_Constraint::get_vmq_storage_size()
0007eb50 t hk_Breakable_Constraint::init_breakable_constraint(hk_Breakable_Constraint_BP const*)
0007f320 t hk_Breakable_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
0007ea50 t hk_Breakable_Constraint::hk_Breakable_Constraint(hk_Environment*, hk_Breakable_Constraint_BP const*)
0007ead0 t hk_Breakable_Constraint::hk_Breakable_Constraint(hk_Local_Constraint_System*, hk_Breakable_Constraint_BP const*)
0007ea50 t hk_Breakable_Constraint::hk_Breakable_Constraint(hk_Environment*, hk_Breakable_Constraint_BP const*)
0007ead0 t hk_Breakable_Constraint::hk_Breakable_Constraint(hk_Local_Constraint_System*, hk_Breakable_Constraint_BP const*)
0007ea30 t hk_Breakable_Constraint::~hk_Breakable_Constraint()
0007e9e0 t hk_Breakable_Constraint::~hk_Breakable_Constraint()
0007e9e0 t hk_Breakable_Constraint::~hk_Breakable_Constraint()
00085fd0 t hk_Prismatic_Constraint::set_limits(float, float)
00086040 t hk_Prismatic_Constraint::set_friction(float)
00085d50 t hk_Prismatic_Constraint::init_constraint(void const*)
00084950 t hk_Prismatic_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
00085f50 t hk_Prismatic_Constraint::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
000860b0 t hk_Prismatic_Constraint::get_constraint_dof()
00085840 t hk_Prismatic_Constraint::reset_linear_limit()
00085d80 t hk_Prismatic_Constraint::write_to_blueprint(hk_Prismatic_BP*)
000860a0 t hk_Prismatic_Constraint::get_constraint_type()
00084940 t hk_Prismatic_Constraint::get_vmq_storage_size()
00085ba0 t hk_Prismatic_Constraint::init_prismatic_constraint(hk_Prismatic_BP const*, hk_Local_Constraint_System*)
00086110 t hk_Prismatic_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
00086070 t hk_Prismatic_Constraint::set_motor(float, float)
00085e00 t hk_Prismatic_Constraint::hk_Prismatic_Constraint(hk_Environment*, hk_Prismatic_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00085eb0 t hk_Prismatic_Constraint::hk_Prismatic_Constraint(hk_Local_Constraint_System*, hk_Prismatic_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00085e00 t hk_Prismatic_Constraint::hk_Prismatic_Constraint(hk_Environment*, hk_Prismatic_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00085eb0 t hk_Prismatic_Constraint::hk_Prismatic_Constraint(hk_Local_Constraint_System*, hk_Prismatic_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
000860e0 t hk_Prismatic_Constraint::~hk_Prismatic_Constraint()
000860c0 t hk_Prismatic_Constraint::~hk_Prismatic_Constraint()
000860c0 t hk_Prismatic_Constraint::~hk_Prismatic_Constraint()
0007dab0 t hk_Rigid_Body_Binary_EF::get_effected_entities(hk_Array<hk_Rigid_Body*>&)
000908b0 t hk_Rigid_Body_Binary_EF::hk_Rigid_Body_Binary_EF(hk_Environment*, hk_Rigid_Body*, hk_Rigid_Body*, IVP_CONTROLLER_PRIORITY)
000908b0 t hk_Rigid_Body_Binary_EF::hk_Rigid_Body_Binary_EF(hk_Environment*, hk_Rigid_Body*, hk_Rigid_Body*, IVP_CONTROLLER_PRIORITY)
0003d590 t IPhysicsConstraintGroup::~IPhysicsConstraintGroup()
0003d500 t IPhysicsConstraintGroup::~IPhysicsConstraintGroup()
0003d500 t IPhysicsConstraintGroup::~IPhysicsConstraintGroup()
00047f20 t IPhysicsFluidController::~IPhysicsFluidController()
00047e70 t IPhysicsFluidController::~IPhysicsFluidController()
00047e70 t IPhysicsFluidController::~IPhysicsFluidController()
000d5f30 t IVP_Actuator_Check_Dist::fire_check_dist_event(IVP_BOOL)
000d5fd0 t IVP_Actuator_Check_Dist::hull_limit_exceeded_event()
000d5f80 t IVP_Actuator_Check_Dist::fire_check_dist_is_going_to_be_deleted_event()
000d61f0 t IVP_Actuator_Check_Dist::set_range(double)
000d7b40 t IVP_Actuator_Check_Dist::IVP_Actuator_Check_Dist(IVP_Environment*, IVP_Template_Check_Dist*)
000d7b40 t IVP_Actuator_Check_Dist::IVP_Actuator_Check_Dist(IVP_Environment*, IVP_Template_Check_Dist*)
000d7a30 t IVP_Actuator_Check_Dist::~IVP_Actuator_Check_Dist()
000d7a30 t IVP_Actuator_Check_Dist::~IVP_Actuator_Check_Dist()
000d7d40 t IVP_Actuator_Four_Point::get_actuator_anchor(int)
000d7330 t IVP_Actuator_Four_Point::IVP_Actuator_Four_Point(IVP_Environment*, IVP_Template_Four_Point*, IVP_ACTUATOR_TYPE)
000d7330 t IVP_Actuator_Four_Point::IVP_Actuator_Four_Point(IVP_Environment*, IVP_Template_Four_Point*, IVP_ACTUATOR_TYPE)
000d66c0 t IVP_Actuator_Four_Point::~IVP_Actuator_Four_Point()
000d65e0 t IVP_Actuator_Four_Point::~IVP_Actuator_Four_Point()
000d65e0 t IVP_Actuator_Four_Point::~IVP_Actuator_Four_Point()
000d79f0 t IVP_Actuator_Stabilizer::set_stabi_constant(double)
000d7ca0 t IVP_Actuator_Stabilizer::get_controller_name()
000d4eb0 t IVP_Actuator_Stabilizer::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000d79a0 t IVP_Actuator_Stabilizer::IVP_Actuator_Stabilizer(IVP_Environment*, IVP_Template_Stabilizer*)
000d79a0 t IVP_Actuator_Stabilizer::IVP_Actuator_Stabilizer(IVP_Environment*, IVP_Template_Stabilizer*)
000d6690 t IVP_Actuator_Stabilizer::~IVP_Actuator_Stabilizer()
000d6670 t IVP_Actuator_Stabilizer::~IVP_Actuator_Stabilizer()
000d6670 t IVP_Actuator_Stabilizer::~IVP_Actuator_Stabilizer()
000d8cd0 t IVP_Actuator_Suspension::set_max_body_force(float)
000d8d10 t IVP_Actuator_Suspension::get_controller_name()
000d7dd0 t IVP_Actuator_Suspension::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000d8c90 t IVP_Actuator_Suspension::set_spring_damp_compression(float)
000d8c30 t IVP_Actuator_Suspension::IVP_Actuator_Suspension(IVP_Environment*, IVP_Template_Suspension*)
000d8c30 t IVP_Actuator_Suspension::IVP_Actuator_Suspension(IVP_Environment*, IVP_Template_Suspension*)
000d8160 t IVP_Actuator_Suspension::~IVP_Actuator_Suspension()
000d8140 t IVP_Actuator_Suspension::~IVP_Actuator_Suspension()
000d8140 t IVP_Actuator_Suspension::~IVP_Actuator_Suspension()
0011c350 t IVP_Collision_Delegator::get_spawned_mindist_count()
0011c340 t IVP_Collision_Delegator::change_spawned_mindist_count(int)
0011c3e0 t IVP_Collision_Delegator::~IVP_Collision_Delegator()
0011c330 t IVP_Collision_Delegator::~IVP_Collision_Delegator()
0011c330 t IVP_Collision_Delegator::~IVP_Collision_Delegator()
000dc910 t IVP_Controller_Buoyancy::apply_dampening(IVP_Real_Object*, float, double, IVP_U_Float_Point*, IVP_U_Float_Point*, IVP_U_Float_Point*)
000ddc30 t IVP_Controller_Buoyancy::get_controller_name()
000dc820 t IVP_Controller_Buoyancy::use_buoyancy_solver(IVP_Buoyancy_Input const*, IVP_Template_Buoyancy const*, IVP_Buoyancy_Output*, IVP_U_Float_Point const*, int)
000dcd40 t IVP_Controller_Buoyancy::apply_buoyancy_impulse(IVP_Real_Object*, IVP_Template_Buoyancy*, double, float, IVP_U_Float_Point*)
000ddc20 t IVP_Controller_Buoyancy::get_controller_priority()
000dcf70 t IVP_Controller_Buoyancy::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000dc700 t IVP_Controller_Buoyancy::calculate_future_extrapolation(IVP_Controller_Buoyancy::Attacher_Interpolator::Last_IO const*, IVP_MI_Vector const*, IVP_MI_Vector const*, double, IVP_Time, IVP_MI_Vector*, IVP_MI_Vector*)
000ddc10 t IVP_Controller_Buoyancy::get_minimum_simulation_frequency()
000ddbf0 t IVP_Controller_Buoyancy::core_is_going_to_be_deleted_event(IVP_Core*)
000dd6c0 t IVP_Controller_Buoyancy::provide_new_input_solution_combination(IVP_Controller_Buoyancy::Attacher_Interpolator*, IVP_Template_Buoyancy*, IVP_MI_Vector const*, IVP_MI_Vector const*, double, IVP_Time)
000dd940 t IVP_Controller_Buoyancy::IVP_Controller_Buoyancy(IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>*, IVP_Core*)
000dd940 t IVP_Controller_Buoyancy::IVP_Controller_Buoyancy(IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>*, IVP_Core*)
000dc6e0 t IVP_Controller_Buoyancy::~IVP_Controller_Buoyancy()
000dc670 t IVP_Controller_Buoyancy::~IVP_Controller_Buoyancy()
000dc670 t IVP_Controller_Buoyancy::~IVP_Controller_Buoyancy()
000e9a80 t IVP_Environment_Manager::create_environment(IVP_Application_Environment*, char const*, unsigned int)
000e7dc0 t IVP_Environment_Manager::get_environment_manager()
001ad19c b IVP_Environment_Manager::static_environment_manager
000e79b0 t IVP_Environment_Manager::IVP_Environment_Manager()
000e79b0 t IVP_Environment_Manager::IVP_Environment_Manager()
000e7830 t IVP_Environment_Manager::~IVP_Environment_Manager()
000e7830 t IVP_Environment_Manager::~IVP_Environment_Manager()
000efe50 t IVP_Friction_Sys_Energy::get_controller_name()
000efe40 t IVP_Friction_Sys_Energy::get_controller_priority()
000ef050 t IVP_Friction_Sys_Energy::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000ea930 t IVP_Friction_Sys_Energy::core_is_going_to_be_deleted_event(IVP_Core*)
000efeb0 t IVP_Friction_Sys_Energy::~IVP_Friction_Sys_Energy()
000efe60 t IVP_Friction_Sys_Energy::~IVP_Friction_Sys_Energy()
000efe60 t IVP_Friction_Sys_Energy::~IVP_Friction_Sys_Energy()
000efe80 t IVP_Friction_Sys_Static::get_controller_name()
000efe70 t IVP_Friction_Sys_Static::get_controller_priority()
000ef9f0 t IVP_Friction_Sys_Static::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000ef970 t IVP_Friction_Sys_Static::do_simulation_single_friction(IVP_Event_Sim*)
000efea0 t IVP_Friction_Sys_Static::get_minimum_simulation_frequency()
000ed920 t IVP_Friction_Sys_Static::core_is_going_to_be_deleted_event(IVP_Core*)
000efed0 t IVP_Friction_Sys_Static::~IVP_Friction_Sys_Static()
000efe90 t IVP_Friction_Sys_Static::~IVP_Friction_Sys_Static()
000efe90 t IVP_Friction_Sys_Static::~IVP_Friction_Sys_Static()
000d2fa0 t IVP_Ray_Solver_Min_Hash::add_hit_object(IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_Compact_Triangle const*, double, IVP_U_Point*)
000d4d80 t IVP_Ray_Solver_Min_Hash::get_result_min_hash()
000d4df0 t IVP_Ray_Solver_Min_Hash::IVP_Ray_Solver_Min_Hash(IVP_Ray_Solver_Template const*)
000d4df0 t IVP_Ray_Solver_Min_Hash::IVP_Ray_Solver_Min_Hash(IVP_Ray_Solver_Template const*)
000d4d40 t IVP_Ray_Solver_Min_Hash::~IVP_Ray_Solver_Min_Hash()
000d4d00 t IVP_Ray_Solver_Min_Hash::~IVP_Ray_Solver_Min_Hash()
000d4d00 t IVP_Ray_Solver_Min_Hash::~IVP_Ray_Solver_Min_Hash()
001313d0 t IVP_SurfaceManager_Ball::get_all_terminal_ledges(IVP_U_BigVector<IVP_Compact_Ledge>*)
00131430 t IVP_SurfaceManager_Ball::get_all_ledges_within_radius(IVP_U_Point const*, double, IVP_Compact_Ledge const*, IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_U_BigVector<IVP_Compact_Ledge>*)
00131360 t IVP_SurfaceManager_Ball::insert_all_ledges_hitting_ray(IVP_Ray_Solver*, IVP_Real_Object*)
00131300 t IVP_SurfaceManager_Ball::get_type()
001314b0 t IVP_SurfaceManager_Ball::~IVP_SurfaceManager_Ball()
00131310 t IVP_SurfaceManager_Ball::~IVP_SurfaceManager_Ball()
00131310 t IVP_SurfaceManager_Ball::~IVP_SurfaceManager_Ball()
000da960 t IVP_Template_Car_System::IVP_Template_Car_System(int, int)
000da960 t IVP_Template_Car_System::IVP_Template_Car_System(int, int)
000d5750 t IVP_Template_Check_Dist::IVP_Template_Check_Dist()
000d5750 t IVP_Template_Check_Dist::IVP_Template_Check_Dist()
000e16a0 t IVP_Template_Constraint::sort_coordinates(IVP_Template_Constraint const&)
000e2060 t IVP_Template_Constraint::fix_rotation_axis(IVP_COORDINATE_INDEX)
000e1570 t IVP_Template_Constraint::set_constraint_ws(IVP_Real_Object*, IVP_U_Point const*, IVP_U_Point const*, unsigned int, unsigned int, IVP_Real_Object*, IVP_U_Matrix const*)
000e2080 t IVP_Template_Constraint::free_rotation_axis(IVP_COORDINATE_INDEX)
000e1270 t IVP_Template_Constraint::set_constraint_Ros(IVP_Real_Object*, IVP_U_Point const*, IVP_U_Point const*, unsigned int, unsigned int, IVP_Real_Object*, IVP_U_Matrix const*)
000e20a0 t IVP_Template_Constraint::limit_rotation_axis(IVP_COORDINATE_INDEX, float, float)
000e1e80 t IVP_Template_Constraint::set_attached_object(IVP_Real_Object*)
000e1f30 t IVP_Template_Constraint::fix_translation_axis(IVP_COORDINATE_INDEX)
000e1ea0 t IVP_Template_Constraint::set_fixing_point_Ros(IVP_U_Point const*)
000e1e70 t IVP_Template_Constraint::set_reference_object(IVP_Real_Object*)
000e1f50 t IVP_Template_Constraint::free_translation_axis(IVP_COORDINATE_INDEX)
000e2000 t IVP_Template_Constraint::set_rotation_axes_Ros(IVP_U_Matrix3 const*)
000e1f70 t IVP_Template_Constraint::limit_translation_axis(IVP_COORDINATE_INDEX, float, float)
000e2110 t IVP_Template_Constraint::set_max_rotation_impulse(IVP_COORDINATE_INDEX, IVP_CONSTRAINT_FORCE_EXCEED, float)
000e20d0 t IVP_Template_Constraint::set_max_rotation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
000e1ee0 t IVP_Template_Constraint::set_translation_axes_Ros(IVP_U_Matrix3 const*)
000e21b0 t IVP_Template_Constraint::set_constraint_is_relaxed()
000e1fe0 t IVP_Template_Constraint::set_max_translation_impulse(IVP_COORDINATE_INDEX, IVP_CONSTRAINT_FORCE_EXCEED, float)
000e1fa0 t IVP_Template_Constraint::set_max_translation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
000e2170 t IVP_Template_Constraint::set_attached_fixing_point_Aos(IVP_U_Point const*)
000e1680 t IVP_Template_Constraint::set_stiffness_for_limited_axis(float)
000e2130 t IVP_Template_Constraint::set_attached_translation_axes_Aos(IVP_U_Matrix3 const*)
000e1f10 t IVP_Template_Constraint::set_translation_axes_as_object_space()
000e2040 t IVP_Template_Constraint::set_rotation_axes_as_translation_axes()
000e1100 t IVP_Template_Constraint::IVP_Template_Constraint()
000e1100 t IVP_Template_Constraint::IVP_Template_Constraint()
000d5950 t IVP_Template_Four_Point::IVP_Template_Four_Point()
000d5950 t IVP_Template_Four_Point::IVP_Template_Four_Point()
000d5980 t IVP_Template_Stabilizer::IVP_Template_Stabilizer()
000d5980 t IVP_Template_Stabilizer::IVP_Template_Stabilizer()
000d8300 t IVP_Template_Suspension::IVP_Template_Suspension()
000d8300 t IVP_Template_Suspension::IVP_Template_Suspension()
0010c8a0 t IVP_U_Active_Test_Range::active_float_changed(IVP_U_Active_Float*)
0010b940 t IVP_U_Active_Test_Range::print()
0010db40 t IVP_U_Active_Test_Range::IVP_U_Active_Test_Range(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0010db40 t IVP_U_Active_Test_Range::IVP_U_Active_Test_Range(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0010ca90 t IVP_U_Active_Test_Range::~IVP_U_Active_Test_Range()
0010ca20 t IVP_U_Active_Test_Range::~IVP_U_Active_Test_Range()
0010ca20 t IVP_U_Active_Test_Range::~IVP_U_Active_Test_Range()
000ea6d0 t IVP_Vector_of_Cores_128::IVP_Vector_of_Cores_128()
000ea6d0 t IVP_Vector_of_Cores_128::IVP_Vector_of_Cores_128()
000ea6b0 t IVP_Vector_of_Hulls_128::IVP_Vector_of_Hulls_128()
000ea6b0 t IVP_Vector_of_Hulls_128::IVP_Vector_of_Hulls_128()
0010af40 t IVP_Vector_of_Ledges_16::IVP_Vector_of_Ledges_16()
0010af40 t IVP_Vector_of_Ledges_16::IVP_Vector_of_Ledges_16()
00048080 t CLiquidSurfaceDescriptor::calc_liquid_surface(IVP_Environment*, IVP_Core*, IVP_U_Float_Hesse*, IVP_U_Float_Point*)
00047f00 t CLiquidSurfaceDescriptor::~CLiquidSurfaceDescriptor()
00047e80 t CLiquidSurfaceDescriptor::~CLiquidSurfaceDescriptor()
00047e80 t CLiquidSurfaceDescriptor::~CLiquidSurfaceDescriptor()
0004bb00 t CPhysicsMotionController::GetObjects(IPhysicsObject**)
0004b5b0 t CPhysicsMotionController::RemoveCore(IVP_Core*)
0004ad10 t CPhysicsMotionController::SetPriority(IPhysicsMotionController::priority_t)
0004bb70 t CPhysicsMotionController::WakeObjects()
0004b860 t CPhysicsMotionController::AttachObject(IPhysicsObject*, bool)
0004bc10 t CPhysicsMotionController::ClearObjects()
0004bae0 t CPhysicsMotionController::CountObjects()
0004b620 t CPhysicsMotionController::DetachObject(IPhysicsObject*)
0004ad60 t CPhysicsMotionController::SetEventHandler(IMotionEvent*)
0004b920 t CPhysicsMotionController::WriteToTemplate(vphysics_save_motioncontroller_t&)
0004b500 t CPhysicsMotionController::InitFromTemplate(vphysics_save_motioncontroller_t const&)
0004bac0 t CPhysicsMotionController::get_controller_name()
0004acf0 t CPhysicsMotionController::get_controller_priority()
0004ad70 t CPhysicsMotionController::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
0004bc50 t CPhysicsMotionController::core_is_going_to_be_deleted_event(IVP_Core*)
0004b4b0 t CPhysicsMotionController::CPhysicsMotionController(IMotionEvent*, CPhysicsEnvironment*)
0004b4b0 t CPhysicsMotionController::CPhysicsMotionController(IMotionEvent*, CPhysicsEnvironment*)
0004b720 t CPhysicsMotionController::~CPhysicsMotionController()
0004b650 t CPhysicsMotionController::~CPhysicsMotionController()
0004b650 t CPhysicsMotionController::~CPhysicsMotionController()
00048950 t IPhysicsFrictionSnapshot::~IPhysicsFrictionSnapshot()
00048940 t IPhysicsFrictionSnapshot::~IPhysicsFrictionSnapshot()
00048940 t IPhysicsFrictionSnapshot::~IPhysicsFrictionSnapshot()
0004bb40 t IPhysicsMotionController::~IPhysicsMotionController()
0004bab0 t IPhysicsMotionController::~IPhysicsMotionController()
0004bab0 t IPhysicsMotionController::~IPhysicsMotionController()
00053ee0 t IPhysicsPlayerController::~IPhysicsPlayerController()
00053b00 t IPhysicsPlayerController::~IPhysicsPlayerController()
00053b00 t IPhysicsPlayerController::~IPhysicsPlayerController()
00053f00 t IPhysicsShadowController::~IPhysicsShadowController()
00053af0 t IPhysicsShadowController::~IPhysicsShadowController()
00053af0 t IPhysicsShadowController::~IPhysicsShadowController()
0010a4e0 t IVP_Cache_Object_Manager::cache_object_at(int)
00109f90 t IVP_Cache_Object_Manager::get_cache_object(IVP_Real_Object*)
00109b80 t IVP_Cache_Object_Manager::invalid_cache_object(IVP_Real_Object*)
00109ba0 t IVP_Cache_Object_Manager::IVP_Cache_Object_Manager(int)
00109ba0 t IVP_Cache_Object_Manager::IVP_Cache_Object_Manager(int)
00109c00 t IVP_Cache_Object_Manager::~IVP_Cache_Object_Manager()
00109c00 t IVP_Cache_Object_Manager::~IVP_Cache_Object_Manager()
001323a0 t IVP_Calc_Next_PSI_Solver::set_transformation(IVP_U_Quat const*, IVP_U_Point const*, IVP_BOOL)
00131710 t IVP_Calc_Next_PSI_Solver::calc_next_PSI_matrix(IVP_Event_Sim*, IVP_U_Vector<IVP_Hull_Manager_Base>*)
00131560 t IVP_Calc_Next_PSI_Solver::calc_psi_rotation_axis(IVP_U_Quat const*)
00132990 t IVP_Calc_Next_PSI_Solver::commit_one_hull_manager(IVP_Environment*, IVP_U_Vector<IVP_Hull_Manager_Base>*)
00132a60 t IVP_Calc_Next_PSI_Solver::commit_all_hull_managers(IVP_Environment*, IVP_U_Vector<IVP_Hull_Manager_Base>*)
00132860 t IVP_Calc_Next_PSI_Solver::commit_all_calc_next_PSI_matrix(IVP_Environment*, IVP_U_Vector<IVP_Core>*, IVP_U_Vector<IVP_Hull_Manager_Base>*)
00131520 t IVP_Calc_Next_PSI_Solver::get_longest_time_step_dependent_on_rot()
000d2cd0 t IVP_Compact_Ledge_Solver::calc_qlen_KK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
000d1480 t IVP_Compact_Ledge_Solver::get_all_ledges(IVP_Compact_Surface const*, IVP_U_BigVector<IVP_Compact_Ledge>*)
000d1380 t IVP_Compact_Ledge_Solver::get_all_ledges(IVP_Compact_Ledgetree_Node const*, IVP_U_BigVector<IVP_Compact_Ledge>*)
000d1220 t IVP_Compact_Ledge_Solver::calc_bounding_box(IVP_Compact_Ledge const*, IVP_U_Point*, IVP_U_Point*)
000d1d20 t IVP_Compact_Ledge_Solver::calc_hesse_object(IVP_Compact_Edge const*, IVP_Compact_Ledge const*, IVP_U_Hesse*)
000d14a0 t IVP_Compact_Ledge_Solver::calc_pos_other_space(IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*, IVP_U_Point*)
000d28a0 t IVP_Compact_Ledge_Solver::calc_qlen_PF_F_space(IVP_Compact_Ledge const*, IVP_Compact_Triangle const*, IVP_U_Point const*)
000d2b10 t IVP_Compact_Ledge_Solver::calc_qlen_PK_K_space(IVP_U_Point const*, IVP_Compact_Ledge const*, IVP_Compact_Edge const*)
000d2aa0 t IVP_Compact_Ledge_Solver::calc_qlen_PP_P_space(IVP_Compact_Ledge const*, IVP_Compact_Edge const*, IVP_U_Point const*)
000d2cb0 t IVP_Compact_Ledge_Solver::give_world_coords_AT(IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_U_Point*)
000d2360 t IVP_Compact_Ledge_Solver::calc_unscaled_KK_vals(IVP_KK_Input const&, IVP_Unscaled_KK_Result*)
00124740 t IVP_Compact_Ledge_Solver::minimize_on_other_side(IVP_Compact_Edge const*, IVP_U_Point const*)
000d16d0 t IVP_Compact_Ledge_Solver::transform_pos_other_space(IVP_U_Float_Point const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*, IVP_U_Point*)
000d15e0 t IVP_Compact_Ledge_Solver::transform_vec_other_space(IVP_U_Point const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*, IVP_U_Point*)
000d13e0 t IVP_Compact_Ledge_Solver::calc_geom_center_and_radius(IVP_Compact_Ledge const*, IVP_U_Point*, double*)
000d1e60 t IVP_Compact_Ledge_Solver::calc_radius_to_given_center(IVP_Compact_Ledge const*, IVP_U_Point const*, double*, double*)
000d2010 t IVP_Compact_Ledge_Solver::calc_radius_to_given_center(IVP_Compact_Surface const*, IVP_U_Point const*, double*, double*)
000d1810 t IVP_Compact_Ledge_Solver::calc_unscaled_s_val_K_space(IVP_Compact_Ledge const*, IVP_Compact_Edge const*, IVP_U_Point const*, IVP_Unscaled_S_Result*)
000d1960 t IVP_Compact_Ledge_Solver::calc_unscaled_qr_vals_F_space(IVP_Compact_Ledge const*, IVP_Compact_Edge const*, IVP_U_Point const*, IVP_Unscaled_QR_Result*)
000d21e0 t IVP_Compact_Ledge_Solver::quad_dist_edge_to_point_K_space(IVP_Compact_Ledge const*, IVP_Compact_Edge const*, IVP_U_Point const*)
000d1d80 t IVP_Compact_Ledge_Solver::calc_hesse_vec_object_not_normized(IVP_Compact_Edge const*, IVP_Compact_Ledge const*, IVP_U_Point*)
000d20f0 t IVP_Compact_Ledge_Solver::calc_hesse_vec_object_not_normized(IVP_Compact_Edge const*, IVP_Compact_Ledge const*, IVP_U_Float_Point*)
00103980 t IVP_Controller_Dependent::~IVP_Controller_Dependent()
00103950 t IVP_Controller_Dependent::~IVP_Controller_Dependent()
00103950 t IVP_Controller_Dependent::~IVP_Controller_Dependent()
00122930 t IVP_Mindist_Event_Solver::next_event_BB(IVP_Mindist_Event_Solver*)
00123df0 t IVP_Mindist_Event_Solver::next_event_B_POLY(IVP_Mindist_Event_Solver*)
001226f0 t IVP_Mindist_Event_Solver::calc_next_event_BB(IVP_Cache_Object*, IVP_Cache_Object*)
001210a0 t IVP_Mindist_Event_Solver::calc_next_event_BF(IVP_Compact_Edge const*, IVP_Cache_Object*, IVP_Cache_Ledge_Point*)
00123790 t IVP_Mindist_Event_Solver::calc_next_event_BK(IVP_Ball*, IVP_Compact_Edge const*, IVP_Cache_Object*, IVP_Cache_Ledge_Point*)
00122180 t IVP_Mindist_Event_Solver::calc_next_event_BP(IVP_Ball*, IVP_Compact_Edge const*, IVP_Cache_Object*, IVP_Cache_Ledge_Point*)
001212e0 t IVP_Mindist_Event_Solver::calc_next_event_KK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00120a90 t IVP_Mindist_Event_Solver::calc_next_event_PF(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00122a40 t IVP_Mindist_Event_Solver::calc_next_event_PK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00121a80 t IVP_Mindist_Event_Solver::calc_next_event_PP(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
001afa60 b IVP_Mindist_Event_Solver::mim_function_table
00120190 t IVP_Mindist_Event_Solver::next_event_illegal(IVP_Mindist_Event_Solver*)
00124020 t IVP_Mindist_Event_Solver::init_mim_function_table()
00123480 t IVP_Mindist_Event_Solver::next_event_default_poly_poly(IVP_Mindist_Event_Solver*)
000b4420 t IVP_Object_Polygon_Tetra::p_link_edge(IVP_Tri_Edge*, IVP_Tri_Edge*)
000b43c0 t IVP_Object_Polygon_Tetra::hide_triangle(IVP_Triangle*)
000b3ea0 t IVP_Object_Polygon_Tetra::rate_tri_edge(IVP_Tri_Edge*)
000b3dc0 t IVP_Object_Polygon_Tetra::free_triangles()
000b46b0 t IVP_Object_Polygon_Tetra::make_triangles()
000b5760 t IVP_Object_Polygon_Tetra::pop_concav_edge(IVP_Tri_Edge*)
000b4160 t IVP_Object_Polygon_Tetra::calc_concavities()
000b62c0 t IVP_Object_Polygon_Tetra::insert_pierce_info()
000b3ef0 t IVP_Object_Polygon_Tetra::add_edge_to_min_list(IVP_Tri_Edge*, P_HASH_CLASS, double)
000b4ef0 t IVP_Object_Polygon_Tetra::calc_extrusion_point(IVP_Tri_Edge const*, IVP_U_Point*)
000b4d60 t IVP_Object_Polygon_Tetra::link_triangle_couple(IVP_Triangle*, IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Tri_Edge*)
000b5180 t IVP_Object_Polygon_Tetra::pop_problematic_edge(IVP_Tri_Edge*)
000b3840 t IVP_Object_Polygon_Tetra::final_convexify_check()
000b5710 t IVP_Object_Polygon_Tetra::link_existing_pop_edge(IVP_Tri_Edge*)
000b4560 t IVP_Object_Polygon_Tetra::get_an_edge_with_points(IVP_Poly_Point*, IVP_Poly_Point*)
000b4c00 t IVP_Object_Polygon_Tetra::generate_double_triangle(IVP_Poly_Point*, IVP_Poly_Point*, IVP_Poly_Point*)
000b3fb0 t IVP_Object_Polygon_Tetra::move_edge_to_normal_hash(IVP_Tri_Edge*)
000b4050 t IVP_Object_Polygon_Tetra::move_edge_to_epsilon_hash(IVP_Tri_Edge*)
000b42f0 t IVP_Object_Polygon_Tetra::move_edge_to_problem_hash(IVP_Tri_Edge*)
000b3f40 t IVP_Object_Polygon_Tetra::remove_edge_from_min_list(IVP_Tri_Edge*)
000b40f0 t IVP_Object_Polygon_Tetra::check_concavity_and_manage(IVP_Tri_Edge*, P_CONVEXIFY_STATE)
000b5680 t IVP_Object_Polygon_Tetra::record_intruding_convex_edges(IVP_Intrusion_Status*)
000b3990 t IVP_Object_Polygon_Tetra::check_konsistency_of_triangles()
000b4d20 t IVP_Object_Polygon_Tetra::make_double_triangle_permanent(IVP_Triangle*)
000b45a0 t IVP_Object_Polygon_Tetra::add_edge_into_point_to_edge_hash(IVP_Tri_Edge*)
000b4250 t IVP_Object_Polygon_Tetra::move_edge_to_convex_intrude_hash(IVP_Tri_Edge*)
000b5bd0 t IVP_Object_Polygon_Tetra::convexify()
000b36e0 t IVP_Object_Polygon_Tetra::IVP_Object_Polygon_Tetra(IVP_Template_Polygon*)
000b36e0 t IVP_Object_Polygon_Tetra::IVP_Object_Polygon_Tetra(IVP_Template_Polygon*)
000b3e50 t IVP_Object_Polygon_Tetra::~IVP_Object_Polygon_Tetra()
000b3e50 t IVP_Object_Polygon_Tetra::~IVP_Object_Polygon_Tetra()
00106320 t IVP_Solver_Core_Reaction::init_rot_ws(IVP_Core*, IVP_U_Point_4*, IVP_U_Point_4*, float)
00105b70 t IVP_Solver_Core_Reaction::init_trans_ws(IVP_U_Point const*, IVP_Core*, IVP_U_Point_4*, IVP_U_Point_4*, float)
00107f60 t IVP_Solver_Core_Reaction::invert_3x3_matrix()
001075c0 t IVP_Solver_Core_Reaction::exert_impulse_dim1(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
00107130 t IVP_Solver_Core_Reaction::exert_impulse_dim2(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
00106a80 t IVP_Solver_Core_Reaction::exert_impulse_dim3(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
00107e10 t IVP_Solver_Core_Reaction::exert_angular_impulse_dim1(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
00107bb0 t IVP_Solver_Core_Reaction::exert_angular_impulse_dim2(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
00107840 t IVP_Solver_Core_Reaction::exert_angular_impulse_dim3(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
00106950 t IVP_Solver_Core_Reaction::init_reaction_solver_rotation_ws(IVP_Core*, IVP_Core*, IVP_U_Float_Point*, IVP_U_Float_Point*, IVP_U_Float_Point*)
001067d0 t IVP_Solver_Core_Reaction::init_reaction_solver_translation_ws(IVP_Core*, IVP_Core*, IVP_U_Point&, IVP_U_Float_Point*, IVP_U_Float_Point*, IVP_U_Float_Point*)
0010b000 t IVP_Template_Real_Object::IVP_Template_Real_Object()
0010b000 t IVP_Template_Real_Object::IVP_Template_Real_Object()
0010b0e0 t IVP_Template_Real_Object::~IVP_Template_Real_Object()
0010b0e0 t IVP_Template_Real_Object::~IVP_Template_Real_Object()
0010af60 t IVP_Vector_of_Ledges_256::IVP_Vector_of_Ledges_256()
0010af60 t IVP_Vector_of_Ledges_256::IVP_Vector_of_Ledges_256()
00120150 t IVP_Vector_of_Ledges_256::~IVP_Vector_of_Ledges_256()
00120150 t IVP_Vector_of_Ledges_256::~IVP_Vector_of_Ledges_256()
000556e0 t vehicle_steeringparams_t::GetBaseMap()
001a53c0 d vehicle_steeringparams_t::m_DataMap
0007f2b0 t BreakableConstraintHelper::~BreakableConstraintHelper()
0007f2b0 t BreakableConstraintHelper::~BreakableConstraintHelper()
00040e00 t CPhysicsListenerCollision::core_left_volume(IVP_Controller_Phantom*, IVP_Core*)
00040e90 t CPhysicsListenerCollision::CorePairLessFunc(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&)
00040d80 t CPhysicsListenerCollision::core_entered_volume(IVP_Controller_Phantom*, IVP_Core*)
00041750 t CPhysicsListenerCollision::event_pre_collision(IVP_Event_Collision*)
00040d60 t CPhysicsListenerCollision::mindist_left_volume(IVP_Controller_Phantom*, IVP_Mindist_Base*)
00040a80 t CPhysicsListenerCollision::event_post_collision(IVP_Event_Collision*)
00040b20 t CPhysicsListenerCollision::event_friction_created(IVP_Event_Friction*)
00040c60 t CPhysicsListenerCollision::event_friction_deleted(IVP_Event_Friction*)
00040d40 t CPhysicsListenerCollision::mindist_entered_volume(IVP_Controller_Phantom*, IVP_Mindist_Base*)
0003ffa0 t CPhysicsListenerCollision::event_friction_pair_created(IVP_Friction_Core_Pair*)
0003fe60 t CPhysicsListenerCollision::event_friction_pair_deleted(IVP_Friction_Core_Pair*)
00040b10 t CPhysicsListenerCollision::event_collision_object_deleted(IVP_Real_Object*)
00040e80 t CPhysicsListenerCollision::phantom_is_going_to_be_deleted_event(IVP_Controller_Phantom*)
0003eb10 t CPhysicsListenerCollision::CPhysicsListenerCollision()
0003eb10 t CPhysicsListenerCollision::CPhysicsListenerCollision()
00042810 t CPhysicsListenerCollision::~CPhysicsListenerCollision()
000427d0 t CPhysicsListenerCollision::~CPhysicsListenerCollision()
000427d0 t CPhysicsListenerCollision::~CPhysicsListenerCollision()
0007d540 t hk_Ball_Socket_Constraint::init_constraint(void const*)
0007d590 t hk_Ball_Socket_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
0007d9f0 t hk_Ball_Socket_Constraint::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
0007da50 t hk_Ball_Socket_Constraint::get_constraint_dof()
0007d9b0 t hk_Ball_Socket_Constraint::write_to_blueprint(hk_Ball_Socket_BP*)
0007da40 t hk_Ball_Socket_Constraint::get_constraint_type()
0007d580 t hk_Ball_Socket_Constraint::get_vmq_storage_size()
0007db30 t hk_Ball_Socket_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
0007d970 t hk_Ball_Socket_Constraint::init_ball_socket_constraint(hk_Ball_Socket_BP const*)
0007d870 t hk_Ball_Socket_Constraint::hk_Ball_Socket_Constraint(hk_Environment*, hk_Ball_Socket_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0007d8f0 t hk_Ball_Socket_Constraint::hk_Ball_Socket_Constraint(hk_Local_Constraint_System*, hk_Ball_Socket_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0007d870 t hk_Ball_Socket_Constraint::hk_Ball_Socket_Constraint(hk_Environment*, hk_Ball_Socket_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0007d8f0 t hk_Ball_Socket_Constraint::hk_Ball_Socket_Constraint(hk_Local_Constraint_System*, hk_Ball_Socket_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0007da80 t hk_Ball_Socket_Constraint::~hk_Ball_Socket_Constraint()
0007da60 t hk_Ball_Socket_Constraint::~hk_Ball_Socket_Constraint()
0007da60 t hk_Ball_Socket_Constraint::~hk_Ball_Socket_Constraint()
000589d0 t IPhysicsVehicleController::~IPhysicsVehicleController()
000588f0 t IPhysicsVehicleController::~IPhysicsVehicleController()
000588f0 t IPhysicsVehicleController::~IPhysicsVehicleController()
00120920 t IVP_3D_Solver_KK_PARALLEL::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
000d6280 t IVP_Actuator_Force_Active::active_float_changed(IVP_U_Active_Float*)
000d72b0 t IVP_Actuator_Force_Active::IVP_Actuator_Force_Active(IVP_Environment*, IVP_Template_Force*)
000d72b0 t IVP_Actuator_Force_Active::IVP_Actuator_Force_Active(IVP_Environment*, IVP_Template_Force*)
000d6b30 t IVP_Actuator_Force_Active::~IVP_Actuator_Force_Active()
000d6ad0 t IVP_Actuator_Force_Active::~IVP_Actuator_Force_Active()
000d6ad0 t IVP_Actuator_Force_Active::~IVP_Actuator_Force_Active()
000dab60 t IVP_Constraint_Car_Object::IVP_Constraint_Car_Object(IVP_Constraint_Solver_Car*, IVP_Real_Object*, IVP_Real_Object*, IVP_U_Float_Point*)
000dab60 t IVP_Constraint_Car_Object::IVP_Constraint_Car_Object(IVP_Constraint_Solver_Car*, IVP_Real_Object*, IVP_Real_Object*, IVP_U_Float_Point*)
000dac70 t IVP_Constraint_Car_Object::~IVP_Constraint_Car_Object()
000dac70 t IVP_Constraint_Car_Object::~IVP_Constraint_Car_Object()
000dc600 t IVP_Constraint_Solver_Car::get_controller_name()
000dc140 t IVP_Constraint_Solver_Car::init_constraint_system(IVP_Environment*, IVP_Real_Object*, IVP_U_Vector<IVP_Real_Object>&, IVP_U_Vector<IVP_U_Float_Point>&)
000dc620 t IVP_Constraint_Solver_Car::get_controller_priority()
000dafa0 t IVP_Constraint_Solver_Car::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000dc5f0 t IVP_Constraint_Solver_Car::get_associated_controlled_cores()
000dc610 t IVP_Constraint_Solver_Car::get_minimum_simulation_frequency()
000daab0 t IVP_Constraint_Solver_Car::core_is_going_to_be_deleted_event(IVP_Core*)
000dac90 t IVP_Constraint_Solver_Car::do_simulation_controller_rotation(IVP_Event_Sim*, IVP_Core*, IVP_U_Matrix const*)
000dc3c0 t IVP_Constraint_Solver_Car::IVP_Constraint_Solver_Car(IVP_COORDINATE_INDEX, IVP_COORDINATE_INDEX, IVP_COORDINATE_INDEX, IVP_BOOL)
000dc3c0 t IVP_Constraint_Solver_Car::IVP_Constraint_Solver_Car(IVP_COORDINATE_INDEX, IVP_COORDINATE_INDEX, IVP_COORDINATE_INDEX, IVP_BOOL)
000dc5d0 t IVP_Constraint_Solver_Car::~IVP_Constraint_Solver_Car()
000dc460 t IVP_Constraint_Solver_Car::~IVP_Constraint_Solver_Car()
000dc460 t IVP_Constraint_Solver_Car::~IVP_Constraint_Solver_Car()
000d0860 t IVP_Meta_Collision_Filter::add_collision_filter(IVP_Collision_Filter*)
000d08a0 t IVP_Meta_Collision_Filter::remove_collision_filter(IVP_Collision_Filter*)
000d0470 t IVP_Meta_Collision_Filter::environment_will_be_deleted(IVP_Environment*)
000d0270 t IVP_Meta_Collision_Filter::check_objects_for_collision_detection(IVP_Real_Object*, IVP_Real_Object*)
000d0920 t IVP_Meta_Collision_Filter::IVP_Meta_Collision_Filter(IVP_BOOL)
000d0920 t IVP_Meta_Collision_Filter::IVP_Meta_Collision_Filter(IVP_BOOL)
000d03b0 t IVP_Meta_Collision_Filter::~IVP_Meta_Collision_Filter()
000d0350 t IVP_Meta_Collision_Filter::~IVP_Meta_Collision_Filter()
000d0350 t IVP_Meta_Collision_Filter::~IVP_Meta_Collision_Filter()
001019f0 t IVP_Object_Callback_Table::~IVP_Object_Callback_Table()
001019f0 t IVP_Object_Callback_Table::~IVP_Object_Callback_Table()
0010c5a0 t IVP_U_Active_Add_Multiple::active_float_changed(IVP_U_Active_Float*)
0010ba70 t IVP_U_Active_Add_Multiple::print()
0010d980 t IVP_U_Active_Add_Multiple::IVP_U_Active_Add_Multiple(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*, double)
0010d980 t IVP_U_Active_Add_Multiple::IVP_U_Active_Add_Multiple(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*, double)
0010cc00 t IVP_U_Active_Add_Multiple::~IVP_U_Active_Add_Multiple()
0010cba0 t IVP_U_Active_Add_Multiple::~IVP_U_Active_Add_Multiple()
0010cba0 t IVP_U_Active_Add_Multiple::~IVP_U_Active_Add_Multiple()
0010c910 t IVP_U_Active_Terminal_Int::update_int()
0010b890 t IVP_U_Active_Terminal_Int::print()
0010bdf0 t IVP_U_Active_Terminal_Int::set_int(int, IVP_BOOL)
0010d3a0 t IVP_U_Active_Terminal_Int::IVP_U_Active_Terminal_Int(char const*, int)
0010d3a0 t IVP_U_Active_Terminal_Int::IVP_U_Active_Terminal_Int(char const*, int)
0010df10 t IVP_U_Active_Terminal_Int::~IVP_U_Active_Terminal_Int()
0010dea0 t IVP_U_Active_Terminal_Int::~IVP_U_Active_Terminal_Int()
0010dea0 t IVP_U_Active_Terminal_Int::~IVP_U_Active_Terminal_Int()
00116ea0 t IVP_U_Min_Hash_Enumerator::get_next_element()
00116f00 t IVP_U_Min_Hash_Enumerator::get_next_element_lt(double)
00116e80 t IVP_U_Min_Hash_Enumerator::IVP_U_Min_Hash_Enumerator(IVP_U_Min_Hash*)
00116e80 t IVP_U_Min_Hash_Enumerator::IVP_U_Min_Hash_Enumerator(IVP_U_Min_Hash*)
001175c0 t IVP_U_Min_List_Enumerator::get_next_element()
00117620 t IVP_U_Min_List_Enumerator::get_next_element_lt(float)
001175f0 t IVP_U_Min_List_Enumerator::get_next_element_header()
001175a0 t IVP_U_Min_List_Enumerator::IVP_U_Min_List_Enumerator(IVP_U_Min_List*)
001175a0 t IVP_U_Min_List_Enumerator::IVP_U_Min_List_Enumerator(IVP_U_Min_List*)
0009a370 t IVV_Cluster_Min_Hash_Elem::~IVV_Cluster_Min_Hash_Elem()
0009a370 t IVV_Cluster_Min_Hash_Elem::~IVV_Cluster_Min_Hash_Elem()
00055210 t vehicle_operatingparams_t::GetBaseMap()
001a5460 d vehicle_operatingparams_t::m_DataMap
000342e0 t CPhysCollideCompactSurface::SetMassCenter(Vector const&)
00036b90 t CPhysCollideCompactSurface::InitCollideMap()
00034350 t CPhysCollideCompactSurface::SetOrthographicAreas(Vector const&)
00035970 t CPhysCollideCompactSurface::ComputeOrthographicAreas(float)
00036e10 t CPhysCollideCompactSurface::Init(char const*, unsigned int, int, bool)
00036c70 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(IVP_Compact_Surface*)
00036eb0 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(compactsurfaceheader_t const*, int, bool)
00036f20 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(char const*, unsigned int, int, bool)
00036c70 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(IVP_Compact_Surface*)
00036eb0 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(compactsurfaceheader_t const*, int, bool)
00036f20 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(char const*, unsigned int, int, bool)
00034db0 t CPhysCollideCompactSurface::~CPhysCollideCompactSurface()
00034d60 t CPhysCollideCompactSurface::~CPhysCollideCompactSurface()
00034d60 t CPhysCollideCompactSurface::~CPhysCollideCompactSurface()
00041050 t CPhysicsListenerConstraint::event_constraint_broken(IVP_Constraint*)
00041520 t CPhysicsListenerConstraint::event_constraint_broken(hk_Breakable_Constraint*)
0002f660 t CVPhysicsVirtualMeshWriter::LedgeCanBePacked(IVP_Compact_Ledge const*, virtualmeshlist_t const&)
0002f3c0 t CVPhysicsVirtualMeshWriter::DestroyPackedHull(virtualmeshhull_t*)
0002f3e0 t CVPhysicsVirtualMeshWriter::UnpackLedgeListFromHull(unsigned char*, virtualmeshhull_t*, IVP_Compact_Poly_Point*)
0002f2b0 t CVPhysicsVirtualMeshWriter::InitTwoSidedTriangleLege(triangleledge_t*, IVP_Compact_Poly_Point const*, int, int, int, int)
0002ff30 t CVPhysicsVirtualMeshWriter::CreatePackedHullFromLedges(virtualmeshlist_t const&, IVP_Compact_Ledge const**, int)
0002ef70 t CVPhysicsVirtualMeshWriter::UnpackCompactLedgeFromHull(IVP_Compact_Ledge*, int, IVP_Compact_Poly_Point const*, virtualmeshhull_t const*, int, bool)
0007c5d0 t hk_Local_Constraint_System::deactivate()
0007c950 t hk_Local_Constraint_System::get_epsilon()
0007c610 t hk_Local_Constraint_System::add_constraint(hk_Constraint*, int)
0007cb20 t hk_Local_Constraint_System::sort_constraints()
0007c890 t hk_Local_Constraint_System::solve_penetration(IVP_Real_Object*, IVP_Real_Object*)
0007cd40 t hk_Local_Constraint_System::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
0007c460 t hk_Local_Constraint_System::write_to_blueprint(hk_Local_Constraint_System_BP*)
0007c760 t hk_Local_Constraint_System::deactivate_silently()
0007c4a0 t hk_Local_Constraint_System::recalc_storage_size()
0007c960 t hk_Local_Constraint_System::report_square_error(float)
0007c300 t hk_Local_Constraint_System::entity_deletion_event(hk_Rigid_Body*)
0007c790 t hk_Local_Constraint_System::get_effected_entities(hk_Array<hk_Rigid_Body*>&)
0007d420 t hk_Local_Constraint_System::get_effector_priority()
0007c500 t hk_Local_Constraint_System::constraint_deletion_event(hk_Constraint*)
0007c810 t hk_Local_Constraint_System::get_constraints_in_system(hk_Array<hk_Constraint*>&)
0007c290 t hk_Local_Constraint_System::core_is_going_to_be_deleted_event(IVP_Core*)
0007c590 t hk_Local_Constraint_System::activate()
0007c3d0 t hk_Local_Constraint_System::hk_Local_Constraint_System(hk_Environment*, hk_Local_Constraint_System_BP*)
0007c3d0 t hk_Local_Constraint_System::hk_Local_Constraint_System(hk_Environment*, hk_Local_Constraint_System_BP*)
0007cb00 t hk_Local_Constraint_System::~hk_Local_Constraint_System()
0007c980 t hk_Local_Constraint_System::~hk_Local_Constraint_System()
0007c980 t hk_Local_Constraint_System::~hk_Local_Constraint_System()
0008ef10 t hk_Stiff_Spring_Constraint::set_length(float)
0008ead0 t hk_Stiff_Spring_Constraint::init_constraint(void const*)
0008eb30 t hk_Stiff_Spring_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
0008ef20 t hk_Stiff_Spring_Constraint::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
0008ef80 t hk_Stiff_Spring_Constraint::get_constraint_dof()
0008eda0 t hk_Stiff_Spring_Constraint::write_to_blueprint(hk_Stiff_Spring_BP*)
0008ef70 t hk_Stiff_Spring_Constraint::get_constraint_type()
0008eb20 t hk_Stiff_Spring_Constraint::get_vmq_storage_size()
0008efe0 t hk_Stiff_Spring_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
0008ed50 t hk_Stiff_Spring_Constraint::init_stiff_spring_constraint(hk_Stiff_Spring_BP const*)
0008edf0 t hk_Stiff_Spring_Constraint::hk_Stiff_Spring_Constraint(hk_Environment*, hk_Stiff_Spring_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008ee80 t hk_Stiff_Spring_Constraint::hk_Stiff_Spring_Constraint(hk_Local_Constraint_System*, hk_Stiff_Spring_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008edf0 t hk_Stiff_Spring_Constraint::hk_Stiff_Spring_Constraint(hk_Environment*, hk_Stiff_Spring_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008ee80 t hk_Stiff_Spring_Constraint::hk_Stiff_Spring_Constraint(hk_Local_Constraint_System*, hk_Stiff_Spring_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008efb0 t hk_Stiff_Spring_Constraint::~hk_Stiff_Spring_Constraint()
0008ef90 t hk_Stiff_Spring_Constraint::~hk_Stiff_Spring_Constraint()
0008ef90 t hk_Stiff_Spring_Constraint::~hk_Stiff_Spring_Constraint()
000d88f0 t IVP_Actuator_Spring_Active::active_float_changed(IVP_U_Active_Float*)
000d8af0 t IVP_Actuator_Spring_Active::IVP_Actuator_Spring_Active(IVP_Environment*, IVP_Template_Spring*)
000d8af0 t IVP_Actuator_Spring_Active::IVP_Actuator_Spring_Active(IVP_Environment*, IVP_Template_Spring*)
000d8240 t IVP_Actuator_Spring_Active::~IVP_Actuator_Spring_Active()
000d8190 t IVP_Actuator_Spring_Active::~IVP_Actuator_Spring_Active()
000d8190 t IVP_Actuator_Spring_Active::~IVP_Actuator_Spring_Active()
000d6540 t IVP_Actuator_Torque_Active::active_float_changed(IVP_U_Active_Float*)
000d6dd0 t IVP_Actuator_Torque_Active::IVP_Actuator_Torque_Active(IVP_Environment*, IVP_Template_Torque*)
000d6dd0 t IVP_Actuator_Torque_Active::IVP_Actuator_Torque_Active(IVP_Environment*, IVP_Template_Torque*)
000d6860 t IVP_Actuator_Torque_Active::~IVP_Actuator_Torque_Active()
000d67e0 t IVP_Actuator_Torque_Active::~IVP_Actuator_Torque_Active()
000d67e0 t IVP_Actuator_Torque_Active::~IVP_Actuator_Torque_Active()
000d9b50 t IVP_Car_System_Real_Wheels::do_steering(float, bool)
000d8ee0 t IVP_Car_System_Real_Wheels::get_skid_info(IVP_Wheel_Skid_Info*)
000d8db0 t IVP_Car_System_Real_Wheels::get_body_speed(IVP_COORDINATE_INDEX)
000d9100 t IVP_Car_System_Real_Wheels::set_powerslide(float, float)
000d9440 t IVP_Car_System_Real_Wheels::update_booster(float)
000da930 t IVP_Car_System_Real_Wheels::update_throttle(float)
000d94a0 t IVP_Car_System_Real_Wheels::activate_booster(float, float, float)
000d8d90 t IVP_Car_System_Real_Wheels::get_wheel_torque(IVP_POS_WHEEL)
000d91e0 t IVP_Car_System_Real_Wheels::do_steering_wheel(IVP_POS_WHEEL, float)
000d8f50 t IVP_Car_System_Real_Wheels::get_booster_delay()
000d9310 t IVP_Car_System_Real_Wheels::change_wheel_torque(IVP_POS_WHEEL, float)
000d9370 t IVP_Car_System_Real_Wheels::change_spring_length(IVP_POS_WHEEL, float)
000d9a70 t IVP_Car_System_Real_Wheels::event_object_deleted(IVP_Event_Object*)
000d9180 t IVP_Car_System_Real_Wheels::change_body_downforce(float)
000d93f0 t IVP_Car_System_Real_Wheels::change_max_body_force(IVP_POS_WHEEL, float)
000d8fe0 t IVP_Car_System_Real_Wheels::GetCarSystemDebugData(IVP_CarSystemDebugData_t&)
000d8fd0 t IVP_Car_System_Real_Wheels::SetCarSystemDebugData(IVP_CarSystemDebugData_t const&)
000d91b0 t IVP_Car_System_Real_Wheels::change_spring_constant(IVP_POS_WHEEL, float)
000da950 t IVP_Car_System_Real_Wheels::get_booster_time_to_go()
000da940 t IVP_Car_System_Real_Wheels::update_wheel_positions()
000d8d70 t IVP_Car_System_Real_Wheels::change_fast_turn_factor(float)
000d9410 t IVP_Car_System_Real_Wheels::change_spring_dampening(IVP_POS_WHEEL, float)
000d8e70 t IVP_Car_System_Real_Wheels::get_orig_axles_distance()
000d97a0 t IVP_Car_System_Real_Wheels::set_booster_acceleration(float)
000d9550 t IVP_Car_System_Real_Wheels::set_booster_acceleration(float) [clone .part.13]
000d93a0 t IVP_Car_System_Real_Wheels::change_spring_pre_tension(IVP_POS_WHEEL, float)
000d92b0 t IVP_Car_System_Real_Wheels::update_body_countertorque()
000d9340 t IVP_Car_System_Real_Wheels::change_stabilizer_constant(IVP_POS_AXIS, float)
000d8eb0 t IVP_Car_System_Real_Wheels::get_wheel_angular_velocity(IVP_POS_WHEEL)
000d8fa0 t IVP_Car_System_Real_Wheels::environment_will_be_deleted(IVP_Environment*)
000d9a50 t IVP_Car_System_Real_Wheels::change_wheel_speed_dampening(IVP_POS_WHEEL, float)
000d8e30 t IVP_Car_System_Real_Wheels::get_orig_front_wheel_distance()
000d93d0 t IVP_Car_System_Real_Wheels::change_spring_dampening_compression(IVP_POS_WHEEL, float)
000d99e0 t IVP_Car_System_Real_Wheels::fix_wheel(IVP_POS_WHEEL, IVP_BOOL)
000d9810 t IVP_Car_System_Real_Wheels::fix_wheel(IVP_POS_WHEEL, IVP_BOOL) [clone .part.17]
000d9d80 t IVP_Car_System_Real_Wheels::IVP_Car_System_Real_Wheels(IVP_Environment*, IVP_Template_Car_System*)
000d9d80 t IVP_Car_System_Real_Wheels::IVP_Car_System_Real_Wheels(IVP_Environment*, IVP_Template_Car_System*)
000d90b0 t IVP_Car_System_Real_Wheels::~IVP_Car_System_Real_Wheels()
000d8f60 t IVP_Car_System_Real_Wheels::~IVP_Car_System_Real_Wheels()
000d8f60 t IVP_Car_System_Real_Wheels::~IVP_Car_System_Real_Wheels()
000d0c80 t IVP_Compact_Ledgetree_Node::byte_swap_all(IVP_U_BigVector<IVP_Compact_Poly_Point>*)
000d0c30 t IVP_Compact_Ledgetree_Node::byte_swap()
001ad1d8 b IVP_Controller_Independent::empty_list
001038d0 t IVP_Controller_Independent::get_associated_controlled_cores()
00103960 t IVP_Controller_Independent::~IVP_Controller_Independent()
00103900 t IVP_Controller_Independent::~IVP_Controller_Independent()
00103900 t IVP_Controller_Independent::~IVP_Controller_Independent()
000de3c0 t IVP_Controller_Raycast_Car::do_steering(float, bool)
000de100 t IVP_Controller_Raycast_Car::get_skid_info(IVP_Wheel_Skid_Info*)
000de010 t IVP_Controller_Raycast_Car::get_body_speed(IVP_COORDINATE_INDEX)
000dfc80 t IVP_Controller_Raycast_Car::set_powerslide(float, float)
000dfc90 t IVP_Controller_Raycast_Car::update_booster(float)
000dfc60 t IVP_Controller_Raycast_Car::update_throttle(float)
000de370 t IVP_Controller_Raycast_Car::activate_booster(float, float, float)
000ddf20 t IVP_Controller_Raycast_Car::get_wheel_torque(IVP_POS_WHEEL)
000de330 t IVP_Controller_Raycast_Car::do_steering_wheel(IVP_POS_WHEEL, float)
000ddfe0 t IVP_Controller_Raycast_Car::get_booster_delay()
000dece0 t IVP_Controller_Raycast_Car::CalcSteeringForces(IVP_Raycast_Car_Wheel_Temp*, IVP_Core*, IVP_Event_Sim*, float*)
000de9a0 t IVP_Controller_Raycast_Car::DoSimulationShocks(IVP_Raycast_Car_Wheel_Temp*, IVP_Ray_Hit*, IVP_Event_Sim*, IVP_Core*)
000de500 t IVP_Controller_Raycast_Car::DoSimulationWheels(IVP_Ray_Solver_Template*, IVP_U_Matrix const*, IVP_Raycast_Car_Wheel_Temp*, IVP_Ray_Hit*, float*, IVP_Core*)
000dfba0 t IVP_Controller_Raycast_Car::InitRaycastCarAxes(IVP_Template_Car_System const*)
000df820 t IVP_Controller_Raycast_Car::InitRaycastCarBody(IVP_Template_Car_System const*)
000de440 t IVP_Controller_Raycast_Car::SetupWheelRaycasts(IVP_Ray_Solver_Template*, IVP_U_Matrix const*, IVP_Raycast_Car_Wheel_Temp*)
000df000 t IVP_Controller_Raycast_Car::ApplySteeringForces(IVP_Raycast_Car_Wheel_Temp*, IVP_Core*, IVP_Event_Sim*, float*)
000de300 t IVP_Controller_Raycast_Car::change_wheel_torque(IVP_POS_WHEEL, float)
000deba0 t IVP_Controller_Raycast_Car::DoSimulationBooster(IVP_Event_Sim*, IVP_Core*)
000ddf00 t IVP_Controller_Raycast_Car::change_spring_length(IVP_POS_WHEEL, float)
000df410 t IVP_Controller_Raycast_Car::DoSimulationSteering(IVP_Raycast_Car_Wheel_Temp*, IVP_Core*, IVP_Event_Sim*)
000df8d0 t IVP_Controller_Raycast_Car::InitRaycastCarWheels(IVP_Template_Car_System const*)
000ddf80 t IVP_Controller_Raycast_Car::change_body_downforce(float)
000dfc50 t IVP_Controller_Raycast_Car::change_max_body_force(IVP_POS_WHEEL, float)
000de230 t IVP_Controller_Raycast_Car::GetCarSystemDebugData(IVP_CarSystemDebugData_t&)
000de160 t IVP_Controller_Raycast_Car::SetCarSystemDebugData(IVP_CarSystemDebugData_t const&)
000dde70 t IVP_Controller_Raycast_Car::change_spring_constant(IVP_POS_WHEEL, float)
000dfca0 t IVP_Controller_Raycast_Car::get_booster_time_to_go()
000ddf70 t IVP_Controller_Raycast_Car::change_fast_turn_factor(float)
000dde90 t IVP_Controller_Raycast_Car::change_spring_dampening(IVP_POS_WHEEL, float)
000de8a0 t IVP_Controller_Raycast_Car::DoSimulationStabilizers(IVP_Raycast_Car_Wheel_Temp*)
000ddfb0 t IVP_Controller_Raycast_Car::get_controller_priority()
000de0c0 t IVP_Controller_Raycast_Car::get_orig_axles_distance()
000df490 t IVP_Controller_Raycast_Car::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000ddfc0 t IVP_Controller_Raycast_Car::set_booster_acceleration(float)
000dded0 t IVP_Controller_Raycast_Car::change_spring_pre_tension(IVP_POS_WHEEL, float)
000df740 t IVP_Controller_Raycast_Car::InitRaycastCarEnvironment(IVP_Environment*, IVP_Template_Car_System const*)
000dfc70 t IVP_Controller_Raycast_Car::update_body_countertorque()
000ddf50 t IVP_Controller_Raycast_Car::change_stabilizer_constant(IVP_POS_AXIS, float)
000ddff0 t IVP_Controller_Raycast_Car::get_wheel_angular_velocity(IVP_POS_WHEEL)
000de080 t IVP_Controller_Raycast_Car::get_orig_front_wheel_distance()
000dfc40 t IVP_Controller_Raycast_Car::get_associated_controlled_cores()
000dfc10 t IVP_Controller_Raycast_Car::core_is_going_to_be_deleted_event(IVP_Core*)
000ddeb0 t IVP_Controller_Raycast_Car::change_spring_dampening_compression(IVP_POS_WHEEL, float)
000dfce0 t IVP_Controller_Raycast_Car::get_axis(IVP_POS_AXIS)
000ddf30 t IVP_Controller_Raycast_Car::fix_wheel(IVP_POS_WHEEL, IVP_BOOL)
000dfcd0 t IVP_Controller_Raycast_Car::get_wheel(IVP_POS_WHEEL)
000dfac0 t IVP_Controller_Raycast_Car::IVP_Controller_Raycast_Car(IVP_Environment*, IVP_Template_Car_System const*)
000dfac0 t IVP_Controller_Raycast_Car::IVP_Controller_Raycast_Car(IVP_Environment*, IVP_Template_Car_System const*)
000df720 t IVP_Controller_Raycast_Car::~IVP_Controller_Raycast_Car()
000df670 t IVP_Controller_Raycast_Car::~IVP_Controller_Raycast_Car()
000df670 t IVP_Controller_Raycast_Car::~IVP_Controller_Raycast_Car()
00108080 t IVP_Event_Manager_Standard::simulate_time_events(IVP_Time_Manager*, IVP_Environment*, IVP_Time)
001087a0 t IVP_Event_Manager_Standard::~IVP_Event_Manager_Standard()
00108790 t IVP_Event_Manager_Standard::~IVP_Event_Manager_Standard()
00108790 t IVP_Event_Manager_Standard::~IVP_Event_Manager_Standard()
000ed590 t IVP_Friction_Info_For_Core::dist_number()
000ecad0 t IVP_Friction_Info_For_Core::set_all_dists_of_obj_neutral()
000ed510 t IVP_Friction_Info_For_Core::friction_info_delete_friction_dist(IVP_Contact_Point*)
000ed4d0 t IVP_Friction_Info_For_Core::friction_info_insert_friction_dist(IVP_Contact_Point*)
000f5170 t IVP_Great_Matrix_Many_Zero::lu_inverse(IVP_Great_Matrix_Many_Zero*, int*)
000f2ce0 t IVP_Great_Matrix_Many_Zero::copy_matrix(double*, double*)
000f2c70 t IVP_Great_Matrix_Many_Zero::copy_matrix(IVP_Great_Matrix_Many_Zero*)
000f32a0 t IVP_Great_Matrix_Many_Zero::test_result(double*, double*)
000f3640 t IVP_Great_Matrix_Many_Zero::mult_aligned()
000f2d50 t IVP_Great_Matrix_Many_Zero::exchange_rows(int, int)
000f2c10 t IVP_Great_Matrix_Many_Zero::debug_fill_zero()
000f2ad0 t IVP_Great_Matrix_Many_Zero::add_multiple_line(int, int, double)
000f3490 t IVP_Great_Matrix_Many_Zero::copy_to_sub_matrix(double*, IVP_Great_Matrix_Many_Zero*, int*)
000f2cd0 t IVP_Great_Matrix_Many_Zero::align_matrix_values()
000f2dc0 t IVP_Great_Matrix_Many_Zero::find_pivot_in_column(int)
000f31d0 t IVP_Great_Matrix_Many_Zero::matrix_multiplication(double*, double*)
000f2ab0 t IVP_Great_Matrix_Many_Zero::matrix_test_unequation()
000f3340 t IVP_Great_Matrix_Many_Zero::fill_from_bigger_matrix(IVP_Great_Matrix_Many_Zero*, int*, int)
000f2ac0 t IVP_Great_Matrix_Many_Zero::matrix_out_before_gauss()
000f2f60 t IVP_Great_Matrix_Many_Zero::solve_lower_null_matrix()
000f29b0 t IVP_Great_Matrix_Many_Zero::matrix_check_unequation_line(int)
000f31b0 t IVP_Great_Matrix_Many_Zero::solve_great_matrix_many_zero()
000f2e50 t IVP_Great_Matrix_Many_Zero::transform_to_lower_null_triangle()
000f3750 t IVP_Great_Matrix_Many_Zero::mult()
000f5240 t IVP_Great_Matrix_Many_Zero::invert(IVP_Great_Matrix_Many_Zero*)
000f49c0 t IVP_Great_Matrix_Many_Zero::lu_crout(int*, double*)
000f4dc0 t IVP_Great_Matrix_Many_Zero::lu_solve(int*)
000f3500 t IVP_Great_Matrix_Many_Zero::set_value(double, int, int)
000f32b0 t IVP_Great_Matrix_Many_Zero::IVP_Great_Matrix_Many_Zero(int)
000f3310 t IVP_Great_Matrix_Many_Zero::IVP_Great_Matrix_Many_Zero()
000f32b0 t IVP_Great_Matrix_Many_Zero::IVP_Great_Matrix_Many_Zero(int)
000f3310 t IVP_Great_Matrix_Many_Zero::IVP_Great_Matrix_Many_Zero()
000b7360 t IVP_Intrusion_Intersection::p()
000b72a0 t IVP_Intrusion_Intersection::print(char const*)
0010b2d0 t IVP_SurfaceManager_Polygon::add_reference_to_ledge(IVP_Compact_Ledge const*)
0010b3f0 t IVP_SurfaceManager_Polygon::get_all_terminal_ledges(IVP_U_BigVector<IVP_Compact_Ledge>*)
0010b2e0 t IVP_SurfaceManager_Polygon::remove_reference_to_ledge(IVP_Compact_Ledge const*)
0010b630 t IVP_SurfaceManager_Polygon::get_all_ledges_within_radius(IVP_U_Point const*, double, IVP_Compact_Ledge const*, IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_U_BigVector<IVP_Compact_Ledge>*)
0010b410 t IVP_SurfaceManager_Polygon::insert_all_ledges_hitting_ray(IVP_Ray_Solver*, IVP_Real_Object*)
0010b2c0 t IVP_SurfaceManager_Polygon::get_type()
0010b770 t IVP_SurfaceManager_Polygon::IVP_SurfaceManager_Polygon(IVP_Compact_Surface const*)
0010b750 t IVP_SurfaceManager_Polygon::IVP_SurfaceManager_Polygon()
0010b770 t IVP_SurfaceManager_Polygon::IVP_SurfaceManager_Polygon(IVP_Compact_Surface const*)
0010b750 t IVP_SurfaceManager_Polygon::IVP_SurfaceManager_Polygon()
0010b310 t IVP_SurfaceManager_Polygon::~IVP_SurfaceManager_Polygon()
0010b2f0 t IVP_SurfaceManager_Polygon::~IVP_SurfaceManager_Polygon()
0010b2f0 t IVP_SurfaceManager_Polygon::~IVP_SurfaceManager_Polygon()
0010bec0 t IVP_U_Active_Value_Manager::delay_active_int(IVP_U_Active_Int_Delayed*)
0010d490 t IVP_U_Active_Value_Manager::create_active_int(char const*, int)
0010c290 t IVP_U_Active_Value_Manager::insert_active_int(IVP_U_Active_Int*)
0010c150 t IVP_U_Active_Value_Manager::remove_active_int(IVP_U_Active_Int*)
0010be40 t IVP_U_Active_Value_Manager::delay_active_float(IVP_U_Active_Float_Delayed*)
0010d3e0 t IVP_U_Active_Value_Manager::install_active_int(char const*, int)
0010d040 t IVP_U_Active_Value_Manager::create_active_float(char const*, double)
0010c1c0 t IVP_U_Active_Value_Manager::insert_active_float(IVP_U_Active_Float*)
0010c0e0 t IVP_U_Active_Value_Manager::remove_active_float(IVP_U_Active_Float*)
0010d110 t IVP_U_Active_Value_Manager::install_active_float(char const*, double)
0010d550 t IVP_U_Active_Value_Manager::get_active_int_by_name(char const*)
0010d1e0 t IVP_U_Active_Value_Manager::get_active_float_by_name(char const*)
0010b790 t IVP_U_Active_Value_Manager::refresh_psi_active_values(IVP_Environment*)
0010d2e0 t IVP_U_Active_Value_Manager::init_active_values_generic()
0010dec0 t IVP_U_Active_Value_Manager::environment_will_be_deleted(IVP_Environment*)
0010bf40 t IVP_U_Active_Value_Manager::update_delayed_active_values()
0010dd80 t IVP_U_Active_Value_Manager::IVP_U_Active_Value_Manager(IVP_BOOL)
0010dd80 t IVP_U_Active_Value_Manager::IVP_U_Active_Value_Manager(IVP_BOOL)
0010dd60 t IVP_U_Active_Value_Manager::~IVP_U_Active_Value_Manager()
0010dc80 t IVP_U_Active_Value_Manager::~IVP_U_Active_Value_Manager()
0010dc80 t IVP_U_Active_Value_Manager::~IVP_U_Active_Value_Manager()
00055540 t vehicle_suspensionparams_t::GetBaseMap()
001a5400 d vehicle_suspensionparams_t::m_DataMap
000d6410 t IVP_Actuator_Rot_Mot_Active::active_float_changed(IVP_U_Active_Float*)
000d6f80 t IVP_Actuator_Rot_Mot_Active::IVP_Actuator_Rot_Mot_Active(IVP_Environment*, IVP_Template_Rot_Mot*)
000d6f80 t IVP_Actuator_Rot_Mot_Active::IVP_Actuator_Rot_Mot_Active(IVP_Environment*, IVP_Template_Rot_Mot*)
000d69a0 t IVP_Actuator_Rot_Mot_Active::~IVP_Actuator_Rot_Mot_Active()
000d6900 t IVP_Actuator_Rot_Mot_Active::~IVP_Actuator_Rot_Mot_Active()
000d6900 t IVP_Actuator_Rot_Mot_Active::~IVP_Actuator_Rot_Mot_Active()
001015d0 t IVP_Application_Environment::IVP_Application_Environment()
001015d0 t IVP_Application_Environment::IVP_Application_Environment()
001098c0 t IVP_BetterStatisticsmanager::remove_data_entity(IVP_BetterStatisticsmanager_Data_Entity*)
00109880 t IVP_BetterStatisticsmanager::install_data_entity(IVP_BetterStatisticsmanager_Data_Entity*)
00109830 t IVP_BetterStatisticsmanager::set_simulation_time(double)
001099b0 t IVP_BetterStatisticsmanager::remove_output_callback(IVP_BetterStatisticsmanager_Callback_Interface*)
00109970 t IVP_BetterStatisticsmanager::install_output_callback(IVP_BetterStatisticsmanager_Callback_Interface*)
001097a0 t IVP_BetterStatisticsmanager::print()
00109a60 t IVP_BetterStatisticsmanager::enable()
00109a70 t IVP_BetterStatisticsmanager::disable()
00109a80 t IVP_BetterStatisticsmanager::get_state()
00109a90 t IVP_BetterStatisticsmanager::IVP_BetterStatisticsmanager()
00109a90 t IVP_BetterStatisticsmanager::IVP_BetterStatisticsmanager()
00109ae0 t IVP_BetterStatisticsmanager::~IVP_BetterStatisticsmanager()
00109ae0 t IVP_BetterStatisticsmanager::~IVP_BetterStatisticsmanager()
000b09c0 t IVP_Compact_Ledge_Generator::prepare_compact_ledge(IVP_U_Vector<IVP_Triangle>*)
000b0d40 t IVP_Compact_Ledge_Generator::generate_compact_ledge(unsigned char*)
000b0930 t IVP_Compact_Ledge_Generator::IVP_Compact_Ledge_Generator()
000b0930 t IVP_Compact_Ledge_Generator::IVP_Compact_Ledge_Generator()
000b0e20 t IVP_Compact_Ledge_Generator::~IVP_Compact_Ledge_Generator()
000b0e20 t IVP_Compact_Ledge_Generator::~IVP_Compact_Ledge_Generator()
0012ef00 t IVP_Constraint_Local_Anchor::IVP_Constraint_Local_Anchor()
0012ef00 t IVP_Constraint_Local_Anchor::IVP_Constraint_Local_Anchor()
0012ef20 t IVP_Constraint_Local_Anchor::~IVP_Constraint_Local_Anchor()
0012ef20 t IVP_Constraint_Local_Anchor::~IVP_Constraint_Local_Anchor()
000fa9e0 t IVP_Impact_Solver_Long_Term::do_impact_long_term(IVP_Core**, float, IVP_Contact_Point*)
000fa480 t IVP_Impact_Solver_Long_Term::get_best_merge_core(IVP_Core*, IVP_Core*, IVP_Core*)
000fb630 t IVP_Impact_Solver_Long_Term::do_impact_of_two_objects(IVP_Mindist*, IVP_Real_Object*, IVP_Real_Object*)
000fa400 t IVP_Impact_Solver_Long_Term::find_second_critical_impact_core(IVP_Core*, IVP_Core*)
00124100 t IVP_Mindist_Minimize_Solver::minimize_BB(IVP_Mindist_Minimize_Solver*)
00124540 t IVP_Mindist_Minimize_Solver::minimize_FB(IVP_Mindist_Minimize_Solver*)
00124590 t IVP_Mindist_Minimize_Solver::minimize_KB(IVP_Mindist_Minimize_Solver*)
001245e0 t IVP_Mindist_Minimize_Solver::minimize_PB(IVP_Mindist_Minimize_Solver*)
00134540 t IVP_Mindist_Minimize_Solver::p_minimize_BF(IVP_Cache_Ball*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*)
00134050 t IVP_Mindist_Minimize_Solver::p_minimize_BK(IVP_Cache_Ball*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*)
00134120 t IVP_Mindist_Minimize_Solver::p_minimize_BP(IVP_Cache_Ball*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*)
00124c30 t IVP_Mindist_Minimize_Solver::p_minimize_FF(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
001358c0 t IVP_Mindist_Minimize_Solver::p_minimize_KK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00136d80 t IVP_Mindist_Minimize_Solver::p_minimize_PF(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
001357f0 t IVP_Mindist_Minimize_Solver::p_minimize_PK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00135210 t IVP_Mindist_Minimize_Solver::p_minimize_PP(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00124630 t IVP_Mindist_Minimize_Solver::init_loop_hash()
00124830 t IVP_Mindist_Minimize_Solver::pierce_mindist()
00124640 t IVP_Mindist_Minimize_Solver::check_loop_hash(IVP_SYNAPSE_POLYGON_STATUS, IVP_Compact_Edge const*, IVP_SYNAPSE_POLYGON_STATUS, IVP_Compact_Edge const*)
00124370 t IVP_Mindist_Minimize_Solver::minimize_B_POLY(IVP_Mindist_Minimize_Solver*)
001240d0 t IVP_Mindist_Minimize_Solver::minimize_illegal(IVP_Mindist_Minimize_Solver*)
001afaa0 b IVP_Mindist_Minimize_Solver::mms_function_table
00133a10 t IVP_Mindist_Minimize_Solver::p_minimize_Leave_BK(IVP_Cache_Ball*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*)
00136350 t IVP_Mindist_Minimize_Solver::p_minimize_Leave_KK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_KK_Input const&, IVP_Unscaled_KK_Result const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00135cb0 t IVP_Mindist_Minimize_Solver::p_minimize_Leave_PF(IVP_Compact_Edge const*, IVP_U_Point const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00134840 t IVP_Mindist_Minimize_Solver::p_minimize_Leave_PK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00124b00 t IVP_Mindist_Minimize_Solver::init_mms_function_table()
001256a0 t IVP_Mindist_Minimize_Solver::minimize_default_poly_poly(IVP_Mindist_Minimize_Solver*)
00125970 t IVP_Mindist_Minimize_Solver::minimize_swapped_poly_poly(IVP_Mindist_Minimize_Solver*)
00101400 t IVP_Real_Object_Fast_Static::IVP_Real_Object_Fast_Static(IVP_Cluster*, IVP_Template_Object const*)
00101400 t IVP_Real_Object_Fast_Static::IVP_Real_Object_Fast_Static(IVP_Cluster*, IVP_Template_Object const*)
001011c0 t IVP_Real_Object_Fast_Static::~IVP_Real_Object_Fast_Static()
00101150 t IVP_Real_Object_Fast_Static::~IVP_Real_Object_Fast_Static()
00101150 t IVP_Real_Object_Fast_Static::~IVP_Real_Object_Fast_Static()
00037cc0 t CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder()
00037cc0 t CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder()
0004a810 t IPhysicsSurfacePropsInternal::~IPhysicsSurfacePropsInternal()
0004a780 t IPhysicsSurfacePropsInternal::~IPhysicsSurfacePropsInternal()
0004a780 t IPhysicsSurfacePropsInternal::~IPhysicsSurfacePropsInternal()
00101f20 t IVP_Collision_Callback_Table::~IVP_Collision_Callback_Table()
00101f20 t IVP_Collision_Callback_Table::~IVP_Collision_Callback_Table()
0011c3c0 t IVP_Collision_Delegator_Root::~IVP_Collision_Delegator_Root()
0011c390 t IVP_Collision_Delegator_Root::~IVP_Collision_Delegator_Root()
0011c390 t IVP_Collision_Delegator_Root::~IVP_Collision_Delegator_Root()
000f6470 t IVP_Linear_Constraint_Solver::full_setup()
000f3b30 t IVP_Linear_Constraint_Solver::alloc_memory(IVP_U_Memory*)
000f77f0 t IVP_Linear_Constraint_Solver::debug_dep_var(int)
000f4330 t IVP_Linear_Constraint_Solver::debug_out_lcs()
000f6b90 t IVP_Linear_Constraint_Solver::startup_setup(int)
000f6640 t IVP_Linear_Constraint_Solver::get_fdirection()
000f4250 t IVP_Linear_Constraint_Solver::start_debug_lcs()
000f5d70 t IVP_Linear_Constraint_Solver::setup_l_u_solver()
000f4160 t IVP_Linear_Constraint_Solver::update_step_vars(double)
000f73c0 t IVP_Linear_Constraint_Solver::init_and_solve_lc(double*, double*, double*, int, int, IVP_U_Memory*)
000f3fa0 t IVP_Linear_Constraint_Solver::increase_step_count(int*)
000f6b40 t IVP_Linear_Constraint_Solver::decrement_sub_solver(int)
000f61e0 t IVP_Linear_Constraint_Solver::increment_sub_solver()
000f47b0 t IVP_Linear_Constraint_Solver::move_variable_to_end(int)
000f4920 t IVP_Linear_Constraint_Solver::debug_test_all_values()
000f46d0 t IVP_Linear_Constraint_Solver::get_values_when_setup()
000f4110 t IVP_Linear_Constraint_Solver::exchange_activ_inactiv(int)
000f3fb0 t IVP_Linear_Constraint_Solver::exchange_lcs_variables(int, int)
000f4800 t IVP_Linear_Constraint_Solver::full_setup_test_ranges()
000f4610 t IVP_Linear_Constraint_Solver::lcs_bubble_sort_x_vals()
000f3a70 t IVP_Linear_Constraint_Solver::numerical_stability_ok()
000f3870 t IVP_Linear_Constraint_Solver::mult_active_x_for_accel()
000f3920 t IVP_Linear_Constraint_Solver::mult_x_with_full_A_minus_b()
000f4000 t IVP_Linear_Constraint_Solver::do_a_little_random_permutation()
000f6d40 t IVP_Linear_Constraint_Solver::move_not_necessary_actives_to_inactives()
000f6dd0 t IVP_Linear_Constraint_Solver::solve_lc()
00098720 t IVP_SurfaceBuilder_Pointsoup::error_output(IVP_Template_Polygon*)
001ab9b0 b IVP_SurfaceBuilder_Pointsoup::single_tri_ledge
00098020 t IVP_SurfaceBuilder_Pointsoup::planes_to_template(IVP_U_Vector<IVP_U_Point>*, IVP_U_Vector<IVP_SurMan_PS_Plane>*)
00097fb0 t IVP_SurfaceBuilder_Pointsoup::get_offset_from_lineslist(IVP_Template_Line*, int, int, int, char*)
00097f60 t IVP_SurfaceBuilder_Pointsoup::get_offset_from_pointlist(IVP_Template_Point*, int, IVP_U_Point*)
00098da0 t IVP_SurfaceBuilder_Pointsoup::convert_triangle_to_compace_ledge(IVP_U_Point*, IVP_U_Point*, IVP_U_Point*)
00098fc0 t IVP_SurfaceBuilder_Pointsoup::convert_pointsoup_to_compact_ledge(IVP_U_Vector<IVP_U_Point>*)
00099760 t IVP_SurfaceBuilder_Pointsoup::convert_pointsoup_to_compact_surface(IVP_U_Vector<IVP_U_Point>*)
00099010 t IVP_SurfaceBuilder_Pointsoup::convert_pointsoup_to_compact_ledge_internal(IVP_U_Vector<IVP_U_Point>*)
00098880 t IVP_SurfaceBuilder_Pointsoup::try_to_build_convex_ledge_from_qhull_result(IVP_U_Vector<IVP_U_Point>*, IVP_BOOL*, char*, char*)
00098d70 t IVP_SurfaceBuilder_Pointsoup::cleanup()
0010bda0 t IVP_U_Active_Terminal_Double::set_double(double, IVP_BOOL)
0010c810 t IVP_U_Active_Terminal_Double::update_float()
0010b8b0 t IVP_U_Active_Terminal_Double::print()
0010cff0 t IVP_U_Active_Terminal_Double::IVP_U_Active_Terminal_Double(char const*, double)
0010cff0 t IVP_U_Active_Terminal_Double::IVP_U_Active_Terminal_Double(char const*, double)
0010dee0 t IVP_U_Active_Terminal_Double::~IVP_U_Active_Terminal_Double()
0010de80 t IVP_U_Active_Terminal_Double::~IVP_U_Active_Terminal_Double()
0010de80 t IVP_U_Active_Terminal_Double::~IVP_U_Active_Terminal_Double()
001a8970 b vehicleparams_t_DataDescInit::g_DataMapHolder
000b7280 t IVP_Intrusion_Included_Points::p()
000b7240 t IVP_Intrusion_Included_Points::print(char const*)
0010a850 t IVP_Liquid_Surface_Descriptor::~IVP_Liquid_Surface_Descriptor()
0010a810 t IVP_Liquid_Surface_Descriptor::~IVP_Liquid_Surface_Descriptor()
0010a810 t IVP_Liquid_Surface_Descriptor::~IVP_Liquid_Surface_Descriptor()
0010ac30 t IVP_PerformanceCounter_Simple::stop_pcount()
0010ac20 t IVP_PerformanceCounter_Simple::start_pcount()
0010abe0 t IVP_PerformanceCounter_Simple::environment_is_going_to_be_deleted(IVP_Environment*)
0010ac60 t IVP_PerformanceCounter_Simple::reset_and_print_performance_counters(IVP_Time)
0010ac10 t IVP_PerformanceCounter_Simple::pcount(IVP_PERFORMANCE_ELEMENT)
0010ae00 t IVP_PerformanceCounter_Simple::IVP_PerformanceCounter_Simple()
0010ae00 t IVP_PerformanceCounter_Simple::IVP_PerformanceCounter_Simple()
0010ac40 t IVP_PerformanceCounter_Simple::~IVP_PerformanceCounter_Simple()
0010ac00 t IVP_PerformanceCounter_Simple::~IVP_PerformanceCounter_Simple()
0010ac00 t IVP_PerformanceCounter_Simple::~IVP_PerformanceCounter_Simple()
00094860 t IVP_SurfaceBuilder_Ledge_Soup::insert_ledge(IVP_Compact_Ledge*)
00096640 t IVP_SurfaceBuilder_Ledge_Soup::build_ledgetree(IVV_Sphere*)
00094b10 t IVP_SurfaceBuilder_Ledge_Soup::ledges_to_spheres()
00095760 t IVP_SurfaceBuilder_Ledge_Soup::build_minimal_sphere(IVV_Sphere*, IVV_Sphere*)
00096000 t IVP_SurfaceBuilder_Ledge_Soup::calculate_boundingbox(IVP_U_Vector<IVV_Sphere>*, IVP_U_Float_Point*, IVP_U_Float_Point*)
000962f0 t IVP_SurfaceBuilder_Ledge_Soup::insert_compact_ledges()
00094960 t IVP_SurfaceBuilder_Ledge_Soup::build_root_convex_hull()
000963f0 t IVP_SurfaceBuilder_Ledge_Soup::allocate_compact_surface()
00095b50 t IVP_SurfaceBuilder_Ledge_Soup::cluster_spheres_bottomup(double)
00096920 t IVP_SurfaceBuilder_Ledge_Soup::create_compact_ledgetree()
00095440 t IVP_SurfaceBuilder_Ledge_Soup::combine_spheres_in_vector(IVV_Cluster_Min_Hash*)
00095370 t IVP_SurfaceBuilder_Ledge_Soup::generate_interval_minhash(float)
00096960 t IVP_SurfaceBuilder_Ledge_Soup::convert_ledges_to_templates(IVP_U_BigVector<IVP_Compact_Ledge>&, IVP_U_Vector<IVP_Template_Polygon>*)
00094ec0 t IVP_SurfaceBuilder_Ledge_Soup::ledges_to_boxes_and_spheres()
00096780 t IVP_SurfaceBuilder_Ledge_Soup::ledgetree_array_debug_output()
000948f0 t IVP_SurfaceBuilder_Ledge_Soup::add_ledge_tree_to_convex_hull(IVP_Compact_Recursive&, IVV_Sphere*)
00096840 t IVP_SurfaceBuilder_Ledge_Soup::insert_radius_in_compact_surface()
00097a30 t IVP_SurfaceBuilder_Ledge_Soup::cluster_spheres_topdown_mediancut(double)
00096180 t IVP_SurfaceBuilder_Ledge_Soup::recompile_point_indizes_of_compact_ledge(IVP_Compact_Ledge*, char*)
00096d30 t IVP_SurfaceBuilder_Ledge_Soup::cluster_spheres_topdown_mediancut_recursively(IVP_U_Vector<IVV_Sphere>*)
000956e0 t IVP_SurfaceBuilder_Ledge_Soup::remove_all_further_spherecombinations_from_hash(IVV_Cluster_Min_Hash*, int)
00095a80 t IVP_SurfaceBuilder_Ledge_Soup::replace_childspheres_in_spherelist_with_motherspheres()
00094a50 t IVP_SurfaceBuilder_Ledge_Soup::cleanup()
00097b20 t IVP_SurfaceBuilder_Ledge_Soup::compile(IVP_Template_Surbuild_LedgeSoup*)
00097dc0 t IVP_SurfaceBuilder_Ledge_Soup::IVP_SurfaceBuilder_Ledge_Soup()
00097dc0 t IVP_SurfaceBuilder_Ledge_Soup::IVP_SurfaceBuilder_Ledge_Soup()
00097c30 t IVP_SurfaceBuilder_Ledge_Soup::~IVP_SurfaceBuilder_Ledge_Soup()
00097c30 t IVP_SurfaceBuilder_Ledge_Soup::~IVP_SurfaceBuilder_Ledge_Soup()
00130e10 t IVP_Template_Controller_Golem::IVP_Template_Controller_Golem()
00130e10 t IVP_Template_Controller_Golem::IVP_Template_Controller_Golem()
001019d0 t IVP_Universe_Manager_Settings::IVP_Universe_Manager_Settings()
001019d0 t IVP_Universe_Manager_Settings::IVP_Universe_Manager_Settings()
000ddc50 t IVP_Attacher_To_Cores_Buoyancy::get_buoyancy_surface(IVP_Real_Object*)
000ddc40 t IVP_Attacher_To_Cores_Buoyancy::get_parameters_per_core(IVP_Core*)
000dda20 t IVP_Attacher_To_Cores_Buoyancy::IVP_Attacher_To_Cores_Buoyancy(IVP_Template_Buoyancy&, IVP_U_Set_Active<IVP_Core>*, IVP_Liquid_Surface_Descriptor*)
000dda20 t IVP_Attacher_To_Cores_Buoyancy::IVP_Attacher_To_Cores_Buoyancy(IVP_Template_Buoyancy&, IVP_U_Set_Active<IVP_Core>*, IVP_Liquid_Surface_Descriptor*)
000ddcf0 t IVP_Attacher_To_Cores_Buoyancy::~IVP_Attacher_To_Cores_Buoyancy()
000ddc60 t IVP_Attacher_To_Cores_Buoyancy::~IVP_Attacher_To_Cores_Buoyancy()
000ddc60 t IVP_Attacher_To_Cores_Buoyancy::~IVP_Attacher_To_Cores_Buoyancy()
001012f0 t IVP_Hull_Manager_Base_Gradient::IVP_Hull_Manager_Base_Gradient()
001012f0 t IVP_Hull_Manager_Base_Gradient::IVP_Hull_Manager_Base_Gradient()
00101300 t IVP_Hull_Manager_Base_Gradient::~IVP_Hull_Manager_Base_Gradient()
00101300 t IVP_Hull_Manager_Base_Gradient::~IVP_Hull_Manager_Base_Gradient()
00132ea0 t IVP_Object_Callback_Table_Hash::find_table(IVP_Real_Object*)
00132e10 t IVP_Object_Callback_Table_Hash::remove_table(IVP_Real_Object*)
00132d80 t IVP_Object_Callback_Table_Hash::object_to_index(IVP_Real_Object*)
00132dc0 t IVP_Object_Callback_Table_Hash::add_table(IVP_Object_Callback_Table*)
00132f30 t IVP_Object_Callback_Table_Hash::IVP_Object_Callback_Table_Hash(int)
00132f30 t IVP_Object_Callback_Table_Hash::IVP_Object_Callback_Table_Hash(int)
00132d60 t IVP_Object_Callback_Table_Hash::~IVP_Object_Callback_Table_Hash()
00132ce0 t IVP_Object_Callback_Table_Hash::~IVP_Object_Callback_Table_Hash()
00132ce0 t IVP_Object_Callback_Table_Hash::~IVP_Object_Callback_Table_Hash()
00059280 t IVP_SurfaceManager_VirtualMesh::add_reference_to_ledge(IVP_Compact_Ledge const*)
00058b40 t IVP_SurfaceManager_VirtualMesh::get_all_terminal_ledges(IVP_U_BigVector<IVP_Compact_Ledge>*)
00058fc0 t IVP_SurfaceManager_VirtualMesh::remove_reference_to_ledge(IVP_Compact_Ledge const*)
00059930 t IVP_SurfaceManager_VirtualMesh::get_all_ledges_within_radius(IVP_U_Point const*, double, IVP_Compact_Ledge const*, IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_U_BigVector<IVP_Compact_Ledge>*)
00059ba0 t IVP_SurfaceManager_VirtualMesh::insert_all_ledges_hitting_ray(IVP_Ray_Solver*, IVP_Real_Object*)
00059f60 t IVP_SurfaceManager_VirtualMesh::get_type()
000597f0 t IVP_SurfaceManager_VirtualMesh::IVP_SurfaceManager_VirtualMesh(CPhysCollideVirtualMesh*)
000597f0 t IVP_SurfaceManager_VirtualMesh::IVP_SurfaceManager_VirtualMesh(CPhysCollideVirtualMesh*)
00058b80 t IVP_SurfaceManager_VirtualMesh::~IVP_SurfaceManager_VirtualMesh()
00058b60 t IVP_SurfaceManager_VirtualMesh::~IVP_SurfaceManager_VirtualMesh()
00058b60 t IVP_SurfaceManager_VirtualMesh::~IVP_SurfaceManager_VirtualMesh()
00130a40 t IVP_Template_Controller_Motion::IVP_Template_Controller_Motion()
00130a40 t IVP_Template_Controller_Motion::IVP_Template_Controller_Motion()
0004f870 t vphysics_save_cphysicsobject_t::GetBaseMap()
001a44c0 d vphysics_save_cphysicsobject_t::m_DataMap
000541c0 t vphysics_save_cphysicsspring_t::GetBaseMap()
001a50e0 d vphysics_save_cphysicsspring_t::m_DataMap
001201c0 t IVP_3D_Solver_VEC_PARALLEL_AREA::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
001038f0 t IVP_Standard_Gravity_Controller::get_controller_name()
001051a0 t IVP_Standard_Gravity_Controller::set_standard_gravity(IVP_U_Point*)
001038e0 t IVP_Standard_Gravity_Controller::get_controller_priority()
001051e0 t IVP_Standard_Gravity_Controller::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00103920 t IVP_Standard_Gravity_Controller::core_is_going_to_be_deleted_event(IVP_Core*)
00103a00 t IVP_Standard_Gravity_Controller::~IVP_Standard_Gravity_Controller()
00103910 t IVP_Standard_Gravity_Controller::~IVP_Standard_Gravity_Controller()
00103910 t IVP_Standard_Gravity_Controller::~IVP_Standard_Gravity_Controller()
00038e20 t vphysics_save_constraintfixed_t::GetBaseMap()
001a3500 d vphysics_save_constraintfixed_t::m_DataMap
00038ef0 t vphysics_save_constrainthinge_t::GetBaseMap()
001a34e0 d vphysics_save_constrainthinge_t::m_DataMap
00066aa0 t CVPhysPtrUtlVectorSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
00066d70 t CVPhysPtrUtlVectorSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
0008e240 t hk_Ragdoll_Constraint_BP_Builder::set_ragdoll_constraint(hk_Rigid_Body*, hk_Rigid_Body*, hk_Vector3 const&, hk_Vector3 const&, hk_Vector3 const&, hk_Interval<float> const&, hk_Interval<float> const&, hk_Interval<float> const&, bool)
0008ccf0 t hk_Ragdoll_Constraint_BP_Builder::initialize_from_limited_ball_socket_bp(hk_Limited_Ball_Socket_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00094270 t IVP_SurfaceBuilder_Halfspacesoup::insert_point_into_list(IVP_U_Point*, IVP_U_Vector<IVP_U_Point>*, double)
00094330 t IVP_SurfaceBuilder_Halfspacesoup::convert_halfspacesoup_to_points(IVP_Halfspacesoup*, double, IVP_U_Vector<IVP_U_Point>*)
00094650 t IVP_SurfaceBuilder_Halfspacesoup::convert_halfspacesoup_to_compact_ledge(IVP_Halfspacesoup*, double)
00094710 t IVP_SurfaceBuilder_Halfspacesoup::convert_halfspacesoup_to_compact_surface(IVP_Halfspacesoup*, double)
001a8024 b physcollideheader_t_DataDescInit::g_DataMapHolder
00039160 t vphysics_save_constraintlength_t::GetBaseMap()
001a3480 d vphysics_save_constraintlength_t::m_DataMap
00039090 t vphysics_save_constraintpulley_t::GetBaseMap()
001a34a0 d vphysics_save_constraintpulley_t::m_DataMap
0004b3e0 t vphysics_save_motioncontroller_t::GetBaseMap()
001a43e0 d vphysics_save_motioncontroller_t::m_DataMap
0011c530 t IVP_Collision_Callback_Table_Hash::object_to_index(IVP_Real_Object*)
0011c510 t IVP_Collision_Callback_Table_Hash::~IVP_Collision_Callback_Table_Hash()
0011c490 t IVP_Collision_Callback_Table_Hash::~IVP_Collision_Callback_Table_Hash()
0011c490 t IVP_Collision_Callback_Table_Hash::~IVP_Collision_Callback_Table_Hash()
000db710 t IVP_Constraint_Solver_Car_Builder::disable_constraint(int)
000db740 t IVP_Constraint_Solver_Car_Builder::calc_pushing_behavior(int, int)
000dbfe0 t IVP_Constraint_Solver_Car_Builder::calc_constraint_matrix()
000db660 t IVP_Constraint_Solver_Car_Builder::IVP_Constraint_Solver_Car_Builder(IVP_Constraint_Solver_Car*)
000db660 t IVP_Constraint_Solver_Car_Builder::IVP_Constraint_Solver_Car_Builder(IVP_Constraint_Solver_Car*)
000e0700 t IVP_Multidimensional_Interpolator::sort_vectors(int)
000e10f0 t IVP_Multidimensional_Interpolator::get_nr_occupied()
000e10e0 t IVP_Multidimensional_Interpolator::get_nr_of_vectors()
000e0a00 t IVP_Multidimensional_Interpolator::add_new_input_solution_combination_stochastic(IVP_MI_Vector const*, IVP_MI_Vector const*)
000e07e0 t IVP_Multidimensional_Interpolator::add_new_input_solution_combination_conventional(IVP_MI_Vector const*, IVP_MI_Vector const*)
000e02e0 t IVP_Multidimensional_Interpolator::linfit(int, int, IVP_MI_Vector**, float*, float*)
000e0c10 t IVP_Multidimensional_Interpolator::IVP_Multidimensional_Interpolator(int, int, int)
000e0c10 t IVP_Multidimensional_Interpolator::IVP_Multidimensional_Interpolator(int, int, int)
000e1030 t IVP_Multidimensional_Interpolator::~IVP_Multidimensional_Interpolator()
000e1030 t IVP_Multidimensional_Interpolator::~IVP_Multidimensional_Interpolator()
00099ac0 t IVP_SurfaceBuilder_Polygon_Convex::convert_template_to_ledge(IVP_Template_Polygon*)
00099860 t IVP_SurfaceBuilder_Polygon_Convex::fill_list_with_all_triangles(IVP_U_Vector<IVP_Triangle>*)
00099fd0 t IVP_SurfaceBuilder_Polygon_Convex::get_and_remove_compact_ledge()
000998c0 t IVP_SurfaceBuilder_Polygon_Convex::init_surface_manager_polygon()
00099f80 t IVP_SurfaceBuilder_Polygon_Convex::convert_templateledgepolygonsoup_to_ledge(IVP_Template_Ledge_Polygon_Soup*)
00099a30 t IVP_SurfaceBuilder_Polygon_Convex::IVP_SurfaceBuilder_Polygon_Convex(IVP_Template_Polygon*)
00099b10 t IVP_SurfaceBuilder_Polygon_Convex::IVP_SurfaceBuilder_Polygon_Convex(IVP_Template_Ledge_Polygon_Soup*)
00099a30 t IVP_SurfaceBuilder_Polygon_Convex::IVP_SurfaceBuilder_Polygon_Convex(IVP_Template_Polygon*)
00099b10 t IVP_SurfaceBuilder_Polygon_Convex::IVP_SurfaceBuilder_Polygon_Convex(IVP_Template_Ledge_Polygon_Soup*)
000997e0 t IVP_SurfaceBuilder_Polygon_Convex::~IVP_SurfaceBuilder_Polygon_Convex()
000997e0 t IVP_SurfaceBuilder_Polygon_Convex::~IVP_SurfaceBuilder_Polygon_Convex()
0010b450 t IVP_SurfaceManager_Polygon_Solver::traverse_cluster(IVP_Compact_Ledgetree_Node const*, IVP_U_Point const*, double, IVP_U_BigVector<IVP_Compact_Ledge>*)
001a897c b vehicle_axleparams_t_DataDescInit::g_DataMapHolder
001a8988 b vehicle_bodyparams_t_DataDescInit::g_DataMapHolder
00039300 t vphysics_save_constraintragdoll_t::GetBaseMap()
001a3440 d vphysics_save_constraintragdoll_t::m_DataMap
00038fc0 t vphysics_save_constraintsliding_t::GetBaseMap()
001a34c0 d vphysics_save_constraintsliding_t::m_DataMap
000535c0 t vphysics_save_cshadowcontroller_t::GetBaseMap()
001a4bc0 d vphysics_save_cshadowcontroller_t::m_DataMap
0003dbc0 t CPhysics_Car_System_Raycast_Wheels::do_raycasts(IVP_Event_Sim*, int, IVP_Ray_Solver_Template*, IVP_Ray_Hit*, float*)
0003df60 t CPhysics_Car_System_Raycast_Wheels::get_controller_name()
0003de80 t CPhysics_Car_System_Raycast_Wheels::InitCarSystemWheels(IVP_Template_Car_System const*)
0003d890 t CPhysics_Car_System_Raycast_Wheels::update_wheel_positions()
0003df30 t CPhysics_Car_System_Raycast_Wheels::GetWheel(int)
0003ded0 t CPhysics_Car_System_Raycast_Wheels::CPhysics_Car_System_Raycast_Wheels(IVP_Environment*, IVP_Template_Car_System const*)
0003ded0 t CPhysics_Car_System_Raycast_Wheels::CPhysics_Car_System_Raycast_Wheels(IVP_Environment*, IVP_Template_Car_System const*)
0003dba0 t CPhysics_Car_System_Raycast_Wheels::~CPhysics_Car_System_Raycast_Wheels()
0003db70 t CPhysics_Car_System_Raycast_Wheels::~CPhysics_Car_System_Raycast_Wheels()
0003db70 t CPhysics_Car_System_Raycast_Wheels::~CPhysics_Car_System_Raycast_Wheels()
000b6b10 t IVP_Compact_Ledge_Find_Mass_Center::integrate_ledge(IVP_Compact_Ledge const*)
000b6b60 t IVP_Compact_Ledge_Find_Mass_Center::integrate_ledges(IVP_U_BigVector<IVP_Compact_Ledge>*)
000b6880 t IVP_Compact_Ledge_Find_Mass_Center::integrate_triangle(IVP_Compact_Ledge const*, IVP_Compact_Triangle const*)
000b63a0 t IVP_Compact_Ledge_Find_Mass_Center::IVP_Compact_Ledge_Find_Mass_Center()
000b63a0 t IVP_Compact_Ledge_Find_Mass_Center::IVP_Compact_Ledge_Find_Mass_Center()
001a8984 b vehicle_wheelparams_t_DataDescInit::g_DataMapHolder
00038bb0 t vphysics_save_cphysicsconstraint_t::GetBaseMap()
001a3560 d vphysics_save_cphysicsconstraint_t::m_DataMap
00055140 t vphysics_save_cvehiclecontroller_t::GetBaseMap()
001a5480 d vphysics_save_cvehiclecontroller_t::m_DataMap
001a8020 b compactsurfaceheader_t_DataDescInit::g_DataMapHolder
000d06d0 t IVP_Collision_Filter_Exclusive_Pair::generate_hash_entry(IVP_Real_Object*, IVP_Real_Object*, IVP_CFEP_Objectpair*)
000d0210 t IVP_Collision_Filter_Exclusive_Pair::environment_will_be_deleted(IVP_Environment*)
000d07a0 t IVP_Collision_Filter_Exclusive_Pair::enable_collision_between_objects(IVP_Real_Object*, IVP_Real_Object*)
000d0700 t IVP_Collision_Filter_Exclusive_Pair::disable_collision_between_objects(IVP_Real_Object*, IVP_Real_Object*)
000d0660 t IVP_Collision_Filter_Exclusive_Pair::check_objects_for_collision_detection(IVP_Real_Object*, IVP_Real_Object*)
000d0800 t IVP_Collision_Filter_Exclusive_Pair::IVP_Collision_Filter_Exclusive_Pair()
000d0800 t IVP_Collision_Filter_Exclusive_Pair::IVP_Collision_Filter_Exclusive_Pair()
000d02e0 t IVP_Collision_Filter_Exclusive_Pair::~IVP_Collision_Filter_Exclusive_Pair()
000d0230 t IVP_Collision_Filter_Exclusive_Pair::~IVP_Collision_Filter_Exclusive_Pair()
000d0230 t IVP_Collision_Filter_Exclusive_Pair::~IVP_Collision_Filter_Exclusive_Pair()
001a8974 b vehicle_engineparams_t_DataDescInit::g_DataMapHolder
00038d50 t vphysics_save_constraintaxislimit_t::GetBaseMap()
001a3520 d vphysics_save_constraintaxislimit_t::m_DataMap
00038c80 t vphysics_save_constraintbreakable_t::GetBaseMap()
001a3540 d vphysics_save_constraintbreakable_t::m_DataMap
000534f0 t vphysics_save_shadowcontrolparams_t::GetBaseMap()
001a4be0 d vphysics_save_shadowcontrolparams_t::m_DataMap
001209c0 t IVP_3D_Solver_DISTANCE_OF_TWO_POINTS::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
0011c190 t IVP_Collision_Delegator_Root_Mindist::delegate_collisions_for_object(IVP_Real_Object*, IVP_Real_Object*)
0011c130 t IVP_Collision_Delegator_Root_Mindist::collision_is_going_to_be_deleted_event(IVP_Collision*)
0011c110 t IVP_Collision_Delegator_Root_Mindist::environment_is_going_to_be_deleted_event(IVP_Environment*)
0011c0c0 t IVP_Collision_Delegator_Root_Mindist::object_is_removed_from_collision_detection(IVP_Real_Object*)
0011c320 t IVP_Collision_Delegator_Root_Mindist::IVP_Collision_Delegator_Root_Mindist()
0011c320 t IVP_Collision_Delegator_Root_Mindist::IVP_Collision_Delegator_Root_Mindist()
0011c300 t IVP_Collision_Delegator_Root_Mindist::~IVP_Collision_Delegator_Root_Mindist()
0011c2f0 t IVP_Collision_Delegator_Root_Mindist::~IVP_Collision_Delegator_Root_Mindist()
0011c2f0 t IVP_Collision_Delegator_Root_Mindist::~IVP_Collision_Delegator_Root_Mindist()
000b63c0 t IVP_Compact_Ledge_Mass_Center_Solver::integrate_triangle(IVP_Compact_Ledge const*, IVP_Compact_Triangle const*, int, int, int)
000b6380 t IVP_Compact_Ledge_Mass_Center_Solver::IVP_Compact_Ledge_Mass_Center_Solver(IVP_U_Matrix const*)
000b6380 t IVP_Compact_Ledge_Mass_Center_Solver::IVP_Compact_Ledge_Mass_Center_Solver(IVP_U_Matrix const*)
0010a760 t IVP_Liquid_Surface_Descriptor_Simple::calc_liquid_surface(IVP_Environment*, IVP_Core*, IVP_U_Float_Hesse*, IVP_U_Float_Point*)
0010a7b0 t IVP_Liquid_Surface_Descriptor_Simple::IVP_Liquid_Surface_Descriptor_Simple(IVP_U_Float_Hesse const*, IVP_U_Float_Point const*)
0010a7b0 t IVP_Liquid_Surface_Descriptor_Simple::IVP_Liquid_Surface_Descriptor_Simple(IVP_U_Float_Hesse const*, IVP_U_Float_Point const*)
0010a830 t IVP_Liquid_Surface_Descriptor_Simple::~IVP_Liquid_Surface_Descriptor_Simple()
0010a820 t IVP_Liquid_Surface_Descriptor_Simple::~IVP_Liquid_Surface_Descriptor_Simple()
0010a820 t IVP_Liquid_Surface_Descriptor_Simple::~IVP_Liquid_Surface_Descriptor_Simple()
00039230 t vphysics_save_constraintballsocket_t::GetBaseMap()
001a3460 d vphysics_save_constraintballsocket_t::m_DataMap
001a8978 b vehicle_steeringparams_t_DataDescInit::g_DataMapHolder
001a898c b vehicle_operatingparams_t_DataDescInit::g_DataMapHolder
00109610 t IVP_BetterStatisticsmanager_Data_Entity::set_position(int, int)
00109440 t IVP_BetterStatisticsmanager_Data_Entity::set_int_value(int)
00109470 t IVP_BetterStatisticsmanager_Data_Entity::set_array_size(int)
00109450 t IVP_BetterStatisticsmanager_Data_Entity::set_double_value(double)
00109500 t IVP_BetterStatisticsmanager_Data_Entity::set_int_array_latest_value(int)
00109550 t IVP_BetterStatisticsmanager_Data_Entity::set_double_array_latest_value(double)
001095a0 t IVP_BetterStatisticsmanager_Data_Entity::enable()
001095b0 t IVP_BetterStatisticsmanager_Data_Entity::disable()
001095d0 t IVP_BetterStatisticsmanager_Data_Entity::set_text(char const*)
001095c0 t IVP_BetterStatisticsmanager_Data_Entity::get_state()
00109630 t IVP_BetterStatisticsmanager_Data_Entity::IVP_BetterStatisticsmanager_Data_Entity(IVP_BETTERSTATISTICSMANAGER_DATA_ENTITY_TYPE)
00109630 t IVP_BetterStatisticsmanager_Data_Entity::IVP_BetterStatisticsmanager_Data_Entity(IVP_BETTERSTATISTICSMANAGER_DATA_ENTITY_TYPE)
00109770 t IVP_BetterStatisticsmanager_Data_Entity::~IVP_BetterStatisticsmanager_Data_Entity()
00109770 t IVP_BetterStatisticsmanager_Data_Entity::~IVP_BetterStatisticsmanager_Data_Entity()
001a8980 b vehicle_suspensionparams_t_DataDescInit::g_DataMapHolder
00038a40 t vphysics_save_cphysicsconstraintgroup_t::GetBaseMap()
001a3580 d vphysics_save_cphysicsconstraintgroup_t::m_DataMap
001a87c0 b vphysics_save_cphysicsobject_t_DataDescInit::g_DataMapHolder
001a8900 b vphysics_save_cphysicsspring_t_DataDescInit::g_DataMapHolder
000dfcb0 t IVP_Controller_Raycast_Car_Vector_of_Cores_1::IVP_Controller_Raycast_Car_Vector_of_Cores_1()
000dfcb0 t IVP_Controller_Raycast_Car_Vector_of_Cores_1::IVP_Controller_Raycast_Car_Vector_of_Cores_1()
000dfd00 t IVP_Controller_Raycast_Car_Vector_of_Cores_1::~IVP_Controller_Raycast_Car_Vector_of_Cores_1()
000dfd00 t IVP_Controller_Raycast_Car_Vector_of_Cores_1::~IVP_Controller_Raycast_Car_Vector_of_Cores_1()
001a8118 b vphysics_save_constraintfixed_t_DataDescInit::g_DataMapHolder
001a8114 b vphysics_save_constrainthinge_t_DataDescInit::g_DataMapHolder
001a8108 b vphysics_save_constraintlength_t_DataDescInit::g_DataMapHolder
001a810c b vphysics_save_constraintpulley_t_DataDescInit::g_DataMapHolder
001a8750 b vphysics_save_motioncontroller_t_DataDescInit::g_DataMapHolder
001a8100 b vphysics_save_constraintragdoll_t_DataDescInit::g_DataMapHolder
001a8110 b vphysics_save_constraintsliding_t_DataDescInit::g_DataMapHolder
001a8850 b vphysics_save_cshadowcontroller_t_DataDescInit::g_DataMapHolder
001a8124 b vphysics_save_cphysicsconstraint_t_DataDescInit::g_DataMapHolder
001a8990 b vphysics_save_cvehiclecontroller_t_DataDescInit::g_DataMapHolder
000340e0 t IVP_Controller_Raycast_Airboat_Vector_of_Cores_1::IVP_Controller_Raycast_Airboat_Vector_of_Cores_1()
000340e0 t IVP_Controller_Raycast_Airboat_Vector_of_Cores_1::IVP_Controller_Raycast_Airboat_Vector_of_Cores_1()
00034220 t IVP_Controller_Raycast_Airboat_Vector_of_Cores_1::~IVP_Controller_Raycast_Airboat_Vector_of_Cores_1()
00034220 t IVP_Controller_Raycast_Airboat_Vector_of_Cores_1::~IVP_Controller_Raycast_Airboat_Vector_of_Cores_1()
001a811c b vphysics_save_constraintaxislimit_t_DataDescInit::g_DataMapHolder
001a8120 b vphysics_save_constraintbreakable_t_DataDescInit::g_DataMapHolder
001a8854 b vphysics_save_shadowcontrolparams_t_DataDescInit::g_DataMapHolder
001a8104 b vphysics_save_constraintballsocket_t_DataDescInit::g_DataMapHolder
001a8128 b vphysics_save_cphysicsconstraintgroup_t_DataDescInit::g_DataMapHolder
00144cb0 t CWrap::~CWrap() [clone .constprop.2]
00069690 t ConVar::ClampValue(float&)
0006a3f0 t ConVar::SetDefault(char const*)
000692c0 t ConVar::InternalSetValue(char const*)
00069540 t ConVar::ChangeStringValue(char const*, float)
000696d0 t ConVar::InternalSetIntValue(int)
0006a340 t ConVar::InstallChangeCallback(void (*)(IConVar*, char const*, float))
000691d0 t ConVar::InternalSetFloatValue(float)
000690e0 t ConVar::Init()
000693e0 t ConVar::Create(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
0006a380 t ConVar::Revert()
00069080 t ConVar::AddFlags(int)
00069140 t ConVar::SetValue(float)
00069170 t ConVar::SetValue(int)
00069110 t ConVar::SetValue(char const*)
0006a020 t ConVar::ConVar(char const*, char const*, int)
0006a0c0 t ConVar::ConVar(char const*, char const*, int, char const*)
0006a160 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float)
0006a2a0 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
0006a200 t ConVar::ConVar(char const*, char const*, int, char const*, void (*)(IConVar*, char const*, float))
0006a020 t ConVar::ConVar(char const*, char const*, int)
0006a0c0 t ConVar::ConVar(char const*, char const*, int, char const*)
0006a160 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float)
0006a2a0 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
0006a200 t ConVar::ConVar(char const*, char const*, int, char const*, void (*)(IConVar*, char const*, float))
00069520 t ConVar::~ConVar()
000694e0 t ConVar::~ConVar()
000694e0 t ConVar::~ConVar()
00067110 t CDefOps<void*>::LessFunc(void* const&, void* const&)
0005a340 t CTSPool<CUtlVector<CPhysCollideVirtualMesh*, CUtlMemory<CPhysCollideVirtualMesh*, int> > >::~CTSPool()
0005a340 t CTSPool<CUtlVector<CPhysCollideVirtualMesh*, CUtlMemory<CPhysCollideVirtualMesh*, int> > >::~CTSPool()
00063cd0 t CTSPool<CVisitHash>::~CTSPool()
00063cd0 t CTSPool<CVisitHash>::~CTSPool()
00067260 t CUtlMap<void*, void*, unsigned short>::~CUtlMap()
00067260 t CUtlMap<void*, void*, unsigned short>::~CUtlMap()
001a6e90 d hk_Math::hk_random_seed
000927b0 t hk_Math::rand01()
000927a0 t hk_Math::srand01(unsigned int)
00069b70 t CCommand::DefaultBreakSet()
00069b50 t CCommand::Reset()
00069b80 t CCommand::Tokenize(char const*, characterset_t*)
00069a10 t CCommand::CCommand(int, char const**)
000699c0 t CCommand::CCommand()
00069a10 t CCommand::CCommand(int, char const**)
000699c0 t CCommand::CCommand()
001259a0 t CFmtStrN<256, false>::InitQuietTruncation()
001259b0 t CFmtStrN<256, false>::sprintf(char const*, ...)
0004a730 t CSurface::get_damping()
0004a720 t CSurface::get_adhesion()
0004a6f0 t CSurface::get_elasticity()
0004a6d0 t CSurface::get_friction_factor()
0004a710 t CSurface::get_second_friction_factor()
00048d60 t CSurface::get_name()
0004a7c0 t CSurface::~CSurface()
0004a7a0 t CSurface::~CSurface()
0004a7a0 t CSurface::~CSurface()
0007d4f0 t hk_Array<hk_Constraint*>::~hk_Array()
0007d4f0 t hk_Array<hk_Constraint*>::~hk_Array()
00131210 t IVP_Ball::IVP_Ball(IVP_Cluster*, IVP_Template_Ball const*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
00131210 t IVP_Ball::IVP_Ball(IVP_Cluster*, IVP_Template_Ball const*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
001311e0 t IVP_Ball::~IVP_Ball()
001311c0 t IVP_Ball::~IVP_Ball()
001311c0 t IVP_Ball::~IVP_Ball()
000e5350 t IVP_Core::reset_time(IVP_Time)
000e40c0 t IVP_Core::set_radius(float, float)
000e4340 t IVP_Core::damp_object(double, IVP_U_Float_Point const*, double)
000e4670 t IVP_Core::push_core_ws(IVP_U_Point const*, IVP_U_Float_Point const*)
000e76b0 t IVP_Core::clip_velocity(IVP_U_Float_Point*, IVP_U_Float_Point*)
000e4dc0 t IVP_Core::async_push_core(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
000e75a0 t IVP_Core::get_environment()
000e75c0 t IVP_Core::get_position_PSI()
000e4fe0 t IVP_Core::get_rot_speed_cs(IVP_U_Float_Point const*)
000e4590 t IVP_Core::global_damp_core(double)
000e5180 t IVP_Core::rot_push_core_cs(IVP_U_Float_Point const*)
000e67c0 t IVP_Core::add_friction_info(IVP_Friction_Info_For_Core*)
000e6770 t IVP_Core::get_friction_info(IVP_Friction_System*)
000e4860 t IVP_Core::async_push_core_ws(IVP_U_Point const*, IVP_U_Float_Point const*)
000e4030 t IVP_Core::get_energy_on_test(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
000e4f90 t IVP_Core::get_rot_inertia_cs(IVP_U_Float_Point const*)
00104930 t IVP_Core::add_core_controller(IVP_Controller*)
000e5cb0 t IVP_Core::calc_movement_state(IVP_Time)
000e7530 t IVP_Core::fast_piling_allowed()
00104720 t IVP_Core::rem_core_controller(IVP_Controller*)
000e6490 t IVP_Core::apply_velocity_limit()
000e7540 t IVP_Core::calc_next_PSI_matrix(IVP_U_Vector<IVP_Core>*, IVP_Event_Sim*)
000e53c0 t IVP_Core::core_add_link_to_obj(IVP_Real_Object*)
000e6700 t IVP_Core::core_plausible_check()
000e68e0 t IVP_Core::delete_friction_info(IVP_Friction_Info_For_Core*)
000e3ad0 t IVP_Core::get_surface_speed_ws(IVP_U_Point const*, IVP_U_Float_Point*)
000ef7c0 t IVP_Core::grow_friction_system()
000e5a90 t IVP_Core::set_rotation_inertia(IVP_U_Float_Point const*)
000e68a0 t IVP_Core::unlink_friction_info(IVP_Friction_Info_For_Core*)
000ede80 t IVP_Core::union_find_get_father()
000e41f0 t IVP_Core::abort_all_async_pushes()
00102fa0 t IVP_Core::freeze_simulation_core()
000e75b0 t IVP_Core::get_m_world_f_core_PSI()
00102d10 t IVP_Core::revive_simulation_core()
000e6210 t IVP_Core::set_matrizes_and_speed(IVP_Core_Merged*, IVP_U_Matrix*)
000e54a0 t IVP_Core::stop_physical_movement()
000e5690 t IVP_Core::synchronize_with_rot_z()
000e58f0 t IVP_Core::undo_synchronize_rot_z()
000e51e0 t IVP_Core::commit_all_async_pushes()
00102fc0 t IVP_Core::debug_out_movement_vars()
000e7510 t IVP_Core::set_fast_piling_allowed(IVP_BOOL)
00103050 t IVP_Core::debug_vec_movement_state()
00102f20 t IVP_Core::fire_event_object_frozen()
000e55e0 t IVP_Core::init_core_for_simulation()
000e55b0 t IVP_Core::reset_freeze_check_values()
000e50d0 t IVP_Core::rot_push_core_multiple_cs(IVP_U_Float_Point const*, double)
000e4b00 t IVP_Core::rot_push_core_multiple_ws(IVP_U_Float_Point const*, double)
000e6750 t IVP_Core::rot_speed_plausible_check(IVP_U_Float_Point const*)
000e5ac0 t IVP_Core::transform_PSI_matrizes_core(IVP_U_Matrix const*)
000e4210 t IVP_Core::center_push_core_multiple_ws(IVP_U_Float_Point const*, double)
000e69d0 t IVP_Core::revive_adjacent_to_unmoveable()
000e4f10 t IVP_Core::test_rot_push_core_multiple_cs(IVP_U_Float_Point const*, double, IVP_U_Float_Point*)
000e5030 t IVP_Core::async_rot_push_core_multiple_cs(IVP_U_Float_Point const*, double)
000e4a30 t IVP_Core::async_rot_push_core_multiple_ws(IVP_U_Float_Point const*, double)
000e5280 t IVP_Core::calc_next_PSI_matrix_zero_speed(IVP_Event_Sim*)
000e6940 t IVP_Core::ensure_core_to_be_in_simulation()
000e67b0 t IVP_Core::moveable_core_has_friction_info()
000e6b30 t IVP_Core::values_changed_recalc_redundants()
000e61f0 t IVP_Core::create_collision_merged_core_with(IVP_Core*)
000e7580 t IVP_Core::ensure_core_in_simulation_delayed()
000e42b0 t IVP_Core::async_center_push_core_multiple_ws(IVP_U_Float_Point const*, double)
000e6980 t IVP_Core::ensure_all_core_objs_in_simulation()
000e6860 t IVP_Core::unmovable_core_debug_friction_hash()
000e3bf0 t IVP_Core::get_diff_surface_speed_of_two_cores(IVP_Core const*, IVP_Core const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point*)
000e63c0 t IVP_Core::update_exact_mindist_events_of_core()
000e6da0 t IVP_Core::ensure_all_core_objs_in_simulation_now()
000e6f20 t IVP_Core::unlink_obj_from_core_and_maybe_destroy(IVP_Real_Object*)
000e5400 t IVP_Core::stop_movement_without_collision_recheck()
000e3cc0 t IVP_Core::get_diff_surface_speed_of_two_cores_on_test(IVP_Core const*, IVP_Core const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point*)
000e5b90 t IVP_Core::init(IVP_Real_Object*, bool)
000e6420 t IVP_Core::set_mass(float)
000e5990 t IVP_Core::calc_calc()
000e4d00 t IVP_Core::push_core(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
000e71e0 t IVP_Core::IVP_Core(IVP_Real_Object*)
000e6fe0 t IVP_Core::IVP_Core(IVP_Real_Object*, IVP_U_Quat const*, IVP_U_Point const*, IVP_BOOL, IVP_BOOL)
000e71e0 t IVP_Core::IVP_Core(IVP_Real_Object*)
000e6fe0 t IVP_Core::IVP_Core(IVP_Real_Object*, IVP_U_Quat const*, IVP_U_Point const*, IVP_BOOL, IVP_BOOL)
000e6df0 t IVP_Core::~IVP_Core()
000e6df0 t IVP_Core::~IVP_Core()
0010ec00 t IVP_Hash::add(char const*, void*)
0010ec90 t IVP_Hash::remove(char const*)
0010eac0 t IVP_Hash::IVP_Hash(int, int, void*)
0010eac0 t IVP_Hash::IVP_Hash(int, int, void*)
0010eb00 t IVP_Hash::~IVP_Hash()
0010eb00 t IVP_Hash::~IVP_Hash()
00119430 t P_String::string_cmp(char const*, char const*, IVP_BOOL)
00118d40 t P_String::find_string(char const*, char const*, int)
00118d10 t P_String::uppercase(char*)
000b2bc0 t P_Sur_2D::calc_line_representation()
000b3020 t P_Sur_2D::calc_triangle_representation()
000b2a30 t P_Sur_2D::P_Sur_2D(IVP_Object_Polygon_Tetra*, IVP_Template_Surface*)
000b2a30 t P_Sur_2D::P_Sur_2D(IVP_Object_Polygon_Tetra*, IVP_Template_Surface*)
000b2ad0 t P_Sur_2D::~P_Sur_2D()
000b2ad0 t P_Sur_2D::~P_Sur_2D()
00068ad0 t CByteswap::SwapFieldToTargetEndian(void*, void*, typedescription_t*)
00068a50 t CByteswap::SwapFieldsToTargetEndian(void*, void*, datamap_t*)
0006a410 t ConVarRef::Init(char const*, bool)
0006a510 t ConVarRef::ConVarRef(IConVar*)
0006a4e0 t ConVarRef::ConVarRef(char const*)
0006a4d0 t ConVarRef::ConVarRef(char const*, bool)
0006a510 t ConVarRef::ConVarRef(IConVar*)
0006a4e0 t ConVarRef::ConVarRef(char const*)
0006a4d0 t ConVarRef::ConVarRef(char const*, bool)
0005c0d0 t CTraceIVP::BuildLeafmapCache(leafmap_t const*)
0005bdd0 t CTraceIVP::BuildLeafmapCacheRLE(leafmap_t const*)
0005bb70 t CTraceIVP::CTraceIVP(CPhysCollide const*, Vector const&, QAngle const&)
0005bb70 t CTraceIVP::CTraceIVP(CPhysCollide const*, Vector const&, QAngle const&)
0005c310 t CTraceRay::Init(Vector const&, Vector const&)
0005c4e0 t CTraceRay::Reset(float)
0005c450 t CTraceRay::CTraceRay(Ray_t const&)
0005c480 t CTraceRay::CTraceRay(Ray_t const&, Vector const&)
0005c400 t CTraceRay::CTraceRay(Vector const&, Vector const&)
0005c450 t CTraceRay::CTraceRay(Ray_t const&)
0005c480 t CTraceRay::CTraceRay(Ray_t const&, Vector const&)
0005c400 t CTraceRay::CTraceRay(Vector const&, Vector const&)
00090be0 t hk_Memory::deallocate(void*, int, hk_MEMORY_CLASS)
00090aa0 t hk_Memory::init_memory(char*, int)
00090e80 t hk_Memory::aligned_free(void*)
00090e90 t hk_Memory::get_instance()
00090c40 t hk_Memory::allocate_real(int)
00090e70 t hk_Memory::aligned_malloc(unsigned int, unsigned int)
00090dc0 t hk_Memory::allocate_debug(int, char const*, int)
00090dd0 t hk_Memory::deallocate_debug(void*, int, char const*, int)
00090e30 t hk_Memory::deallocate_stored_size(void*, hk_MEMORY_CLASS)
00090df0 t hk_Memory::allocate_and_store_size(int, hk_MEMORY_CLASS)
00090d50 t hk_Memory::allocate(int, hk_MEMORY_CLASS)
00090bd0 t hk_Memory::hk_Memory(char*, int)
00090ba0 t hk_Memory::hk_Memory()
00090bd0 t hk_Memory::hk_Memory(char*, int)
00090ba0 t hk_Memory::hk_Memory()
00090a90 t hk_Memory::~hk_Memory()
00090a90 t hk_Memory::~hk_Memory()
00146a10 t hk_String::memcpy(void*, void const*, int)
00146a00 t hk_String::strcmp(char const*, char const*)
000e32f0 t IVP_U_Set<IVP_Real_Object>::~IVP_U_Set()
000e32d0 t IVP_U_Set<IVP_Real_Object>::~IVP_U_Set()
000e32d0 t IVP_U_Set<IVP_Real_Object>::~IVP_U_Set()
000e3340 t IVP_U_Set<IVP_Mindist_Base>::~IVP_U_Set()
000e3320 t IVP_U_Set<IVP_Mindist_Base>::~IVP_U_Set()
000e3320 t IVP_U_Set<IVP_Mindist_Base>::~IVP_U_Set()
000e3390 t IVP_U_Set<IVP_Core>::~IVP_U_Set()
000e3370 t IVP_U_Set<IVP_Core>::~IVP_U_Set()
000e3370 t IVP_U_Set<IVP_Core>::~IVP_U_Set()
00119950 t IVP_VHash::deactivate()
00119bf0 t IVP_VHash::remove_elem(void const*, unsigned int)
001199c0 t IVP_VHash::untouch_all()
00119e00 t IVP_VHash::touch_element(void const*, unsigned int)
00119ba0 t IVP_VHash::garbage_collection(int)
00119d60 t IVP_VHash::check()
00119af0 t IVP_VHash::rehash(int)
00119910 t IVP_VHash::activate(int)
00119a00 t IVP_VHash::add_elem(void const*, int)
001198d0 t IVP_VHash::IVP_VHash(int)
00119990 t IVP_VHash::IVP_VHash(IVP_VHash_Elem*, int)
001198d0 t IVP_VHash::IVP_VHash(int)
00119990 t IVP_VHash::IVP_VHash(IVP_VHash_Elem*, int)
001198b0 t IVP_VHash::~IVP_VHash()
00119870 t IVP_VHash::~IVP_VHash()
00119870 t IVP_VHash::~IVP_VHash()
0005e3b0 t simplex_t::SolveGJKSet(simplexvert_t const&, Vector*)
0005f250 t simplex_t::ClipRayToTriangle(Vector const&, float)
0005c820 t simplex_t::SolveVoronoiRegion2(simplexvert_t const&, Vector*)
0005c9a0 t simplex_t::SolveVoronoiRegion3(simplexvert_t const&, Vector*)
0005cef0 t simplex_t::SolveVoronoiRegion4(simplexvert_t const&, Vector*)
0005edf0 t simplex_t::ClipRayToTetrahedron(Vector const&)
0005e6b0 t simplex_t::ClipRayToTetrahedronBase(Vector const&)
         U operator new[](unsigned int)@@GLIBCXX_3.4
00069020 t ConCommand::IsCommand() const
0005a920 t CTraceAABB::SupportMap(Vector const&, Vector*) const
0005a860 t CTraceAABB::GetVertByIndex(int) const
00063af0 t CTraceAABB::Radius() const
00063b10 t CTraceCone::SupportMap(Vector const&, Vector*) const
00063aa0 t CTraceCone::GetVertByIndex(int) const
00063ac0 t CTraceCone::Radius() const
00041900 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
00041db0 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::Find(CPhysicsListenerCollision::corepair_t const&) const
00074ed0 t CUtlString::GetExtension() const
00074e00 t CUtlString::StripFilename() const
00074250 t CUtlString::MatchesPattern(CUtlString const&, int) const
00074da0 t CUtlString::StripExtension() const
00074e70 t CUtlString::GetBaseFilename() const
00074cd0 t CUtlString::UnqualifiedFilename() const
00073eb0 t CUtlString::IsEqual_CaseSensitive(char const*) const
00073f00 t CUtlString::IsEqual_CaseInsensitive(char const*) const
00073cf0 t CUtlString::Get() const
00074880 t CUtlString::Left(int) const
000748c0 t CUtlString::Right(int) const
00074790 t CUtlString::Slice(int, int) const
00074c60 t CUtlString::AbsPath(char const*) const
00074d10 t CUtlString::DirName() const
00074900 t CUtlString::Replace(char, char) const
000749e0 t CUtlString::Replace(char const*, char const*) const
00074010 t CUtlString::operator==(CUtlString const&) const
00073d50 t CUtlString::operator[](int) const
00075030 t CUtlString::operator+(int) const
00074f90 t CUtlString::operator+(char const*) const
00074fe0 t CUtlString::operator+(CUtlString const&) const
00075c30 t CUtlSymbol::String() const
00075d10 t CUtlSymbol::operator==(char const*) const
00092900 t hk_Matrix3::is_identity_rotation() const
00101280 t IVP_Object::get_environment() const
00101270 t IVP_Object::get_name() const
00101260 t IVP_Object::get_type() const
00117c40 t IVP_U_Quat::set_matrix(IVP_U_Matrix3*) const
00117b10 t IVP_U_Quat::set_matrix(double (*) [4]) const
001164d0 t IVP_U_Quat::inline_estimate_q_diff_to(IVP_U_Float_Quat const*) const
00115180 t IVP_U_Quat::acos_quat(IVP_U_Quat const*) const
001200e0 t IVP_Mindist::get_synapse(int) const
001200f0 t IVP_Mindist::get_sorted_synapse(int) const
0011ff50 t IVP_Synapse::get_status() const
0011ff70 t IVP_Synapse::get_synapse_mindist() const
0011ff60 t IVP_Synapse::get_edge() const
0011c950 t IVP_Synapse::get_ledge() const
001102a0 t IVP_U_Hesse::proj_on_plane(IVP_U_Point const*, IVP_U_Point*) const
0010e5b0 t IVP_U_Hesse::calc_intersect_with(IVP_U_Straight const*, IVP_U_Point*) const
00114c50 t IVP_U_Hesse::get_dist(IVP_U_Float_Point const*) const
0010e730 t IVP_U_Plain::calc_intersect_with(IVP_U_Hesse const*, IVP_U_Straight*) const
001142f0 t IVP_U_Point::dot_product(IVP_U_Float_Point const*) const
001142b0 t IVP_U_Point::dot_product(IVP_U_Point const*) const
0010fb40 t IVP_U_Point::is_parallel(IVP_U_Point const*, double) const
0010f1f0 t IVP_U_Point::real_length() const
0010fc30 t IVP_U_Point::fast_real_length() const
0006ac20 t CEmptyConVar::GetName() const
0006ac40 t CEmptyConVar::IsFlagSet(int) const
00037a40 t CPhysCollide::GetCollideMap() const
00037a10 t CPhysCollide::GetSphereRadius() const
000379e0 t CPhysCollide::GetCompactSurface() const
000379f0 t CPhysCollide::GetOrthographicAreas() const
000939a0 t hk_Transform::get_4x4_column_major(float*) const
001146f0 t IVP_U_Matrix::get_position() const
00115f40 t IVP_U_Matrix::inline_mmult4(IVP_U_Matrix const*, IVP_U_Matrix*) const
00114f10 t IVP_U_Matrix::inline_vmult4(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
001161b0 t IVP_U_Matrix::inline_mimult4(IVP_U_Matrix const*, IVP_U_Matrix*) const
00114cf0 t IVP_U_Matrix::inline_vimult4(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
00116400 t IVP_U_Matrix::get_4x4_column_major(float*) const
00112760 t IVP_U_Matrix::mmult4(IVP_U_Matrix const*, IVP_U_Matrix*) const
00113820 t IVP_U_Matrix::vmult4(IVP_U_Point const*, IVP_U_Point*) const
001138c0 t IVP_U_Matrix::vmult4(IVP_U_Float_Point const*, IVP_U_Point*) const
00113760 t IVP_U_Matrix::vmult4(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
001129d0 t IVP_U_Matrix::mimult4(IVP_U_Matrix const*, IVP_U_Matrix*) const
00113550 t IVP_U_Matrix::vimult4(IVP_U_Point const*, IVP_U_Float_Point*) const
00113600 t IVP_U_Matrix::vimult4(IVP_U_Point const*, IVP_U_Point*) const
001136a0 t IVP_U_Matrix::vimult4(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
001130c0 t IVP_U_Matrix::mi2mult4(IVP_U_Matrix const*, IVP_U_Matrix*) const
000751a0 t unsigned int CUtlHashtable<CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::IndirectIndex, empty_t, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::HashProxy, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::EqualProxy, char const*>::DoLookup<char const*>(char const*, unsigned int, unsigned int*) const [clone .part.56] [clone .constprop.58]
00041fb0 t CUtlMultiList<void*, unsigned short>::IsValidList(unsigned short) const
000d01e0 t IVP_CFEP_Hash::compare(void*, void*) const
0011c400 t IVP_Collision::get_fvector_index(int) const
000e0fb0 t IVP_MI_Vector::print() const
000e0140 t IVP_MI_Vector::length() const
00115dd0 t IVP_U_Matrix3::inline_mmult3(IVP_U_Matrix3 const*, IVP_U_Matrix3*) const
00114db0 t IVP_U_Matrix3::inline_vmult3(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
00115c10 t IVP_U_Matrix3::inline_mimult3(IVP_U_Matrix3 const*, IVP_U_Matrix3*) const
00114e60 t IVP_U_Matrix3::inline_vimult3(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
00110c70 t IVP_U_Matrix3::get_determinante() const
00112c20 t IVP_U_Matrix3::mmult3(IVP_U_Matrix3 const*, IVP_U_Matrix3*) const
00113a10 t IVP_U_Matrix3::vmult3(IVP_U_Point const*, IVP_U_Point*) const
00113960 t IVP_U_Matrix3::vmult3(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
00115a70 t IVP_U_Matrix3::get_col(IVP_COORDINATE_INDEX, IVP_U_Point*) const
00115aa0 t IVP_U_Matrix3::get_col(IVP_COORDINATE_INDEX, IVP_U_Float_Point*) const
001159f0 t IVP_U_Matrix3::get_row(IVP_COORDINATE_INDEX, IVP_U_Point*) const
00115a20 t IVP_U_Matrix3::get_row(IVP_COORDINATE_INDEX, IVP_U_Float_Point*) const
00112d90 t IVP_U_Matrix3::mimult3(IVP_U_Matrix3 const*, IVP_U_Matrix3*) const
00113aa0 t IVP_U_Matrix3::vimult3(IVP_U_Point const*, IVP_U_Point*) const
00113b30 t IVP_U_Matrix3::vimult3(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
00114640 t IVP_U_Matrix3::get_elem(int, int) const
00112f50 t IVP_U_Matrix3::mi2mult3(IVP_U_Matrix3 const*, IVP_U_Matrix3*) const
00068fe0 t ConCommandBase::GetHelpText() const
00068ff0 t ConCommandBase::IsRegistered() const
00068f00 t ConCommandBase::GetDLLIdentifier() const
00068fa0 t ConCommandBase::GetName() const
00069930 t ConCommandBase::GetNext() const
00068ef0 t ConCommandBase::IsCommand() const
00068fb0 t ConCommandBase::IsFlagSet(int) const
0004c270 t CPhysicsObject::GetCollide() const
0004c0f0 t CPhysicsObject::GetDamping(float*, float*) const
0004c050 t CPhysicsObject::GetInertia() const
0004c030 t CPhysicsObject::GetInvMass() const
0004bf60 t CPhysicsObject::IsMoveable() const
00050440 t CPhysicsObject::GetContents() const
0004c000 t CPhysicsObject::GetGameData() const
0004d150 t CPhysicsObject::GetPosition(Vector*, QAngle*) const
0004dce0 t CPhysicsObject::GetVelocity(Vector*, Vector*) const
0004be50 t CPhysicsObject::GetGameFlags() const
0004be70 t CPhysicsObject::GetGameIndex() const
0004d560 t CPhysicsObject::LocalToWorld(Vector*, Vector const&) const
0004d500 t CPhysicsObject::WorldToLocal(Vector*, Vector const&) const
0004c0a0 t CPhysicsObject::GetInvInertia() const
0004e5d0 t CPhysicsObject::IsControlling(IVP_Controller const*) const
0004e070 t CPhysicsObject::IsDragEnabled() const
0004cc40 t CPhysicsObject::GetContactPoint(Vector*, IPhysicsObject**) const
0004ddd0 t CPhysicsObject::GetSphereRadius() const
0004bf40 t CPhysicsObject::IsMotionEnabled() const
0004c560 t CPhysicsObject::OutputDebugInfo() const
0004be30 t CPhysicsObject::GetCallbackFlags() const
00050430 t CPhysicsObject::GetMaterialIndex() const
0004e0f0 t CPhysicsObject::IsGravityEnabled() const
0004d200 t CPhysicsObject::GetPositionMatrix(matrix3x4_t*) const
0004cb70 t CPhysicsObject::GetShadowPosition(Vector*, QAngle*) const
0004f2a0 t CPhysicsObject::GetSurfaceManager() const
0004f2c0 t CPhysicsObject::GetDragInDirection(IVP_U_Float_Point const&) const
0004cf70 t CPhysicsObject::GetVelocityAtPoint(Vector const&, Vector*) const
0004c460 t CPhysicsObject::IsCollisionEnabled() const
0004e940 t CPhysicsObject::IsControlledByGame() const
0004d4a0 t CPhysicsObject::LocalToWorldVector(Vector*, Vector const&) const
0004d440 t CPhysicsObject::WorldToLocalVector(Vector*, Vector const&) const
0004f360 t CPhysicsObject::CalculateLinearDrag(Vector const&) const
0004db20 t CPhysicsObject::GetImplicitVelocity(Vector*, Vector*) const
0004c260 t CPhysicsObject::GetShadowController() const
0004c360 t CPhysicsObject::CalculateAngularDrag(Vector const&) const
0004d240 t CPhysicsObject::CalculateForceOffset(Vector const&, Vector const&, Vector*, Vector*) const
0004e980 t CPhysicsObject::IsMassCenterAtDefault() const
0004e5b0 t CPhysicsObject::GetVPhysicsEnvironment() const
0004c480 t CPhysicsObject::IsAttachedToConstraint(bool) const
0004e270 t CPhysicsObject::CalculateVelocityOffset(Vector const&, Vector const&, Vector*, Vector*) const
0004dc60 t CPhysicsObject::GetMassCenterLocalSpace() const
0004f3a0 t CPhysicsObject::GetAngularDragInDirection(IVP_U_Float_Point const&) const
0004c010 t CPhysicsObject::GetMass() const
0004c280 t CPhysicsObject::GetName() const
0004c440 t CPhysicsObject::IsFluid() const
0004d890 t CPhysicsObject::IsAsleep() const
00050420 t CPhysicsObject::IsHinged() const
0004be80 t CPhysicsObject::IsStatic() const
0004c290 t CPhysicsObject::GetEnergy() const
0004ec80 t CPhysicsObject::GetVolume() const
0004c420 t CPhysicsObject::IsTrigger() const
000b1c20 t IVP_point_hash::element_at(int) const
000b1c10 t IVP_point_hash::len() const
000b1c70 t IVP_point_hash::print() const
000b19a0 t IVP_point_hash::compare(void*, void*) const
00116db0 t IVP_U_Min_Hash::is_elem(void*) const
0010e280 t IVP_U_Straight::get_quad_dist_to_point(IVP_U_Point*) const
0010e1d0 t IVP_U_Straight::calc_orthogonal_vec_from_point(IVP_U_Point const*, IVP_U_Point*) const
00075610 t CUtlSymbolTable::FindPoolWithSpace(int) const
000754a0 t CUtlSymbolTable::Find(char const*) const
00075320 t CUtlSymbolTable::CLess::operator()(CUtlSymbolTable::CStringPoolIndex const&, CUtlSymbolTable::CStringPoolIndex const&) const
00075660 t CUtlSymbolTable::String(CUtlSymbol) const
000ea4e0 t IVP_Environment::get_time_manager() const
000ea550 t IVP_Environment::get_debug_manager() const
000ea5a0 t IVP_Environment::get_range_manager() const
000ea630 t IVP_Environment::get_static_object() const
000ea620 t IVP_Environment::get_anomaly_limits() const
000ea690 t IVP_Environment::get_gravity_length() const
000ea560 t IVP_Environment::get_memory_manager() const
000ea610 t IVP_Environment::get_anomaly_manager() const
000ea540 t IVP_Environment::get_cluster_manager() const
000ea500 t IVP_Environment::get_mindist_manager() const
000ea530 t IVP_Environment::get_ov_tree_manager() const
000ea5c0 t IVP_Environment::get_collision_filter() const
000ea5b0 t IVP_Environment::get_material_manager() const
000ea600 t IVP_Environment::get_universe_manager() const
000ea510 t IVP_Environment::get_sim_units_manager() const
000ea4f0 t IVP_Environment::get_controller_manager() const
000ea5f0 t IVP_Environment::get_active_value_manager() const
000ea520 t IVP_Environment::get_cache_object_manager() const
001013a0 t IVP_Real_Object::to_nonconst() const
001000d0 t IVP_Real_Object::calc_at_matrix(IVP_Time, IVP_U_Matrix*) const
00100b40 t IVP_Real_Object::get_geom_radius() const
00101390 t IVP_Real_Object::get_extra_radius() const
001013c0 t IVP_Real_Object::get_original_core() const
00100320 t IVP_Real_Object::calc_at_quaternion(IVP_Time, IVP_U_Quat*, IVP_U_Point*) const
00101360 t IVP_Real_Object::get_surface_manager() const
00100b60 t IVP_Real_Object::get_geom_center_speed() const
001002f0 t IVP_Real_Object::get_m_world_f_object_AT(IVP_U_Matrix*) const
00100ba0 t IVP_Real_Object::get_geom_center_speed_vec(IVP_U_Point*) const
00100580 t IVP_Real_Object::get_quat_world_f_object_AT(IVP_U_Quat*, IVP_U_Point*) const
00100b00 t IVP_Real_Object::get_geom_center_world_space(IVP_U_Point*) const
001013b0 t IVP_Real_Object::get_core() const
         U CThreadLocalBase::Get() const
0010a380 t IVP_Cache_Object::transform_vector_to_world_coords(IVP_U_Point const*, IVP_U_Point*) const
0010a410 t IVP_Cache_Object::transform_vector_to_world_coords(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
0010a240 t IVP_Cache_Object::transform_vector_to_object_coords(IVP_U_Point const*, IVP_U_Point*) const
0010a2d0 t IVP_Cache_Object::transform_vector_to_object_coords(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
0010a190 t IVP_Cache_Object::transform_position_to_world_coords(IVP_U_Float_Point const*, IVP_U_Point*) const
0010a0d0 t IVP_Cache_Object::transform_position_to_object_coords(IVP_U_Point const*, IVP_U_Float_Point*) const
0010a030 t IVP_Cache_Object::transform_position_to_object_coords(IVP_U_Point const*, IVP_U_Point*) const
000d11c0 t IVP_Compact_Edge::get_opposite() const
000d10d0 t IVP_Compact_Edge::get_triangle() const
000d1140 t IVP_Compact_Edge::get_edge_index() const
000d0da0 t IVP_Compact_Edge::get_is_virtual() const
000d1100 t IVP_Compact_Edge::get_start_point(IVP_Compact_Ledge const*) const
000d10e0 t IVP_Compact_Edge::get_compact_ledge() const
000d0d80 t IVP_Compact_Edge::get_opposite_index() const
000d0d70 t IVP_Compact_Edge::get_start_point_index() const
000d1120 t IVP_Compact_Edge::get_next() const
000d1180 t IVP_Compact_Edge::get_prev() const
0011ffe0 t IVP_Mindist_Base::get_length() const
0011ffd0 t IVP_Mindist_Base::get_mindist_synapse(int) const
0011c040 t IVP_ov_tree_hash::compare(void*, void*) const
0011c940 t IVP_Synapse_Real::check_consistency_of_ledge(IVP_Compact_Edge const*) const
00120080 t IVP_Synapse_Real::get_core() const
000d0f90 t IVP_Compact_Ledge::is_terminal() const
000d0fd0 t IVP_Compact_Ledge::get_n_points() const
000d1030 t IVP_Compact_Ledge::get_client_data() const
000d0fc0 t IVP_Compact_Ledge::get_n_triangles() const
000d0f50 t IVP_Compact_Ledge::get_point_array() const
000d0f70 t IVP_Compact_Ledge::get_first_triangle() const
000d0fb0 t IVP_Compact_Ledge::get_ledgetree_node() const
000d0ff0 t IVP_Compact_Ledge::get_size() const
000efd60 t IVP_Contact_Point::is_same_as(IVP_Mindist const*) const
000b1db0 t IVP_I_Point_VHash::element_at(int) const
000b1da0 t IVP_I_Point_VHash::len() const
000b1e00 t IVP_I_Point_VHash::print() const
000b1970 t IVP_I_Point_VHash::compare(void*, void*) const
00110680 t IVP_U_Float_Hesse::proj_on_plane(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
00114ca0 t IVP_U_Float_Hesse::get_dist(IVP_U_Float_Point const*) const
001149b0 t IVP_U_Float_Point::dot_product(IVP_U_Float_Point const*) const
00114bb0 t IVP_U_Float_Point::quad_length() const
0010f1b0 t IVP_U_Float_Point::real_length() const
0010fc70 t IVP_U_Float_Point::fast_real_length() const
00114bf0 t IVP_U_Float_Point::quad_distance_to(IVP_U_Float_Point const*) const
0010fd30 t IVP_U_Float_Point::print(char const*) const
0010edf0 t IVP_U_String_Hash::find(char const*) const
0003ac40 t CPhysicsConstraint::WriteFixed(constraint_fixedparams_t&) const
0003af60 t CPhysicsConstraint::WriteHinge(constraint_hingeparams_t&) const
0003d520 t CPhysicsConstraint::GetGameData() const
0003b6d0 t CPhysicsConstraint::WriteLength(constraint_lengthparams_t&) const
0003b450 t CPhysicsConstraint::WritePulley(constraint_pulleyparams_t&) const
0003ad10 t CPhysicsConstraint::WriteRagdoll(constraint_ragdollparams_t&) const
0003b1d0 t CPhysicsConstraint::WriteSliding(constraint_slidingparams_t&) const
0003b880 t CPhysicsConstraint::WriteBallsocket(constraint_ballsocketparams_t&) const
0003ba00 t CPhysicsConstraint::WriteToTemplate(vphysics_save_cphysicsconstraint_t&, vphysics_save_constraint_t&) const
00037fa0 t CPhysicsConstraint::GetAttachedObject() const
0003ab50 t CPhysicsConstraint::GetConstraintGroup() const
00037f90 t CPhysicsConstraint::GetReferenceObject() const
0003bb30 t CPhysicsConstraint::GetConstraintParams(constraint_breakableparams_t*) const
000387a0 t CPhysicsConstraint::GetConstraintTransform(matrix3x4_t*, matrix3x4_t*) const
0003ab70 t CPhysicsConstraint::ReadBreakableConstraint(constraint_breakableparams_t&) const
00071030 t CUtlCharConversion::GetDelimiter() const
00071020 t CUtlCharConversion::GetEscapeChar() const
00071040 t CUtlCharConversion::GetDelimiterLength() const
00071070 t CUtlCharConversion::GetConversionLength(char) const
00071050 t CUtlCharConversion::GetConversionString(char) const
00071090 t CUtlCharConversion::MaxConversionLength() const
00109230 t IVP_Anomaly_Limits::get_max_velocity() const
00109240 t IVP_Anomaly_Limits::get_max_angular_velocity_per_psi() const
000b1910 t IVP_I_FPoint_VHash::element_at(int) const
000b1900 t IVP_I_FPoint_VHash::len() const
000b1960 t IVP_I_FPoint_VHash::print() const
000b1720 t IVP_I_FPoint_VHash::compare(void*, void*) const
00049380 t CIVPMaterialManager::RemapIVPMaterialIndex(int) const
0003dfd0 t CPhysicsEnvironment::GetGravity(Vector*) const
0003e2c0 t CPhysicsEnvironment::GetAirDensity() const
0003e060 t CPhysicsEnvironment::GetObjectList(int*) const
0003e110 t CPhysicsEnvironment::IsInSimulation() const
0003e260 t CPhysicsEnvironment::GetActiveObjects(IPhysicsObject**) const
0003e0e0 t CPhysicsEnvironment::GetNextFrameTime() const
0003e0b0 t CPhysicsEnvironment::GetSimulationTime() const
00040830 t CPhysicsEnvironment::ShouldQuickDelete() const
0003e250 t CPhysicsEnvironment::GetActiveObjectCount() const
0003e9a0 t CPhysicsEnvironment::IsCollisionModelUsed(CPhysCollide*) const
0003e080 t CPhysicsEnvironment::GetSimulationTimestep() const
0003e050 t CPhysicsEnvironment::GetObjectSerializeSize(IPhysicsObject*) const
0003e300 t CPhysicsEnvironment::GetPerformanceSettings(physics_performanceparams_t*) const
0011abd0 t IVP_OV_Tree_Manager::box_contains_box(IVP_OV_Node_Data const*, IVP_OV_Node const*, int) const
0011b130 t IVP_OV_Tree_Manager::find_smallest_box(IVP_OV_Node const*, IVP_OV_Node const*) const
0011b080 t IVP_OV_Tree_Manager::box_overlaps_with_box(IVP_OV_Node const*, IVP_OV_Node const*, int) const
0011abb0 t IVP_OV_Tree_Manager::log_base2(double) const
000d7cd0 t IVP_Template_Anchor::get_anchor_position_ws() const
00048fa0 t CPhysicsSurfaceProps::GetPropName(int) const
000491d0 t CPhysicsSurfaceProps::GetIVPMaterial(int) const
000490b0 t CPhysicsSurfaceProps::GetSurfaceIndex(char const*) const
00048b00 t CPhysicsSurfaceProps::SurfacePropCount() const
00049060 t CPhysicsSurfaceProps::GetInternalSurface(int) const
00048b30 t CPhysicsSurfaceProps::GetIVPMaterialIndex(IVP_Material const*) const
000491e0 t CPhysicsSurfaceProps::GetReservedFallBack(int) const
00048ec0 t CPhysicsSurfaceProps::GetPhysicsParameters(int, surfacephysicsparams_t*) const
00048f10 t CPhysicsSurfaceProps::GetPhysicsProperties(int, float*, float*, float*, float*) const
0004a750 t CPhysicsSurfaceProps::RemapIVPMaterialIndex(int) const
00048b10 t CPhysicsSurfaceProps::GetReservedMaterialName(int) const
00049080 t CPhysicsSurfaceProps::GetReservedSurfaceIndex(char const*) const
00049070 t CPhysicsSurfaceProps::IsReservedMaterialIndex(int) const
00048cb0 t CPhysicsSurfaceProps::GetString(unsigned short) const
000d0ee0 t IVP_Compact_Triangle::get_next_tri() const
000d0e40 t IVP_Compact_Triangle::get_tri_index() const
000d0ea0 t IVP_Compact_Triangle::get_first_edge() const
000d0e80 t IVP_Compact_Triangle::get_is_virtual() const
000d0e50 t IVP_Compact_Triangle::get_pierce_index() const
000d1200 t IVP_Compact_Triangle::get_compact_ledge() const
000d0e70 t IVP_Compact_Triangle::get_material_index() const
000d0ec0 t IVP_Compact_Triangle::get_edge(int) const
000fe920 t IVP_Controller_VHash::compare(void*, void*) const
000e7500 t IVP_Core_Fast_Static::get_inv_mass() const
000e74e0 t IVP_Core_Fast_Static::get_rot_inertia() const
000e74f0 t IVP_Core_Fast_Static::get_inv_rot_inertia() const
000e74d0 t IVP_Core_Fast_Static::get_mass() const
000efc40 t IVP_Synapse_Friction::is_same_as(IVP_Synapse_Real const*) const
000efc20 t IVP_Synapse_Friction::get_material_index() const
0010bd70 t IVP_Active_Value_Hash::compare(void*, void*) const
00131100 t IVP_Controller_Motion::get_max_torque() const
00131130 t IVP_Controller_Motion::get_damp_factor() const
00131120 t IVP_Controller_Motion::get_force_factor() const
00131140 t IVP_Controller_Motion::get_torque_factor() const
00131170 t IVP_Controller_Motion::get_target_orientation() const
00131160 t IVP_Controller_Motion::get_target_position_ws() const
00131150 t IVP_Controller_Motion::get_angular_damp_factor() const
00131110 t IVP_Controller_Motion::get_max_translation_force() const
000d0d10 t IVP_Compact_Poly_Point::get_client_data() const
000e3810 t IVP_Controller_Phantom::get_object() const
000e37f0 t IVP_Controller_Phantom::get_intruding_cores() const
000e37e0 t IVP_Controller_Phantom::get_intruding_objects() const
0005a280 t CPhysCollideVirtualMesh::GetAllLedges(IVP_U_BigVector<IVP_Compact_Ledge>&) const
000589f0 t CPhysCollideVirtualMesh::GetMassCenter() const
00058c20 t CPhysCollideVirtualMesh::GetSphereRadius() const
0005a170 t CPhysCollideVirtualMesh::OutputDebugInfo() const
00059fc0 t CPhysCollideVirtualMesh::GetVCollideIndex() const
0005a180 t CPhysCollideVirtualMesh::SerializeToBuffer(char*, bool) const
00058f70 t CPhysCollideVirtualMesh::GetSphereRadiusIVP() const
0005a140 t CPhysCollideVirtualMesh::CreateSurfaceManager(short&) const
00059fe0 t CPhysCollideVirtualMesh::GetOrthographicAreas() const
00059f70 t CPhysCollideVirtualMesh::GetSerializationSize() const
000479e0 t CPhysicsFluidController::GetDensity() const
000479f0 t CPhysicsFluidController::GetContents() const
000478f0 t CPhysicsFluidController::GetGameData() const
00047b20 t CPhysicsFluidController::GetIVPObject() const
00047900 t CPhysicsFluidController::GetSurfacePlane(Vector*, float*) const
001312e0 t IVP_SurfaceManager_Ball::get_mass_center(IVP_U_Float_Point*) const
001312d0 t IVP_SurfaceManager_Ball::get_single_convex() const
00131380 t IVP_SurfaceManager_Ball::get_rotation_inertia(IVP_U_Float_Point*) const
001313b0 t IVP_SurfaceManager_Ball::get_radius_and_radius_dev_to_given_center(IVP_U_Float_Point const*, float*, float*) const
00035dd0 t CPhysCollideCompactSurface::GetAllLedges(IVP_U_BigVector<IVP_Compact_Ledge>&) const
00037a90 t CPhysCollideCompactSurface::GetCollideMap() const
00034290 t CPhysCollideCompactSurface::GetMassCenter() const
00036310 t CPhysCollideCompactSurface::OutputDebugInfo() const
00037a70 t CPhysCollideCompactSurface::GetVCollideIndex() const
000362b0 t CPhysCollideCompactSurface::ComputeHullInfo_r(CPhysCollideCompactSurface::hullinfo_t*, IVP_Compact_Ledgetree_Node const*) const
00037a80 t CPhysCollideCompactSurface::GetCompactSurface() const
00035c80 t CPhysCollideCompactSurface::SerializeToBuffer(char*, bool) const
000349b0 t CPhysCollideCompactSurface::CreateSurfaceManager(short&) const
00034330 t CPhysCollideCompactSurface::GetOrthographicAreas() const
00034270 t CPhysCollideCompactSurface::GetSerializationSize() const
000d1090 t IVP_Compact_Ledgetree_Node::is_terminal() const
000d10b0 t IVP_Compact_Ledgetree_Node::get_compact_hull() const
000d1060 t IVP_Compact_Ledgetree_Node::get_compact_ledge() const
000d1070 t IVP_Compact_Ledgetree_Node::left_son() const
000d1080 t IVP_Compact_Ledgetree_Node::right_son() const
000f3540 t IVP_Great_Matrix_Many_Zero::print_great_matrix(char const*) const
000f3520 t IVP_Great_Matrix_Many_Zero::get_value(int, int) const
0010b250 t IVP_SurfaceManager_Polygon::get_mass_center(IVP_U_Float_Point*) const
0010b290 t IVP_SurfaceManager_Polygon::get_single_convex() const
0010b760 t IVP_SurfaceManager_Polygon::get_compact_surface() const
0010b270 t IVP_SurfaceManager_Polygon::get_rotation_inertia(IVP_U_Float_Point*) const
0010b340 t IVP_SurfaceManager_Polygon::get_radius_and_radius_dev_to_given_center(IVP_U_Float_Point const*, float*, float*) const
00101310 t IVP_Real_Object_Fast_Static::get_shift_core_f_object() const
00096740 t IVP_SurfaceBuilder_Ledge_Soup::ledgetree_debug_output(IVP_Compact_Ledgetree_Node const*) const
00132cc0 t IVP_Object_Callback_Table_Hash::compare(void*, void*) const
00058ab0 t IVP_SurfaceManager_VirtualMesh::get_mass_center(IVP_U_Float_Point*) const
00059810 t IVP_SurfaceManager_VirtualMesh::get_single_convex() const
00058b20 t IVP_SurfaceManager_VirtualMesh::get_rotation_inertia(IVP_U_Float_Point*) const
00058a70 t IVP_SurfaceManager_VirtualMesh::get_radius_and_radius_dev_to_given_center(IVP_U_Float_Point const*, float*, float*) const
0011c470 t IVP_Collision_Callback_Table_Hash::compare(void*, void*) const
0006a3e0 t ConVar::GetDefault() const
00069070 t ConVar::GetHelpText() const
000690a0 t ConVar::IsRegistered() const
0006a3c0 t ConVar::GetMax(float&) const
0006a3a0 t ConVar::GetMin(float&) const
000690c0 t ConVar::GetName() const
000690d0 t ConVar::IsCommand() const
00069050 t ConVar::IsFlagSet(int) const
00069e20 t CCommand::FindArgInt(char const*, int) const
00069d90 t CCommand::FindArg(char const*) const
00131510 t IVP_Ball::get_radius() const
000e40e0 t IVP_Core::calc_at_matrix(IVP_Time, IVP_U_Matrix*) const
000e3f20 t IVP_Core::calc_virt_mass(IVP_U_Float_Point const*, IVP_U_Float_Point const*) const
000e4be0 t IVP_Core::test_push_core(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point*, IVP_U_Float_Point*) const
000e4630 t IVP_Core::get_surface_speed(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
000e4e60 t IVP_Core::calc_correct_virt_mass(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*) const
000e7630 t IVP_Core::inline_calc_at_position(IVP_Time, IVP_U_Point*) const
000e3da0 t IVP_Core::calc_virt_mass_worst_case(IVP_U_Float_Point const*) const
000e3950 t IVP_Core::get_surface_speed_on_test(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point*) const
000e75d0 t IVP_Core::inline_calc_at_quaternion(IVP_Time, IVP_U_Quat*) const
0010eb70 t IVP_Hash::find(char const*) const
0006a530 t ConVarRef::IsValid() const
0005af80 t CTraceIVP::SupportMap(Vector const&, Vector*) const
0005a9b0 t CTraceIVP::GetVertByIndex(int) const
00063ae0 t CTraceIVP::Radius() const
0005c540 t CTraceRay::SupportMap(Vector const&, Vector*) const
000e3270 t IVP_U_Set<IVP_Real_Object>::compare(void*, void*) const
000e32b0 t IVP_U_Set<IVP_Mindist_Base>::compare(void*, void*) const
000e3290 t IVP_U_Set<IVP_Core>::compare(void*, void*) const
00119e90 t IVP_VHash::print() const
00119d70 t IVP_VHash::find_elem(void const*, unsigned int) const
         U CThreadFastMutex::Lock(unsigned int, unsigned int) volatile
         U operator new(unsigned int)@@GLIBCXX_3.4
         U std::terminate()@@GLIBCXX_3.4
000d4e90 t non-virtual thunk to IVP_Actuator_Extra::active_float_changed(IVP_U_Active_Float*)
000d6270 t non-virtual thunk to IVP_Actuator_Force_Active::active_float_changed(IVP_U_Active_Float*)
00126480 t non-virtual thunk to IVP_Mindist_Recursive::get_spawned_mindist_count()
00126450 t non-virtual thunk to IVP_Mindist_Recursive::change_spawned_mindist_count(int)
00125ca0 t non-virtual thunk to IVP_Mindist_Recursive::collision_is_going_to_be_deleted_event(IVP_Collision*)
00125c70 t non-virtual thunk to IVP_Mindist_Recursive::~IVP_Mindist_Recursive()
00125b80 t non-virtual thunk to IVP_Mindist_Recursive::~IVP_Mindist_Recursive()
000d6530 t non-virtual thunk to IVP_Actuator_Torque_Active::active_float_changed(IVP_U_Active_Float*)
000d88e0 t non-virtual thunk to IVP_Actuator_Spring_Active::active_float_changed(IVP_U_Active_Float*)
000d6400 t non-virtual thunk to IVP_Actuator_Rot_Mot_Active::active_float_changed(IVP_U_Active_Float*)
00126770 t non-virtual thunk to IVP_OO_Watcher::collision_is_going_to_be_deleted_event(IVP_Collision*)
00126980 t non-virtual thunk to IVP_OO_Watcher::~IVP_OO_Watcher()
00126840 t non-virtual thunk to IVP_OO_Watcher::~IVP_OO_Watcher()
0006abd0 t non-virtual thunk to CEmptyConVar::SetValue(float)
0006abf0 t non-virtual thunk to CEmptyConVar::SetValue(int)
0006abb0 t non-virtual thunk to CEmptyConVar::SetValue(char const*)
00069130 t non-virtual thunk to ConVar::SetValue(float)
00069160 t non-virtual thunk to ConVar::SetValue(int)
00069100 t non-virtual thunk to ConVar::SetValue(char const*)
0006ac10 t non-virtual thunk to CEmptyConVar::GetName() const
0006ac30 t non-virtual thunk to CEmptyConVar::IsFlagSet(int) const
000690b0 t non-virtual thunk to ConVar::GetName() const
00069040 t non-virtual thunk to ConVar::IsFlagSet(int) const
0010c890 t non-virtual thunk to IVP_U_Active_Test_Range::active_float_changed(IVP_U_Active_Float*)
0010c900 t non-virtual thunk to IVP_U_Active_Terminal_Int::update_int()
0010c640 t non-virtual thunk to IVP_U_Active_Add::active_float_changed(IVP_U_Active_Float*)
0010c5f0 t non-virtual thunk to IVP_U_Active_Sub::active_float_changed(IVP_U_Active_Float*)
0010c540 t non-virtual thunk to IVP_U_Active_Mult::active_float_changed(IVP_U_Active_Float*)
0010c780 t non-virtual thunk to IVP_U_Active_Sine::active_float_changed(IVP_U_Active_Float*)
0010c4f0 t non-virtual thunk to IVP_U_Active_Limit::active_float_changed(IVP_U_Active_Float*)
0010c690 t non-virtual thunk to IVP_U_Active_Pulse::active_float_changed(IVP_U_Active_Float*)
0010c710 t non-virtual thunk to IVP_U_Active_Square::active_float_changed(IVP_U_Active_Float*)
0010c480 t non-virtual thunk to IVP_U_Active_Switch::active_float_changed(IVP_U_Active_Float*)
0010c590 t non-virtual thunk to IVP_U_Active_Add_Multiple::active_float_changed(IVP_U_Active_Float*)
0010c800 t non-virtual thunk to IVP_U_Active_Terminal_Double::update_float()
0010b7e0 t non-virtual thunk to IVP_U_Active_Switch::active_int_changed(IVP_U_Active_Int*)
00054940 t non-virtual thunk to CPhysicsSpring::event_object_frozen(IVP_Event_Object*)
00054900 t non-virtual thunk to CPhysicsSpring::event_object_created(IVP_Event_Object*)
000543a0 t non-virtual thunk to CPhysicsSpring::event_object_deleted(IVP_Event_Object*)
00054920 t non-virtual thunk to CPhysicsSpring::event_object_revived(IVP_Event_Object*)
00054430 t non-virtual thunk to CPhysicsSpring::~CPhysicsSpring()
000543c0 t non-virtual thunk to CPhysicsSpring::~CPhysicsSpring()
00046860 t non-virtual thunk to CCollisionSolver::inter_penetration(IVP_Mindist*, IVP_Real_Object*, IVP_Real_Object*, double)
00041560 t non-virtual thunk to CCollisionSolver::max_velocity_exceeded(IVP_Anomaly_Limits*, IVP_Core*, IVP_U_Float_Point*)
00040fa0 t non-virtual thunk to CCollisionSolver::environment_will_be_deleted(IVP_Environment*)
00041010 t non-virtual thunk to CCollisionSolver::max_collision_checks_exceeded(int)
00046600 t non-virtual thunk to CCollisionSolver::max_contacts_exceeded_check_freezing(IVP_Core**, int)
00040fc0 t non-virtual thunk to CCollisionSolver::max_collisions_exceeded_check_freezing(IVP_Anomaly_Limits*, IVP_Core*)
00042910 t non-virtual thunk to CCollisionSolver::~CCollisionSolver()
00042890 t non-virtual thunk to CCollisionSolver::~CCollisionSolver()
00034110 t non-virtual thunk to CPhysics_Airboat::get_controller_name()
00030cb0 t non-virtual thunk to CPhysics_Airboat::get_controller_priority()
00033940 t non-virtual thunk to CPhysics_Airboat::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00030ff0 t non-virtual thunk to CPhysics_Airboat::get_associated_controlled_cores()
00031010 t non-virtual thunk to CPhysics_Airboat::core_is_going_to_be_deleted_event(IVP_Core*)
00031290 t non-virtual thunk to CPhysics_Airboat::~CPhysics_Airboat()
000311d0 t non-virtual thunk to CPhysics_Airboat::~CPhysics_Airboat()
00050b80 t non-virtual thunk to CPlayerController::IsInContact()
00053b60 t non-virtual thunk to CPlayerController::GetLastImpulse(Vector*)
00050770 t non-virtual thunk to CPlayerController::SetEventHandler(IPhysicsPlayerControllerEvent*)
00053c20 t non-virtual thunk to CPlayerController::GetPushMassLimit()
00053be0 t non-virtual thunk to CPlayerController::SetPushMassLimit(float)
00053c40 t non-virtual thunk to CPlayerController::GetPushSpeedLimit()
00053f20 t non-virtual thunk to CPlayerController::GetShadowPosition(Vector*, QAngle*)
00050c00 t non-virtual thunk to CPlayerController::GetShadowVelocity(Vector*)
00053c00 t non-virtual thunk to CPlayerController::SetPushSpeedLimit(float)
00050750 t non-virtual thunk to CPlayerController::Jump()
00050e70 t non-virtual thunk to CPlayerController::StepUp(float)
00051490 t non-virtual thunk to CPlayerController::Update(Vector const&, Vector const&, float, bool, IPhysicsObject*)
00050cf0 t non-virtual thunk to CPlayerController::MaxSpeed(Vector const&)
00053bc0 t non-virtual thunk to CPlayerController::GetObject()
00051870 t non-virtual thunk to CPlayerController::SetObject(IPhysicsObject*)
00053b30 t non-virtual thunk to CPlayerController::WasFrozen()
00051960 t non-virtual thunk to CPlayerController::~CPlayerController()
000518e0 t non-virtual thunk to CPlayerController::~CPlayerController()
00050840 t non-virtual thunk to CShadowController::GetMaxSpeed(float*, float*)
00053d30 t non-virtual thunk to CShadowController::AllowsRotation()
00053d60 t non-virtual thunk to CShadowController::GetLastImpulse(Vector*)
00053d00 t non-virtual thunk to CShadowController::AllowsTranslation()
00050880 t non-virtual thunk to CShadowController::GetTargetPosition(Vector*, QAngle*)
00053e30 t non-virtual thunk to CShadowController::UseShadowMaterial(bool)
000507c0 t non-virtual thunk to CShadowController::GetTeleportDistance()
00050790 t non-virtual thunk to CShadowController::SetTeleportDistance(float)
00053eb0 t non-virtual thunk to CShadowController::ObjectMaterialChanged(int)
00053e00 t non-virtual thunk to CShadowController::IsPhysicallyControlled()
00053dc0 t non-virtual thunk to CShadowController::SetPhysicallyControlled(bool)
00050af0 t non-virtual thunk to CShadowController::StepUp(float)
00050920 t non-virtual thunk to CShadowController::Update(Vector const&, QAngle const&, float)
00050800 t non-virtual thunk to CShadowController::MaxSpeed(float, float)
00053460 t non-virtual thunk to CShadowController::~CShadowController()
00053400 t non-virtual thunk to CShadowController::~CShadowController()
0003d570 t non-virtual thunk to CPhysicsConstraint::event_object_frozen(IVP_Event_Object*)
0003d530 t non-virtual thunk to CPhysicsConstraint::event_object_created(IVP_Event_Object*)
0003beb0 t non-virtual thunk to CPhysicsConstraint::event_object_deleted(IVP_Event_Object*)
0003d550 t non-virtual thunk to CPhysicsConstraint::event_object_revived(IVP_Event_Object*)
0003be80 t non-virtual thunk to CPhysicsConstraint::~CPhysicsConstraint()
0003bdf0 t non-virtual thunk to CPhysicsConstraint::~CPhysicsConstraint()
000589b0 t non-virtual thunk to CVehicleController::event_object_frozen(IVP_Event_Object*)
00058970 t non-virtual thunk to CVehicleController::event_object_created(IVP_Event_Object*)
000568d0 t non-virtual thunk to CVehicleController::event_object_deleted(IVP_Event_Object*)
00058990 t non-virtual thunk to CVehicleController::event_object_revived(IVP_Event_Object*)
00056960 t non-virtual thunk to CVehicleController::~CVehicleController()
00056900 t non-virtual thunk to CVehicleController::~CVehicleController()
0004baf0 t non-virtual thunk to CPhysicsMotionController::GetObjects(IPhysicsObject**)
0004ad00 t non-virtual thunk to CPhysicsMotionController::SetPriority(IPhysicsMotionController::priority_t)
0004bb60 t non-virtual thunk to CPhysicsMotionController::WakeObjects()
0004b850 t non-virtual thunk to CPhysicsMotionController::AttachObject(IPhysicsObject*, bool)
0004bc00 t non-virtual thunk to CPhysicsMotionController::ClearObjects()
0004bad0 t non-virtual thunk to CPhysicsMotionController::CountObjects()
0004b610 t non-virtual thunk to CPhysicsMotionController::DetachObject(IPhysicsObject*)
0004ad50 t non-virtual thunk to CPhysicsMotionController::SetEventHandler(IMotionEvent*)
0004b710 t non-virtual thunk to CPhysicsMotionController::~CPhysicsMotionController()
0004b640 t non-virtual thunk to CPhysicsMotionController::~CPhysicsMotionController()
000ddfa0 t non-virtual thunk to IVP_Controller_Raycast_Car::get_controller_priority()
000df480 t non-virtual thunk to IVP_Controller_Raycast_Car::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000dfc30 t non-virtual thunk to IVP_Controller_Raycast_Car::get_associated_controlled_cores()
000dfc00 t non-virtual thunk to IVP_Controller_Raycast_Car::core_is_going_to_be_deleted_event(IVP_Core*)
000df710 t non-virtual thunk to IVP_Controller_Raycast_Car::~IVP_Controller_Raycast_Car()
000df660 t non-virtual thunk to IVP_Controller_Raycast_Car::~IVP_Controller_Raycast_Car()
0003df50 t non-virtual thunk to CPhysics_Car_System_Raycast_Wheels::get_controller_name()
0003db90 t non-virtual thunk to CPhysics_Car_System_Raycast_Wheels::~CPhysics_Car_System_Raycast_Wheels()
0003db60 t non-virtual thunk to CPhysics_Car_System_Raycast_Wheels::~CPhysics_Car_System_Raycast_Wheels()
00053cc0 t non-virtual thunk to CPlayerController::event_object_frozen(IVP_Event_Object*)
00053c80 t non-virtual thunk to CPlayerController::event_object_created(IVP_Event_Object*)
00053c60 t non-virtual thunk to CPlayerController::event_object_deleted(IVP_Event_Object*)
00053ca0 t non-virtual thunk to CPlayerController::event_object_revived(IVP_Event_Object*)
00051950 t non-virtual thunk to CPlayerController::~CPlayerController()
000518d0 t non-virtual thunk to CPlayerController::~CPlayerController()
00040df0 t non-virtual thunk to CPhysicsListenerCollision::core_left_volume(IVP_Controller_Phantom*, IVP_Core*)
00040d70 t non-virtual thunk to CPhysicsListenerCollision::core_entered_volume(IVP_Controller_Phantom*, IVP_Core*)
00040d50 t non-virtual thunk to CPhysicsListenerCollision::mindist_left_volume(IVP_Controller_Phantom*, IVP_Mindist_Base*)
00040d30 t non-virtual thunk to CPhysicsListenerCollision::mindist_entered_volume(IVP_Controller_Phantom*, IVP_Mindist_Base*)
00040e70 t non-virtual thunk to CPhysicsListenerCollision::phantom_is_going_to_be_deleted_event(IVP_Controller_Phantom*)
0014e338 r typeinfo for ConCommand
0014dadc r typeinfo for CTraceAABB
0014dbb8 r typeinfo for CTraceCone
00162aec r typeinfo for hk_Console
0014e9f4 r typeinfo for hk_Link_EF
00149f9c r typeinfo for IAppSystem
0015f858 r typeinfo for IVP_Object
001625b4 r typeinfo for CPolyhedron
0014dbf4 r typeinfo for IConvexInfo
0015f870 r typeinfo for IVP_Cluster
00161610 r typeinfo for IVP_Mindist
0015fdb0 r typeinfo for IVP_Polygon
00161514 r typeinfo for IVP_Synapse
0014d904 r typeinfo for CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>
0014b734 r typeinfo for CDeleteProxy<IPhysicsConstraint>
0014e544 r typeinfo for CEmptyConVar
0014a7d0 r typeinfo for CPhysCollide
0014dba4 r typeinfo for CTraceSolver
0014a7e4 r typeinfo for IPhysCollide
0014db9c r typeinfo for ITraceObject
0015e410 r typeinfo for IVP_Actuator
00160184 r typeinfo for IVP_Material
00157c88 r typeinfo for IVP_Triangle
0014cdec r typeinfo for aligned_tmp_t
0014b6c0 r typeinfo for CSleepObjects
0014b754 r typeinfo for CVoidPairHash
0014eb08 r typeinfo for hk_Constraint
00162024 r typeinfo for IVP_3D_Solver
0015e0ac r typeinfo for IVP_CFEP_Hash
00161364 r typeinfo for IVP_Collision
00149f5c r typeinfo for CBaseAppSystem<IPhysics>
0014dbac r typeinfo for CDefConvexInfo
0014e320 r typeinfo for ConCommandBase
0014c554 r typeinfo for CPhysicsObject
0014cea0 r typeinfo for CPhysicsSpring
0014de78 r typeinfo for CVPhysicsParse
0014c814 r typeinfo for IPhysicsObject
0014cfa8 r typeinfo for IPhysicsSpring
0015ebe4 r typeinfo for IVP_Car_System
001623e0 r typeinfo for IVP_Constraint
0015fabc r typeinfo for IVP_Controller
001615c0 r typeinfo for IVP_OO_Watcher
00161280 r typeinfo for IVP_OV_Element
00157440 r typeinfo for IVP_point_hash
0015e1fc r typeinfo for IVP_Ray_Solver
00161588 r typeinfo for IVP_Synapse_OO
0015fe50 r typeinfo for IVP_Time_Event
0014a47c r typeinfo for CCollisionQuery
0014b6d8 r typeinfo for CDragController
0014b748 r typeinfo for CObjectPairHash
00149f04 r typeinfo for CTier0AppSystem<IPhysics>
00149eac r typeinfo for CTier1AppSystem<IPhysics, 0>
0014a7dc r typeinfo for ICollisionQuery
0014c894 r typeinfo for ISaveRestoreOps
0015f8e0 r typeinfo for IVP_Real_Object
0014b6a0 r typeinfo for CCollisionSolver
0014e5ec r typeinfo for CDataManagerBase
0014e55c r typeinfo for CDefaultAccessor
0014e6b4 r typeinfo for CDllDemandLoader
0014a040 r typeinfo for CPhysics_Airboat
0014b72c r typeinfo for IDeleteQueueItem
00161534 r typeinfo for IVP_Mindist_Base
001612d4 r typeinfo for IVP_ov_tree_hash
001615f4 r typeinfo for IVP_Synapse_Real
0015fe90 r typeinfo for IVP_Time_Event_D
0015feb0 r typeinfo for IVP_Time_Event_N
00160920 r typeinfo for IVP_U_Active_Add
001607a8 r typeinfo for IVP_U_Active_Int
00160960 r typeinfo for IVP_U_Active_Sub
0015f1b0 r typeinfo for IVP_U_Set_Active<IVP_Real_Object>
0015f18c r typeinfo for IVP_U_Set_Active<IVP_Mindist_Base>
0015f1c8 r typeinfo for IVP_U_Set_Active<IVP_Core>
0014cd78 r typeinfo for CAlignedNewDelete<16, aligned_tmp_t>
0014b99c r typeinfo for CBuoyancyAttacher
0014bb9c r typeinfo for CFrictionSnapshot
0014c850 r typeinfo for CMaterialIndexOps
0014a430 r typeinfo for CPhysicsCollision
00149e24 r typeinfo for CPhysicsInterface
0014ca80 r typeinfo for CPlayerController
0014cac0 r typeinfo for CShadowController
0014a7c8 r typeinfo for IPhysicsCollision
0015fed0 r typeinfo for IVP_Event_Manager
0015746c r typeinfo for IVP_I_Point_VHash
0015f6ec r typeinfo for IVP_Listener_Hull
00161c94 r typeinfo for IVP_Range_Manager
001609e0 r typeinfo for IVP_U_Active_Mult
00160860 r typeinfo for IVP_U_Active_Sine
0014c870 r typeinfo for CDefSaveRestoreOps
0014aca0 r typeinfo for CPhysicsConstraint
0014e8a0 r typeinfo for CUtlCharConversion
0014d620 r typeinfo for CVehicleController
0014ae08 r typeinfo for IPhysicsConstraint
0015e660 r typeinfo for IVP_Actuator_Extra
0015e484 r typeinfo for IVP_Actuator_Force
0015ffc8 r typeinfo for IVP_Anomaly_Limits
0014df14 r typeinfo for IVPhysicsKeyParser
00157400 r typeinfo for IVP_I_FPoint_VHash
0015e248 r typeinfo for IVP_Ray_Solver_Min
00160408 r typeinfo for IVP_SurfaceManager
0015fe70 r typeinfo for IVP_Time_Event_PSI
00160788 r typeinfo for IVP_U_Active_Float
00160a20 r typeinfo for IVP_U_Active_Limit
001608e0 r typeinfo for IVP_U_Active_Pulse
00160768 r typeinfo for IVP_U_Active_Value
0014be28 r typeinfo for CIVPMaterialManager
0014b160 r typeinfo for CPhysicsEnvironment
0014e8fc r typeinfo for CUtlNoEscConversion
0014eb9c r typeinfo for hk_Fixed_Constraint
0014ec0c r typeinfo for hk_Hinge_Constraint
0014b628 r typeinfo for IPhysicsEnvironment
00161970 r typeinfo for IVP_3D_Solver_PK_KK
0015ea88 r typeinfo for IVP_Actuator_Spring
0015e578 r typeinfo for IVP_Actuator_Torque
0015ffe8 r typeinfo for IVP_Anomaly_Manager
0015ff1c r typeinfo for IVP_Event_Manager_D
0015fb98 r typeinfo for IVP_Friction_System
0015fa7c r typeinfo for IVP_Listener_Object
0015ea68 r typeinfo for IVP_Listener_Spring
001601a4 r typeinfo for IVP_Material_Simple
001608a0 r typeinfo for IVP_U_Active_Square
00160aa0 r typeinfo for IVP_U_Active_Switch
0014a144 r typeinfo for CAirboatFrictionData
0014e494 r typeinfo for ConVar_ServerBounded
00149ec0 r typeinfo for CPhysicsCollisionSet
0014b670 r typeinfo for CPhysicsFrictionData
0014be4c r typeinfo for CPhysicsSurfaceProps
0014ecec r typeinfo for hk_Pulley_Constraint
00149eb8 r typeinfo for IPhysicsCollisionSet
0014bfd0 r typeinfo for IPhysicsSurfaceProps
001619b8 r typeinfo for IVP_3D_Solver_PF_NPF
0016194c r typeinfo for IVP_3D_Solver_S_VALS
0015e4f8 r typeinfo for IVP_Actuator_Rot_Mot
0015e020 r typeinfo for IVP_Collision_Filter
00161d20 r typeinfo for IVP_Constraint_Local
00161dfc r typeinfo for IVP_Controller_Golem
0015f904 r typeinfo for IVP_Controller_VHash
0015f078 r typeinfo for IVP_Listener_Phantom
001601c8 r typeinfo for IVP_Material_Manager
0015e1e0 r typeinfo for IVP_Ray_Hit_Listener
0015f8c0 r typeinfo for IVP_Real_Object_Fast
0015fbbc r typeinfo for IVP_Universe_Manager
0014b67c r typeinfo for CPhysicsCollisionData
0014e8c0 r typeinfo for CUtlCStringConversion
0014b814 r typeinfo for CVPhysicsDebugOverlay
0014ed50 r typeinfo for hk_Ragdoll_Constraint
0014a168 r typeinfo for IPhysicsCollisionData
001619dc r typeinfo for IVP_3D_Solver_KK_COLL
001618b4 r typeinfo for IVP_3D_Solver_PF_COLL
00161994 r typeinfo for IVP_3D_Solver_PK_COLL
00160ae0 r typeinfo for IVP_Active_Value_Hash
0015e620 r typeinfo for IVP_Anchor_Check_Dist
0014baa4 r typeinfo for IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>
00161dd8 r typeinfo for IVP_Controller_Motion
0014b8dc r typeinfo for IVPhysicsDebugOverlay
00161640 r typeinfo for IVP_Mindist_Recursive
00162564 r typeinfo for CPolyhedron_AllocByNew
001625bc r typeinfo for CPolyhedron_TempMemory
0014b8bc r typeinfo for IPhysicsCollisionEvent
0014b740 r typeinfo for IPhysicsObjectPairHash
0015e438 r typeinfo for IVP_Actuator_Two_Point
0016007c r typeinfo for IVP_BetterDebugmanager
0015f09c r typeinfo for IVP_Controller_Phantom
0015faa0 r typeinfo for IVP_Listener_Collision
0016032c r typeinfo for IVP_PerformanceCounter
0014b784 r typeinfo for CEmptyCollisionListener
0014d82c r typeinfo for CPhysCollideVirtualMesh
0014ac74 r typeinfo for CPhysicsConstraintGroup
0014b97c r typeinfo for CPhysicsFluidController
0014db04 r typeinfo for CTraceSolverSweptObject
0014df4c r typeinfo for CVPhysPtrSaveRestoreOps
0014eaa8 r typeinfo for hk_Breakable_Constraint
0014ec7c r typeinfo for hk_Prismatic_Constraint
0014eb5c r typeinfo for hk_Rigid_Body_Binary_EF
0014e58c r typeinfo for IConCommandBaseAccessor
0014ae00 r typeinfo for IPhysicsConstraintGroup
0014ba9c r typeinfo for IPhysicsFluidController
0015e460 r typeinfo for IVP_Actuator_Four_Point
0015e69c r typeinfo for IVP_Actuator_Stabilizer
0015eafc r typeinfo for IVP_Actuator_Suspension
00161320 r typeinfo for IVP_Collision_Delegator
0015ee58 r typeinfo for IVP_Controller_Buoyancy
0015f424 r typeinfo for IVP_Friction_Sys_Energy
0015f44c r typeinfo for IVP_Friction_Sys_Static
0015f31c r typeinfo for IVP_Listener_Constraint
0014bb34 r typeinfo for IVP_Listener_Set_Active<IVP_Core>
0015e224 r typeinfo for IVP_Ray_Solver_Min_Hash
00161f78 r typeinfo for IVP_SurfaceManager_Ball
00160a60 r typeinfo for IVP_U_Active_Test_Range
0014babc r typeinfo for CLiquidSurfaceDescriptor
0014c0c0 r typeinfo for CPhysicsMotionController
0014bc64 r typeinfo for IPhysicsFrictionSnapshot
0014c190 r typeinfo for IPhysicsMotionController
0014cd68 r typeinfo for IPhysicsPlayerController
0014cd70 r typeinfo for IPhysicsShadowController
0015fb0c r typeinfo for IVP_Controller_Dependent
00160720 r typeinfo for IVP_U_Active_Int_Delayed
0014b1a0 r typeinfo for CPhysicsListenerCollision
0014ea38 r typeinfo for hk_Ball_Socket_Constraint
0014d730 r typeinfo for IPhysicsVehicleController
00161a04 r typeinfo for IVP_3D_Solver_KK_PARALLEL
0015e4c0 r typeinfo for IVP_Actuator_Force_Active
0015eda0 r typeinfo for IVP_Constraint_Solver_Car
0015e090 r typeinfo for IVP_Meta_Collision_Filter
001609a0 r typeinfo for IVP_U_Active_Add_Multiple
001606fc r typeinfo for IVP_U_Active_Int_Listener
00160820 r typeinfo for IVP_U_Active_Terminal_Int
0014a45c r typeinfo for CPhysCollideCompactSurface
0014b6cc r typeinfo for CPhysicsListenerConstraint
0014e958 r typeinfo for hk_Local_Constraint_System
0014edc4 r typeinfo for hk_Stiff_Spring_Constraint
0015eac0 r typeinfo for IVP_Actuator_Spring_Active
0015e5c0 r typeinfo for IVP_Actuator_Torque_Active
0015ec0c r typeinfo for IVP_Car_System_Real_Wheels
0015fae4 r typeinfo for IVP_Controller_Independent
0015ef60 r typeinfo for IVP_Controller_Raycast_Car
0015fef8 r typeinfo for IVP_Event_Manager_Standard
00160478 r typeinfo for IVP_SurfaceManager_Polygon
00160748 r typeinfo for IVP_U_Active_Float_Delayed
001606b0 r typeinfo for IVP_U_Active_Value_Manager
0015e540 r typeinfo for IVP_Actuator_Rot_Mot_Active
0015f89c r typeinfo for IVP_Real_Object_Fast_Static
001606d8 r typeinfo for IVP_U_Active_Float_Listener
0014bfc4 r typeinfo for IPhysicsSurfacePropsInternal
00161348 r typeinfo for IVP_Collision_Delegator_Root
001607e0 r typeinfo for IVP_U_Active_Terminal_Double
001600e0 r typeinfo for IVP_Liquid_Surface_Descriptor
0015e600 r typeinfo for IVP_Listener_Check_Dist_Event
00160360 r typeinfo for IVP_PerformanceCounter_Simple
0015eea4 r typeinfo for IVP_Attacher_To_Cores_Buoyancy
00161fe4 r typeinfo for IVP_Object_Callback_Table_Hash
0014d804 r typeinfo for IVP_SurfaceManager_VirtualMesh
001618e4 r typeinfo for IVP_3D_Solver_VEC_PARALLEL_AREA
0015fb60 r typeinfo for IVP_Standard_Gravity_Controller
0014df84 r typeinfo for CVPhysPtrUtlVectorSaveRestoreOps
00161424 r typeinfo for IVP_Collision_Callback_Table_Hash
0014aea8 r typeinfo for CPhysics_Car_System_Raycast_Wheels
0015e068 r typeinfo for IVP_Collision_Filter_Exclusive_Pair
00161928 r typeinfo for IVP_3D_Solver_DISTANCE_OF_TWO_POINTS
00161568 r typeinfo for IVP_Collision_Delegator_Root_Mindist
00160128 r typeinfo for IVP_Liquid_Surface_Descriptor_Simple
0014e360 r typeinfo for ConVar
0014e514 r typeinfo for IConVar
00161bcc r typeinfo for CFmtStrN<256, false>
0014be04 r typeinfo for CSurface
00149f84 r typeinfo for IPhysics
00161f00 r typeinfo for IVP_Ball
0014dac0 r typeinfo for CTraceIVP
0015f1a4 r typeinfo for IVP_U_Set<IVP_Real_Object>
0015f198 r typeinfo for IVP_U_Set<IVP_Mindist_Base>
0015f1bc r typeinfo for IVP_U_Set<IVP_Core>
001611a4 r typeinfo for IVP_VHash
0014e328 r typeinfo name for ConCommand
0014dacc r typeinfo name for CTraceAABB
0014dbfc r typeinfo name for CTraceCone
00162adc r typeinfo name for hk_Console
0014ea00 r typeinfo name for hk_Link_EF
00149fa4 r typeinfo name for IAppSystem
0015f84b r typeinfo name for IVP_Object
001625c8 r typeinfo name for CPolyhedron
0014dc09 r typeinfo name for IConvexInfo
0015f860 r typeinfo name for IVP_Cluster
00161600 r typeinfo name for IVP_Mindist
0015fda0 r typeinfo name for IVP_Polygon
00161503 r typeinfo name for IVP_Synapse
0014d920 r typeinfo name for CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>
0014b840 r typeinfo name for CDeleteProxy<IPhysicsConstraint>
0014e568 r typeinfo name for CEmptyConVar
0014a800 r typeinfo name for CPhysCollide
0014dbd3 r typeinfo name for CTraceSolver
0014a821 r typeinfo name for IPhysCollide
0014dbc4 r typeinfo name for ITraceObject
0015e400 r typeinfo name for IVP_Actuator
00160174 r typeinfo name for IVP_Material
00157c77 r typeinfo name for IVP_Triangle
0014cdf4 r typeinfo name for aligned_tmp_t
0014b7d2 r typeinfo name for CSleepObjects
0014b890 r typeinfo name for CVoidPairHash
0014eaf8 r typeinfo name for hk_Constraint
00162014 r typeinfo name for IVP_3D_Solver
0015e09c r typeinfo name for IVP_CFEP_Hash
00161354 r typeinfo name for IVP_Collision
00149f68 r typeinfo name for CBaseAppSystem<IPhysics>
0014dbe2 r typeinfo name for CDefConvexInfo
0014e30d r typeinfo name for ConCommandBase
0014c543 r typeinfo name for CPhysicsObject
0014ce83 r typeinfo name for CPhysicsSpring
0014de66 r typeinfo name for CVPhysicsParse
0014c83c r typeinfo name for IPhysicsObject
0014cfb0 r typeinfo name for IPhysicsSpring
0015ebd0 r typeinfo name for IVP_Car_System
001623cc r typeinfo name for IVP_Constraint
0015faa8 r typeinfo name for IVP_Controller
00161594 r typeinfo name for IVP_OO_Watcher
0016126d r typeinfo name for IVP_OV_Element
0015742c r typeinfo name for IVP_point_hash
0015e1e8 r typeinfo name for IVP_Ray_Solver
00161574 r typeinfo name for IVP_Synapse_OO
0015fe3d r typeinfo name for IVP_Time_Event
0014a468 r typeinfo name for CCollisionQuery
0014b7ff r typeinfo name for CDragController
0014b87e r typeinfo name for CObjectPairHash
00149f3e r typeinfo name for CTier0AppSystem<IPhysics>
00149ee0 r typeinfo name for CTier1AppSystem<IPhysics, 0>
0014a80f r typeinfo name for ICollisionQuery
0014c89c r typeinfo name for ISaveRestoreOps
0015f8cc r typeinfo name for IVP_Real_Object
0014b7bf r typeinfo name for CCollisionSolver
0014e5d6 r typeinfo name for CDataManagerBase
0014e577 r typeinfo name for CDefaultAccessor
0014e69f r typeinfo name for CDllDemandLoader
0014a017 r typeinfo name for CPhysics_Airboat
0014b820 r typeinfo name for IDeleteQueueItem
00161520 r typeinfo name for IVP_Mindist_Base
001612c0 r typeinfo name for IVP_ov_tree_hash
001615e0 r typeinfo name for IVP_Synapse_Real
0015fe7c r typeinfo name for IVP_Time_Event_D
0015fe9c r typeinfo name for IVP_Time_Event_N
00160900 r typeinfo name for IVP_U_Active_Add
00160794 r typeinfo name for IVP_U_Active_Int
00160940 r typeinfo name for IVP_U_Active_Sub
0015f260 r typeinfo name for IVP_U_Set_Active<IVP_Real_Object>
0015f1e0 r typeinfo name for IVP_U_Set_Active<IVP_Mindist_Base>
0015f29c r typeinfo name for IVP_U_Set_Active<IVP_Core>
0014cdc0 r typeinfo name for CAlignedNewDelete<16, aligned_tmp_t>
0014b988 r typeinfo name for CBuoyancyAttacher
0014bb85 r typeinfo name for CFrictionSnapshot
0014c85c r typeinfo name for CMaterialIndexOps
0014a41c r typeinfo name for CPhysicsCollision
00149e10 r typeinfo name for CPhysicsInterface
0014ca5e r typeinfo name for CPlayerController
0014caa8 r typeinfo name for CShadowController
0014a7ec r typeinfo name for IPhysicsCollision
0015febc r typeinfo name for IVP_Event_Manager
00157458 r typeinfo name for IVP_I_Point_VHash
0015f6d8 r typeinfo name for IVP_Listener_Hull
00161c80 r typeinfo name for IVP_Range_Manager
001609c0 r typeinfo name for IVP_U_Active_Mult
00160840 r typeinfo name for IVP_U_Active_Sine
0014c87c r typeinfo name for CDefSaveRestoreOps
0014ac80 r typeinfo name for CPhysicsConstraint
0014e889 r typeinfo name for CUtlCharConversion
0014d5f3 r typeinfo name for CVehicleController
0014ae2a r typeinfo name for IPhysicsConstraint
0015e62c r typeinfo name for IVP_Actuator_Extra
0015e46c r typeinfo name for IVP_Actuator_Force
0015ffb0 r typeinfo name for IVP_Anomaly_Limits
0014df1c r typeinfo name for IVPhysicsKeyParser
001573e8 r typeinfo name for IVP_I_FPoint_VHash
0015e230 r typeinfo name for IVP_Ray_Solver_Min
001603f0 r typeinfo name for IVP_SurfaceManager
0015fe58 r typeinfo name for IVP_Time_Event_PSI
00160770 r typeinfo name for IVP_U_Active_Float
00160a00 r typeinfo name for IVP_U_Active_Limit
001608c0 r typeinfo name for IVP_U_Active_Pulse
00160750 r typeinfo name for IVP_U_Active_Value
0014be10 r typeinfo name for CIVPMaterialManager
0014b14a r typeinfo name for CPhysicsEnvironment
0014e908 r typeinfo name for CUtlNoEscConversion
0014eb84 r typeinfo name for hk_Fixed_Constraint
0014ebf6 r typeinfo name for hk_Hinge_Constraint
0014b76c r typeinfo name for IPhysicsEnvironment
00161958 r typeinfo name for IVP_3D_Solver_PK_KK
0015ea70 r typeinfo name for IVP_Actuator_Spring
0015e560 r typeinfo name for IVP_Actuator_Torque
0015ffd0 r typeinfo name for IVP_Anomaly_Manager
0015ff04 r typeinfo name for IVP_Event_Manager_D
0015fb80 r typeinfo name for IVP_Friction_System
0015fa63 r typeinfo name for IVP_Listener_Object
0015ea50 r typeinfo name for IVP_Listener_Spring
0016018c r typeinfo name for IVP_Material_Simple
00160880 r typeinfo name for IVP_U_Active_Square
00160a80 r typeinfo name for IVP_U_Active_Switch
0014a150 r typeinfo name for CAirboatFrictionData
0014e52c r typeinfo name for ConVar_ServerBounded
00149f27 r typeinfo name for CPhysicsCollisionSet
0014b790 r typeinfo name for CPhysicsFrictionData
0014be34 r typeinfo name for CPhysicsSurfaceProps
0014ecd3 r typeinfo name for hk_Pulley_Constraint
00149f10 r typeinfo name for IPhysicsCollisionSet
0014bff7 r typeinfo name for IPhysicsSurfaceProps
001619a0 r typeinfo name for IVP_3D_Solver_PF_NPF
00161934 r typeinfo name for IVP_3D_Solver_S_VALS
0015e4e0 r typeinfo name for IVP_Actuator_Rot_Mot
0015e008 r typeinfo name for IVP_Collision_Filter
00161d08 r typeinfo name for IVP_Constraint_Local
00161de4 r typeinfo name for IVP_Controller_Golem
0015f8ec r typeinfo name for IVP_Controller_VHash
0015f05f r typeinfo name for IVP_Listener_Phantom
001601b0 r typeinfo name for IVP_Material_Manager
0015e1c8 r typeinfo name for IVP_Ray_Hit_Listener
0015f8a8 r typeinfo name for IVP_Real_Object_Fast
0015fba4 r typeinfo name for IVP_Universe_Manager
0014b7a7 r typeinfo name for CPhysicsCollisionData
0014e8a8 r typeinfo name for CUtlCStringConversion
0014b8c4 r typeinfo name for CVPhysicsDebugOverlay
0014ed38 r typeinfo name for hk_Ragdoll_Constraint
0014a170 r typeinfo name for IPhysicsCollisionData
001619c4 r typeinfo name for IVP_3D_Solver_KK_COLL
00161899 r typeinfo name for IVP_3D_Solver_PF_COLL
0016197c r typeinfo name for IVP_3D_Solver_PK_COLL
00160ac8 r typeinfo name for IVP_Active_Value_Hash
0015e608 r typeinfo name for IVP_Anchor_Check_Dist
0014bb00 r typeinfo name for IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>
00161dc0 r typeinfo name for IVP_Controller_Motion
0014b8fd r typeinfo name for IVPhysicsDebugOverlay
0016161c r typeinfo name for IVP_Mindist_Recursive
00162548 r typeinfo name for CPolyhedron_AllocByNew
001625d6 r typeinfo name for CPolyhedron_TempMemory
0014b8e4 r typeinfo name for IPhysicsCollisionEvent
0014b865 r typeinfo name for IPhysicsObjectPairHash
0015e41c r typeinfo name for IVP_Actuator_Two_Point
00160060 r typeinfo name for IVP_BetterDebugmanager
0015f080 r typeinfo name for IVP_Controller_Phantom
0015fa84 r typeinfo name for IVP_Listener_Collision
00160312 r typeinfo name for IVP_PerformanceCounter
0014b8a0 r typeinfo name for CEmptyCollisionListener
0014d810 r typeinfo name for CPhysCollideVirtualMesh
0014ac58 r typeinfo name for CPhysicsConstraintGroup
0014b960 r typeinfo name for CPhysicsFluidController
0014dae8 r typeinfo name for CTraceSolverSweptObject
0014df31 r typeinfo name for CVPhysPtrSaveRestoreOps
0014ea8c r typeinfo name for hk_Breakable_Constraint
0014ec62 r typeinfo name for hk_Prismatic_Constraint
0014eb64 r typeinfo name for hk_Rigid_Body_Binary_EF
0014e594 r typeinfo name for IConCommandBaseAccessor
0014ae10 r typeinfo name for IPhysicsConstraintGroup
0014bac8 r typeinfo name for IPhysicsFluidController
0015e444 r typeinfo name for IVP_Actuator_Four_Point
0015e680 r typeinfo name for IVP_Actuator_Stabilizer
0015eae0 r typeinfo name for IVP_Actuator_Suspension
00161304 r typeinfo name for IVP_Collision_Delegator
0015ee3d r typeinfo name for IVP_Controller_Buoyancy
0015f409 r typeinfo name for IVP_Friction_Sys_Energy
0015f430 r typeinfo name for IVP_Friction_Sys_Static
0015f302 r typeinfo name for IVP_Listener_Constraint
0014bb60 r typeinfo name for IVP_Listener_Set_Active<IVP_Core>
0015e208 r typeinfo name for IVP_Ray_Solver_Min_Hash
00161f84 r typeinfo name for IVP_SurfaceManager_Ball
00160a40 r typeinfo name for IVP_U_Active_Test_Range
0014bb3c r typeinfo name for CLiquidSurfaceDescriptor
0014c0a5 r typeinfo name for CPhysicsMotionController
0014bc6c r typeinfo name for IPhysicsFrictionSnapshot
0014c198 r typeinfo name for IPhysicsMotionController
0014cd84 r typeinfo name for IPhysicsPlayerController
0014cd9f r typeinfo name for IPhysicsShadowController
0015faf0 r typeinfo name for IVP_Controller_Dependent
00160704 r typeinfo name for IVP_U_Active_Int_Delayed
0014b16c r typeinfo name for CPhysicsListenerCollision
0014ea19 r typeinfo name for hk_Ball_Socket_Constraint
0014d738 r typeinfo name for IPhysicsVehicleController
001619e8 r typeinfo name for IVP_3D_Solver_KK_PARALLEL
0015e490 r typeinfo name for IVP_Actuator_Force_Active
0015ed83 r typeinfo name for IVP_Constraint_Solver_Car
0015e074 r typeinfo name for IVP_Meta_Collision_Filter
00160980 r typeinfo name for IVP_U_Active_Add_Multiple
001606e0 r typeinfo name for IVP_U_Active_Int_Listener
00160800 r typeinfo name for IVP_U_Active_Terminal_Int
0014a43c r typeinfo name for CPhysCollideCompactSurface
0014b7e2 r typeinfo name for CPhysicsListenerConstraint
0014e93b r typeinfo name for hk_Local_Constraint_System
0014eda5 r typeinfo name for hk_Stiff_Spring_Constraint
0015ea94 r typeinfo name for IVP_Actuator_Spring_Active
0015e584 r typeinfo name for IVP_Actuator_Torque_Active
0015ebec r typeinfo name for IVP_Car_System_Real_Wheels
0015fac4 r typeinfo name for IVP_Controller_Independent
0015ef3c r typeinfo name for IVP_Controller_Raycast_Car
0015fed8 r typeinfo name for IVP_Event_Manager_Standard
00160458 r typeinfo name for IVP_SurfaceManager_Polygon
00160728 r typeinfo name for IVP_U_Active_Float_Delayed
00160693 r typeinfo name for IVP_U_Active_Value_Manager
0015e504 r typeinfo name for IVP_Actuator_Rot_Mot_Active
0015f87c r typeinfo name for IVP_Real_Object_Fast_Static
001606b8 r typeinfo name for IVP_U_Active_Float_Listener
0014bfd8 r typeinfo name for IPhysicsSurfacePropsInternal
00161328 r typeinfo name for IVP_Collision_Delegator_Root
001607b4 r typeinfo name for IVP_U_Active_Terminal_Double
001600c0 r typeinfo name for IVP_Liquid_Surface_Descriptor
0015e5e0 r typeinfo name for IVP_Listener_Check_Dist_Event
00160340 r typeinfo name for IVP_PerformanceCounter_Simple
0015ee80 r typeinfo name for IVP_Attacher_To_Cores_Buoyancy
00161fc0 r typeinfo name for IVP_Object_Callback_Table_Hash
0014d7e0 r typeinfo name for IVP_SurfaceManager_VirtualMesh
001618c0 r typeinfo name for IVP_3D_Solver_VEC_PARALLEL_AREA
0015fb20 r typeinfo name for IVP_Standard_Gravity_Controller
0014df60 r typeinfo name for CVPhysPtrUtlVectorSaveRestoreOps
00161400 r typeinfo name for IVP_Collision_Callback_Table_Hash
0014ae80 r typeinfo name for CPhysics_Car_System_Raycast_Wheels
0015e040 r typeinfo name for IVP_Collision_Filter_Exclusive_Pair
00161900 r typeinfo name for IVP_3D_Solver_DISTANCE_OF_TWO_POINTS
00161540 r typeinfo name for IVP_Collision_Delegator_Root_Mindist
00160100 r typeinfo name for IVP_Liquid_Surface_Descriptor_Simple
0014e344 r typeinfo name for ConVar
0014e550 r typeinfo name for IConVar
00161bd4 r typeinfo name for CFmtStrN<256, false>
0014bdf8 r typeinfo name for CSurface
00149f90 r typeinfo name for IPhysics
00161ef5 r typeinfo name for IVP_Ball
0014dab4 r typeinfo name for CTraceIVP
0015f227 r typeinfo name for IVP_U_Set<IVP_Real_Object>
0015f208 r typeinfo name for IVP_U_Set<IVP_Mindist_Base>
0015f286 r typeinfo name for IVP_U_Set<IVP_Core>
00161197 r typeinfo name for IVP_VHash
0014e3c0 r vtable for ConCommand
0014db28 r vtable for CTraceAABB
0014db88 r vtable for CTraceCone
00162af8 r vtable for hk_Console
0014e9c0 r vtable for hk_Link_EF
0015f920 r vtable for IVP_Object
00162588 r vtable for CPolyhedron
0015f930 r vtable for IVP_Cluster
00161780 r vtable for IVP_Mindist
0015fdc0 r vtable for IVP_Polygon
00161660 r vtable for IVP_Synapse
0014d8e0 r vtable for CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>
0014b588 r vtable for CDeleteProxy<IPhysicsConstraint>
0014e4a0 r vtable for CEmptyConVar
0014a780 r vtable for CPhysCollide
0014db68 r vtable for CTraceSolver
0014a740 r vtable for IPhysCollide
0014db50 r vtable for ITraceObject
0015e6c0 r vtable for IVP_Actuator
001601e0 r vtable for IVP_Material
00157c90 r vtable for IVP_Triangle
0014b500 r vtable for CSleepObjects
0014b610 r vtable for CVoidPairHash
0014eb20 r vtable for hk_Constraint
00162030 r vtable for IVP_3D_Solver
0015e0e0 r vtable for IVP_CFEP_Hash
001613e0 r vtable for IVP_Collision
0014db78 r vtable for CDefConvexInfo
0014e380 r vtable for ConCommandBase
0014c560 r vtable for CPhysicsObject
0014cec0 r vtable for CPhysicsSpring
0014dea0 r vtable for CVPhysicsParse
0014c6c0 r vtable for IPhysicsObject
0014cf80 r vtable for IPhysicsSpring
0015ec20 r vtable for IVP_Car_System
00162400 r vtable for IVP_Constraint
0015fc40 r vtable for IVP_Controller
00161700 r vtable for IVP_OO_Watcher
001612a0 r vtable for IVP_OV_Element
00157488 r vtable for IVP_point_hash
0015e270 r vtable for IVP_Ray_Solver
001616e0 r vtable for IVP_Synapse_OO
0015ff28 r vtable for IVP_Time_Event
0014a5e0 r vtable for CCollisionQuery
0014b540 r vtable for CDragController
0014b5e0 r vtable for CObjectPairHash
0014a700 r vtable for ICollisionQuery
0014e050 r vtable for ISaveRestoreOps
0015f960 r vtable for IVP_Real_Object
0014b4a0 r vtable for CCollisionSolver
0014e600 r vtable for CDataManagerBase
0014e520 r vtable for CDefaultAccessor
0014e6c0 r vtable for CDllDemandLoader
0014a060 r vtable for CPhysics_Airboat
0014b570 r vtable for IDeleteQueueItem
00161680 r vtable for IVP_Mindist_Base
001612f0 r vtable for IVP_ov_tree_hash
00161740 r vtable for IVP_Synapse_Real
0015ff48 r vtable for IVP_Time_Event_D
0015ff58 r vtable for IVP_Time_Event_N
00160d20 r vtable for IVP_U_Active_Add
00160bb0 r vtable for IVP_U_Active_Int
00160d60 r vtable for IVP_U_Active_Sub
0015f148 r vtable for IVP_U_Set_Active<IVP_Real_Object>
0015f100 r vtable for IVP_U_Set_Active<IVP_Mindist_Base>
0015f178 r vtable for IVP_U_Set_Active<IVP_Core>
0014ba00 r vtable for CBuoyancyAttacher
0014bbc0 r vtable for CFrictionSnapshot
0014c820 r vtable for CMaterialIndexOps
0014a500 r vtable for CPhysicsCollision
00149e40 r vtable for CPhysicsInterface
0014cb00 r vtable for CPlayerController
0014cc00 r vtable for CShadowController
0014a620 r vtable for IPhysicsCollision
0015ff68 r vtable for IVP_Event_Manager
001574a0 r vtable for IVP_I_Point_VHash
0015f6f8 r vtable for IVP_Listener_Hull
00161ca0 r vtable for IVP_Range_Manager
00160de0 r vtable for IVP_U_Active_Mult
00160c60 r vtable for IVP_U_Active_Sine
0014e070 r vtable for CDefSaveRestoreOps
0014ad00 r vtable for CPhysicsConstraint
0014e8e0 r vtable for CUtlCharConversion
0014d640 r vtable for CVehicleController
0014adc0 r vtable for IPhysicsConstraint
0015e940 r vtable for IVP_Actuator_Extra
0015e780 r vtable for IVP_Actuator_Force
0015fff0 r vtable for IVP_Anomaly_Limits
0014dee0 r vtable for IVPhysicsKeyParser
00157418 r vtable for IVP_I_FPoint_VHash
0015e2a0 r vtable for IVP_Ray_Solver_Min
00160420 r vtable for IVP_SurfaceManager
0015ff38 r vtable for IVP_Time_Event_PSI
00160b98 r vtable for IVP_U_Active_Float
00160e20 r vtable for IVP_U_Active_Limit
00160ce0 r vtable for IVP_U_Active_Pulse
00160b88 r vtable for IVP_U_Active_Value
0014bf00 r vtable for CIVPMaterialManager
0014b220 r vtable for CPhysicsEnvironment
0014e8f0 r vtable for CUtlNoEscConversion
0014ebc0 r vtable for hk_Fixed_Constraint
0014ec20 r vtable for hk_Hinge_Constraint
0014b380 r vtable for IPhysicsEnvironment
00161a50 r vtable for IVP_3D_Solver_PK_KK
0015eb20 r vtable for IVP_Actuator_Spring
0015e880 r vtable for IVP_Actuator_Torque
00160020 r vtable for IVP_Anomaly_Manager
0015ff98 r vtable for IVP_Event_Manager_D
0015fd40 r vtable for IVP_Friction_System
0015fbe0 r vtable for IVP_Listener_Object
0015eb08 r vtable for IVP_Listener_Spring
00160220 r vtable for IVP_Material_Simple
00160ca0 r vtable for IVP_U_Active_Square
00160ea0 r vtable for IVP_U_Active_Switch
0014a130 r vtable for CAirboatFrictionData
00149e98 r vtable for CPhysicsCollisionSet
0014b348 r vtable for CPhysicsFrictionData
0014bea0 r vtable for CPhysicsSurfaceProps
0014ed00 r vtable for hk_Pulley_Constraint
00149e80 r vtable for IPhysicsCollisionSet
0014bf40 r vtable for IPhysicsSurfaceProps
00161a70 r vtable for IVP_3D_Solver_PF_NPF
00161a40 r vtable for IVP_3D_Solver_S_VALS
0015e800 r vtable for IVP_Actuator_Rot_Mot
0015e0c8 r vtable for IVP_Collision_Filter
00161d40 r vtable for IVP_Constraint_Local
00161e60 r vtable for IVP_Controller_Golem
0015f978 r vtable for IVP_Controller_VHash
0015f0a8 r vtable for IVP_Listener_Phantom
00160260 r vtable for IVP_Material_Manager
0015e258 r vtable for IVP_Ray_Hit_Listener
0015f950 r vtable for IVP_Real_Object_Fast
0015fd70 r vtable for IVP_Universe_Manager
0014b360 r vtable for CPhysicsCollisionData
0014e8d0 r vtable for CUtlCStringConversion
0014b700 r vtable for CVPhysicsDebugOverlay
0014ed60 r vtable for hk_Ragdoll_Constraint
00161a80 r vtable for IVP_3D_Solver_KK_COLL
00161a10 r vtable for IVP_3D_Solver_PF_COLL
00161a60 r vtable for IVP_3D_Solver_PK_COLL
00160ed8 r vtable for IVP_Active_Value_Hash
0015e920 r vtable for IVP_Anchor_Check_Dist
0014ba68 r vtable for IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>
00161e20 r vtable for IVP_Controller_Motion
001617c0 r vtable for IVP_Mindist_Recursive
00162570 r vtable for CPolyhedron_AllocByNew
001625a0 r vtable for CPolyhedron_TempMemory
0014b5a0 r vtable for IPhysicsObjectPairHash
0015e700 r vtable for IVP_Actuator_Two_Point
00160088 r vtable for IVP_BetterDebugmanager
0015f0e0 r vtable for IVP_Controller_Phantom
0015fc00 r vtable for IVP_Listener_Collision
00160380 r vtable for IVP_PerformanceCounter
0014b640 r vtable for CEmptyCollisionListener
0014d840 r vtable for CPhysCollideVirtualMesh
0014acc0 r vtable for CPhysicsConstraintGroup
0014b9c0 r vtable for CPhysicsFluidController
0014db40 r vtable for CTraceSolverSweptObject
0014df90 r vtable for CVPhysPtrSaveRestoreOps
0014eac0 r vtable for hk_Breakable_Constraint
0014eca0 r vtable for hk_Prismatic_Constraint
0014eb50 r vtable for hk_Rigid_Body_Binary_EF
0014ad80 r vtable for IPhysicsConstraintGroup
0014ba40 r vtable for IPhysicsFluidController
0015e740 r vtable for IVP_Actuator_Four_Point
0015e980 r vtable for IVP_Actuator_Stabilizer
0015eba0 r vtable for IVP_Actuator_Suspension
00161370 r vtable for IVP_Collision_Delegator
0015eec0 r vtable for IVP_Controller_Buoyancy
0015f460 r vtable for IVP_Friction_Sys_Energy
0015f4a0 r vtable for IVP_Friction_Sys_Static
0015f328 r vtable for IVP_Listener_Constraint
0015ef28 r vtable for IVP_Listener_Set_Active<IVP_Core>
0015e288 r vtable for IVP_Ray_Solver_Min_Hash
00161f40 r vtable for IVP_SurfaceManager_Ball
00160e60 r vtable for IVP_U_Active_Test_Range
0014ba88 r vtable for CLiquidSurfaceDescriptor
0014c0e0 r vtable for CPhysicsMotionController
0014bc20 r vtable for IPhysicsFrictionSnapshot
0014c160 r vtable for IPhysicsMotionController
0014ccc0 r vtable for IPhysicsPlayerController
0014cd20 r vtable for IPhysicsShadowController
0015fcc0 r vtable for IVP_Controller_Dependent
00160b68 r vtable for IVP_U_Active_Int_Delayed
0014b1c0 r vtable for CPhysicsListenerCollision
0014ea60 r vtable for hk_Ball_Socket_Constraint
0014d6e0 r vtable for IPhysicsVehicleController
00161a90 r vtable for IVP_3D_Solver_KK_PARALLEL
0015e7c0 r vtable for IVP_Actuator_Force_Active
0015edc0 r vtable for IVP_Constraint_Solver_Car
0015e110 r vtable for IVP_Meta_Collision_Filter
00160da0 r vtable for IVP_U_Active_Add_Multiple
00160b58 r vtable for IVP_U_Active_Int_Listener
00160c20 r vtable for IVP_U_Active_Terminal_Int
0014a4a0 r vtable for CPhysCollideCompactSurface
0014b520 r vtable for CPhysicsListenerConstraint
0014e980 r vtable for hk_Local_Constraint_System
0014ede0 r vtable for hk_Stiff_Spring_Constraint
0015eb60 r vtable for IVP_Actuator_Spring_Active
0015e8c0 r vtable for IVP_Actuator_Torque_Active
0015ecc0 r vtable for IVP_Car_System_Real_Wheels
0015fc80 r vtable for IVP_Controller_Independent
0015ef80 r vtable for IVP_Controller_Raycast_Car
0015ff80 r vtable for IVP_Event_Manager_Standard
001604a0 r vtable for IVP_SurfaceManager_Polygon
00160b78 r vtable for IVP_U_Active_Float_Delayed
00160b00 r vtable for IVP_U_Active_Value_Manager
0015e840 r vtable for IVP_Actuator_Rot_Mot_Active
0015f940 r vtable for IVP_Real_Object_Fast_Static
00160b48 r vtable for IVP_U_Active_Float_Listener
0014bf80 r vtable for IPhysicsSurfacePropsInternal
001613a0 r vtable for IVP_Collision_Delegator_Root
00160be0 r vtable for IVP_U_Active_Terminal_Double
00160138 r vtable for IVP_Liquid_Surface_Descriptor
0015e900 r vtable for IVP_Listener_Check_Dist_Event
001603c0 r vtable for IVP_PerformanceCounter_Simple
0015ef00 r vtable for IVP_Attacher_To_Cores_Buoyancy
00162000 r vtable for IVP_Object_Callback_Table_Hash
0014d8a0 r vtable for IVP_SurfaceManager_VirtualMesh
00161a20 r vtable for IVP_3D_Solver_VEC_PARALLEL_AREA
0015fd00 r vtable for IVP_Standard_Gravity_Controller
0014dfb0 r vtable for CVPhysPtrUtlVectorSaveRestoreOps
00161440 r vtable for IVP_Collision_Callback_Table_Hash
0014aec0 r vtable for CPhysics_Car_System_Raycast_Wheels
0015e0f8 r vtable for IVP_Collision_Filter_Exclusive_Pair
00161a30 r vtable for IVP_3D_Solver_DISTANCE_OF_TWO_POINTS
001616a0 r vtable for IVP_Collision_Delegator_Root_Mindist
00160150 r vtable for IVP_Liquid_Surface_Descriptor_Simple
0014e400 r vtable for ConVar
0014e478 r vtable for IConVar
00161bc0 r vtable for CFmtStrN<256, false>
0014be60 r vtable for CSurface
00161f10 r vtable for IVP_Ball
0014db10 r vtable for CTraceIVP
0015f130 r vtable for IVP_U_Set<IVP_Real_Object>
0015f118 r vtable for IVP_U_Set<IVP_Mindist_Base>
0015f160 r vtable for IVP_U_Set<IVP_Core>
001611b0 r vtable for IVP_VHash
         U vtable for __cxxabiv1::__class_type_info@@CXXABI_1.3
         U vtable for __cxxabiv1::__si_class_type_info@@CXXABI_1.3
         U vtable for __cxxabiv1::__vmi_class_type_info@@CXXABI_1.3
001a8b48 b datamap_t* DataMapInit<vehicleparams_t>(vehicleparams_t*)::nameHolder
001a6c40 d datamap_t* DataMapInit<vehicleparams_t>(vehicleparams_t*)::dataDesc
001a8078 b datamap_t* DataMapInit<physcollideheader_t>(physcollideheader_t*)::nameHolder
001a3280 d datamap_t* DataMapInit<physcollideheader_t>(physcollideheader_t*)::dataDesc
001a8ab8 b datamap_t* DataMapInit<vehicle_axleparams_t>(vehicle_axleparams_t*)::nameHolder
001a6180 d datamap_t* DataMapInit<vehicle_axleparams_t>(vehicle_axleparams_t*)::dataDesc
001a8a18 b datamap_t* DataMapInit<vehicle_bodyparams_t>(vehicle_bodyparams_t*)::nameHolder
001a5ba0 d datamap_t* DataMapInit<vehicle_bodyparams_t>(vehicle_bodyparams_t*)::dataDesc
001a8a48 b datamap_t* DataMapInit<vehicle_wheelparams_t>(vehicle_wheelparams_t*)::nameHolder
001a5da0 d datamap_t* DataMapInit<vehicle_wheelparams_t>(vehicle_wheelparams_t*)::dataDesc
001a80a8 b datamap_t* DataMapInit<compactsurfaceheader_t>(compactsurfaceheader_t*)::nameHolder
001a3360 d datamap_t* DataMapInit<compactsurfaceheader_t>(compactsurfaceheader_t*)::dataDesc
001a8b18 b datamap_t* DataMapInit<vehicle_engineparams_t>(vehicle_engineparams_t*)::nameHolder
001a67e0 d datamap_t* DataMapInit<vehicle_engineparams_t>(vehicle_engineparams_t*)::dataDesc
001a8ae8 b datamap_t* DataMapInit<vehicle_steeringparams_t>(vehicle_steeringparams_t*)::nameHolder
001a6380 d datamap_t* DataMapInit<vehicle_steeringparams_t>(vehicle_steeringparams_t*)::dataDesc
001a89d8 b datamap_t* DataMapInit<vehicle_operatingparams_t>(vehicle_operatingparams_t*)::nameHolder
001a5900 d datamap_t* DataMapInit<vehicle_operatingparams_t>(vehicle_operatingparams_t*)::dataDesc
001a8a88 b datamap_t* DataMapInit<vehicle_suspensionparams_t>(vehicle_suspensionparams_t*)::nameHolder
001a6020 d datamap_t* DataMapInit<vehicle_suspensionparams_t>(vehicle_suspensionparams_t*)::dataDesc
001a87d8 b datamap_t* DataMapInit<vphysics_save_cphysicsobject_t>(vphysics_save_cphysicsobject_t*)::nameHolder
001a44e0 d datamap_t* DataMapInit<vphysics_save_cphysicsobject_t>(vphysics_save_cphysicsobject_t*)::dataDesc
001a8918 b datamap_t* DataMapInit<vphysics_save_cphysicsspring_t>(vphysics_save_cphysicsspring_t*)::nameHolder
001a5100 d datamap_t* DataMapInit<vphysics_save_cphysicsspring_t>(vphysics_save_cphysicsspring_t*)::dataDesc
001a81f8 b datamap_t* DataMapInit<vphysics_save_constraintfixed_t>(vphysics_save_constraintfixed_t*)::nameHolder
001a3a60 d datamap_t* DataMapInit<vphysics_save_constraintfixed_t>(vphysics_save_constraintfixed_t*)::dataDesc
001a8228 b datamap_t* DataMapInit<vphysics_save_constrainthinge_t>(vphysics_save_constrainthinge_t*)::nameHolder
001a3b20 d datamap_t* DataMapInit<vphysics_save_constrainthinge_t>(vphysics_save_constrainthinge_t*)::dataDesc
001a82b8 b datamap_t* DataMapInit<vphysics_save_constraintlength_t>(vphysics_save_constraintlength_t*)::nameHolder
001a3fa0 d datamap_t* DataMapInit<vphysics_save_constraintlength_t>(vphysics_save_constraintlength_t*)::dataDesc
001a8288 b datamap_t* DataMapInit<vphysics_save_constraintpulley_t>(vphysics_save_constraintpulley_t*)::nameHolder
001a3e00 d datamap_t* DataMapInit<vphysics_save_constraintpulley_t>(vphysics_save_constraintpulley_t*)::dataDesc
001a8768 b datamap_t* DataMapInit<vphysics_save_motioncontroller_t>(vphysics_save_motioncontroller_t*)::nameHolder
001a4400 d datamap_t* DataMapInit<vphysics_save_motioncontroller_t>(vphysics_save_motioncontroller_t*)::dataDesc
001a8318 b datamap_t* DataMapInit<vphysics_save_constraintragdoll_t>(vphysics_save_constraintragdoll_t*)::nameHolder
001a4180 d datamap_t* DataMapInit<vphysics_save_constraintragdoll_t>(vphysics_save_constraintragdoll_t*)::dataDesc
001a8258 b datamap_t* DataMapInit<vphysics_save_constraintsliding_t>(vphysics_save_constraintsliding_t*)::nameHolder
001a3c40 d datamap_t* DataMapInit<vphysics_save_constraintsliding_t>(vphysics_save_constraintsliding_t*)::dataDesc
001a8898 b datamap_t* DataMapInit<vphysics_save_cshadowcontroller_t>(vphysics_save_cshadowcontroller_t*)::nameHolder
001a4e00 d datamap_t* DataMapInit<vphysics_save_cshadowcontroller_t>(vphysics_save_cshadowcontroller_t*)::dataDesc
001a8168 b datamap_t* DataMapInit<vphysics_save_cphysicsconstraint_t>(vphysics_save_cphysicsconstraint_t*)::nameHolder
001a36c0 d datamap_t* DataMapInit<vphysics_save_cphysicsconstraint_t>(vphysics_save_cphysicsconstraint_t*)::dataDesc
001a89a8 b datamap_t* DataMapInit<vphysics_save_cvehiclecontroller_t>(vphysics_save_cvehiclecontroller_t*)::nameHolder
001a54a0 d datamap_t* DataMapInit<vphysics_save_cvehiclecontroller_t>(vphysics_save_cvehiclecontroller_t*)::dataDesc
001a81c8 b datamap_t* DataMapInit<vphysics_save_constraintaxislimit_t>(vphysics_save_constraintaxislimit_t*)::nameHolder
001a3940 d datamap_t* DataMapInit<vphysics_save_constraintaxislimit_t>(vphysics_save_constraintaxislimit_t*)::dataDesc
001a8198 b datamap_t* DataMapInit<vphysics_save_constraintbreakable_t>(vphysics_save_constraintbreakable_t*)::nameHolder
001a37e0 d datamap_t* DataMapInit<vphysics_save_constraintbreakable_t>(vphysics_save_constraintbreakable_t*)::dataDesc
001a8868 b datamap_t* DataMapInit<vphysics_save_shadowcontrolparams_t>(vphysics_save_shadowcontrolparams_t*)::nameHolder
001a4c00 d datamap_t* DataMapInit<vphysics_save_shadowcontrolparams_t>(vphysics_save_shadowcontrolparams_t*)::dataDesc
001a82e8 b datamap_t* DataMapInit<vphysics_save_constraintballsocket_t>(vphysics_save_constraintballsocket_t*)::nameHolder
001a40c0 d datamap_t* DataMapInit<vphysics_save_constraintballsocket_t>(vphysics_save_constraintballsocket_t*)::dataDesc
001a8138 b datamap_t* DataMapInit<vphysics_save_cphysicsconstraintgroup_t>(vphysics_save_cphysicsconstraintgroup_t*)::nameHolder
001a35a0 d datamap_t* DataMapInit<vphysics_save_cphysicsconstraintgroup_t>(vphysics_save_cphysicsconstraintgroup_t*)::dataDesc
001a6ec0 d qh_new_qhull(int, int, double*, unsigned int, char*, _IO_FILE*, _IO_FILE*)::firstcall
001a9040 b V_pretifymem(float, int, bool)::output
001a9020 b V_pretifymem(float, int, bool)::current
001a9160 b V_pretifynum(long long)::output
001a9140 b V_pretifynum(long long)::current
001af240 b p_read_first_token(_IO_FILE*)::buffer
001aff30 b Bias(float, float)::lastExponent
001b7d70 b pathmatch(char const*, char**, bool, char*, unsigned int)::s_pszDbgPathMatch
001b7d50 b pathmatch(char const*, char**, bool, char*, unsigned int)::s_pszPathMatchEnabled
001a7e60 b GetTmpObjectMatrix(IVP_Real_Object*)::coreShiftMatrix
001a7c00 b InitializeCharacterSets()::s_CharacterSetInitialized
001aa638 b CUtlString::GetEmptyString()::s_emptyString
001aa664 b CUtlSymbol::Initialize()::symbolsInitialized
001afa40 b IVP_Mindist::update_exact_mindist_events(IVP_BOOL, IVP_MINDIST_EVENT_HINT)::count
001a8cc4 b CTraceSolver::SweepSingleConvex()::tm_fmt
001a8cd0 b CTraceSolver::SweepSingleConvex()::tm_fmt
001a8cdc b CTraceSolver::SweepSingleConvex()::tm_fmt
00161120 r IVP_U_Matrix::rotate_invers(IVP_COORDINATE_INDEX, float, IVP_U_Matrix*)::pm
001a7700 d IVP_U_Matrix::rotate(IVP_COORDINATE_INDEX, float, IVP_U_Matrix*)::pm
001a7714 d IVP_U_Matrix3::init_rotated3(IVP_COORDINATE_INDEX, float)::pm
001a7728 d IVP_U_Min_Hash::add(void*, double)::sort_counter
001a8fe0 b CDataManagerBase::GetForFreeByIndex(unsigned short)::__executeCount
0014e924 r CThreadSpinRWLock::TryLockForWrite(unsigned int)::oldValue
0014dfe0 r CPhysicsEnvironment::Save(physsaveparams_t const&)::saveFuncs
0014e020 r CPhysicsEnvironment::Restore(physrestoreparams_t const&)::restoreFuncs
001a83d8 b CPhysicsEnvironment::Simulate(float)::autoMutex__
001af210 b IVP_Material_Manager::get_material_by_index(IVP_Real_Object*, IVP_U_Point const*, int)::simple
001a6e94 d IVV_Cluster_Min_Hash::add(void*, double)::sort_counter
001a8cb0 b CTraceSolverSweptObject::DoSweep()::tm_fmt
001af1f0 b IVP_BetterStatisticsmanager::set_simulation_time(double)::time_of_last_update
001afae0 b CFmtStrN<256, false>::sprintf(char const*, ...)::scAsserted
001a6df8 d ConVarRef::Init(char const*, bool)::bFirst
001aa6c0 b hk_Memory::get_instance()::s_memory_instance
001a8ce8 b simplex_t::SolveGJKSet(simplexvert_t const&, Vector*)::tm_fmt
001a6e82 d CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
001a43c0 d CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
001a6de0 d CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
001a8c98 b CTraceIVP::SupportMap(Vector const&, Vector*) const::tm_fmt
001a8ca4 b CTraceIVP::SupportMap(Vector const&, Vector*) const::tm_fmt
001a8d6c b CTraceIVP::SupportMapCached(Vector const&, Vector*) const::tm_fmt
